{"version":3,"file":"CreateChannelProvider-e9f3d260.js","sources":["../src/smart-components/CreateChannel/types.ts","../src/smart-components/CreateChannel/context/CreateChannelProvider.tsx"],"sourcesContent":["export enum CHANNEL_TYPE {\n  GROUP = 'group',\n  SUPERGROUP = 'supergroup',\n  BROADCAST = 'broadcast',\n}\n","import React, { useState } from 'react';\nimport { User } from '@sendbird/chat';\nimport type {\n  GroupChannel,\n  GroupChannelCreateParams,\n  SendbirdGroupChat,\n} from '@sendbird/chat/groupChannel';\n\nimport { getCreateGroupChannel } from '../../../lib/selectors';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { CHANNEL_TYPE } from '../types';\n\nconst CreateChannelContext = React.createContext(undefined);\n\nexport interface UserListQuery {\n  hasNext?: boolean;\n  next(): Promise<Array<User>>;\n}\n\ntype OverrideInviteUserType = {\n  users: Array<string>;\n  onClose: () => void;\n  channelType: CHANNEL_TYPE;\n};\n\nexport interface CreateChannelProviderProps {\n  children?: React.ReactElement;\n  onCreateChannel(channel: GroupChannel): void;\n  overrideInviteUser?(params: OverrideInviteUserType): void;\n  onBeforeCreateChannel?(users: Array<string>): GroupChannelCreateParams;\n  userListQuery?(): UserListQuery;\n}\n\ntype CreateChannel = (channelParams: GroupChannelCreateParams) => Promise<GroupChannel>;\n\nexport interface CreateChannelContextInterface {\n  onBeforeCreateChannel?(users: Array<string>): GroupChannelCreateParams;\n  createChannel: CreateChannel;\n  sdk: SendbirdGroupChat;\n  userListQuery?(): UserListQuery;\n  overrideInviteUser?(params: OverrideInviteUserType): void;\n  onCreateChannel?(channel: GroupChannel): void;\n  step: number,\n  setStep: React.Dispatch<React.SetStateAction<number>>,\n  type: CHANNEL_TYPE,\n  setType: React.Dispatch<React.SetStateAction<CHANNEL_TYPE>>,\n}\n\nconst CreateChannelProvider: React.FC<CreateChannelProviderProps> = (props: CreateChannelProviderProps) => {\n  const {\n    children,\n    onCreateChannel,\n    onBeforeCreateChannel,\n    overrideInviteUser,\n    userListQuery,\n  } = props;\n\n  const store = useSendbirdStateContext();\n  const userListQuery_ = store?.config?.userListQuery;\n  const createChannel: (channelParams: GroupChannelCreateParams)\n    => Promise<GroupChannel> = getCreateGroupChannel(store);\n\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState(CHANNEL_TYPE.GROUP);\n\n  return (\n    <CreateChannelContext.Provider value={{\n      onBeforeCreateChannel,\n      createChannel,\n      onCreateChannel,\n      overrideInviteUser,\n      userListQuery: userListQuery || userListQuery_,\n      step,\n      setStep,\n      type,\n      setType,\n    }}>\n      {children}\n    </CreateChannelContext.Provider>\n  );\n}\n\nconst useCreateChannelContext = (): CreateChannelContextInterface => (\n  React.useContext(CreateChannelContext)\n);\n\nexport {\n  CreateChannelProvider,\n  useCreateChannelContext,\n};\n"],"names":["CHANNEL_TYPE","CreateChannelContext","React","createContext","undefined","CreateChannelProvider","props","children","onCreateChannel","onBeforeCreateChannel","overrideInviteUser","userListQuery","store","useSendbirdStateContext","userListQuery_","_a","config","createChannel","getCreateGroupChannel","_b","useState","step","setStep","_c","GROUP","type","setType","useCreateChannelContext","useContext"],"mappings":";;;;IAAYA,aAAZ;;AAAA,CAAA,UAAYA,YAAZ,EAAwB;AACtBA,EAAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAA,CAAA;AACAA,EAAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAA,CAAA;AACAA,EAAAA,YAAA,CAAA,WAAA,CAAA,GAAA,WAAA,CAAA;AACD,CAJD,EAAYA,YAAY,KAAZA,YAAY,GAIvB,EAJuB,CAAxB,CAAA;;ACYA,IAAMC,oBAAoB,gBAAGC,cAAK,CAACC,aAAN,CAAoBC,SAApB,CAA7B,CAAA;;AAoCA,IAAMC,qBAAqB,GAAyC,UAACC,KAAD,EAAkC;;;AAElG,EAAA,IAAAC,QAAQ,GAKND,KAAK,CALCC,QAAR;AAAA,MACAC,eAAe,GAIbF,KAAK,CAJQE,eADf;AAAA,MAEAC,qBAAqB,GAGnBH,KAAK,CAHcG,qBAFrB;AAAA,MAGAC,kBAAkB,GAEhBJ,KAAK,CAAAI,kBALP;AAAA,MAIAC,aAAa,GACXL,KAAK,CAAAK,aALP,CAAA;EAOF,IAAMC,KAAK,GAAGC,uBAAuB,EAArC,CAAA;AACA,EAAA,IAAMC,cAAc,GAAG,CAAAC,EAAA,GAAAH,KAAK,KAAL,IAAA,IAAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAK,CAAEI,MAAP,MAAe,IAAf,IAAeD,EAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAeA,EAAA,CAAAJ,aAAtC,CAAA;AACA,EAAA,IAAMM,aAAa,GACUC,qBAAqB,CAACN,KAAD,CADlD,CAAA;;AAGM,EAAA,IAAAO,EAAA,GAAkBC,QAAQ,CAAC,CAAD,CAA1B;AAAA,MAACC,IAAI,GAAAF,EAAA,CAAA,CAAA,CAAL;AAAA,MAAOG,OAAO,GAAAH,EAAA,CAAA,CAAA,CAAd,CAAA;;AACA,EAAA,IAAAI,EAAkB,GAAAH,QAAQ,CAACpB,YAAY,CAACwB,KAAd,CAA1B;AAAA,MAACC,IAAI,GAAAF,EAAA,CAAA,CAAA,CAAL;AAAA,MAAOG,OAAO,QAAd,CAAA;;EAEN,oBACExB,cAAA,CAAA,aAAA,CAAC,oBAAD,CAAsB,QAAtB,EAAA;AAA+B,IAAA,KAAK,EAAE;AACpCO,MAAAA,qBAAqB,EAAAA,qBADe;AAEpCQ,MAAAA,aAAa,EAAAA,aAFuB;AAGpCT,MAAAA,eAAe,EAAAA,eAHqB;AAIpCE,MAAAA,kBAAkB,EAAAA,kBAJkB;MAKpCC,aAAa,EAAEA,aAAa,IAAIG,cALI;AAMpCO,MAAAA,IAAI,EAAAA,IANgC;AAOpCC,MAAAA,OAAO,EAAAA,OAP6B;AAQpCG,MAAAA,IAAI,EAAAA,IARgC;AASpCC,MAAAA,OAAO,EAAAA,OAAAA;AAT6B,KAAA;AAAtC,GAAA,EAWGnB,QAXH,CADF,CAAA;AAeD,EAhCD;;AAkCMoB,IAAAA,uBAAuB,GAAG,YAAqC;AAAA,EAAA,OACnEzB,cAAK,CAAC0B,UAAN,CAAiB3B,oBAAjB,CADmE,CAAA;AAEpE;;;;"}