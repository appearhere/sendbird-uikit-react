{"version":3,"file":"OperatorUI.js","sources":["../../../src/smart-components/OpenChannelSettings/components/OperatorUI/DeleteOpenChannel.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/OperatorsModal.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/AddOperatorsModal.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/OperatorList.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/MutedParticipantsModal.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/MutedParticipantList.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/BannedUsersModal.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/BannedUserList.tsx","../../../src/smart-components/OpenChannelSettings/components/OperatorUI/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useState,\n  useContext,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\n\nexport default function DeleteChannel(): ReactElement {\n  const [showDeleteChannelModal, setShowDeleteChannelModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  const globalState = useSendbirdStateContext();\n  const isOnline = globalState?.config?.isOnline;\n  const logger = globalState?.config?.logger;\n\n  const { channel, onDeleteChannel } = useOpenChannelSettingsContext();\n\n  const deleteChannel = () => {\n    channel?.delete().then((response) => {\n      logger.info('OpenChannelSettings: Delete channel success', response);\n      if (onDeleteChannel) {\n        onDeleteChannel(channel);\n      }\n    }).catch((error) => {\n      logger.warning('OpenChannelSettings: Delete channel failed', error);\n    });\n  }\n  return (\n    <>\n      <div\n        className={\n          `sendbird-openchannel-settings__panel-item\n          sendbird-openchannel-settings__delete-channel\n            ${!isOnline ? 'sendbird-openchannel-settings__panel-item__disabled' : ''}`\n        }\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n        onClick={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n      >\n        <Icon\n          type={IconTypes.DELETE}\n          fillColor={IconColors.ERROR}\n          className={[\n            'sendbird-openchannel-settings__panel-icon-left',\n            'sendbird-openchannel-settings__panel-icon__delete',\n          ].join(' ')}\n          height=\"24px\"\n          width=\"24px\"\n        />\n        <Label\n          type={LabelTypography.SUBTITLE_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL}\n        </Label>\n      </div>\n      {\n        showDeleteChannelModal && (\n          <Modal\n            isFullScreenOnMobile\n            onCancel={() => {\n              setShowDeleteChannelModal(false);\n            }}\n            onSubmit={() => {\n              deleteChannel();\n            }}\n            titleText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE}\n            submitText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT}\n          </Modal>\n        )\n      }\n    </>\n  )\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorListModal({ onCancel }: Props): ReactElement {\n  const [users, setUsers] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 20,\n    });\n    operatorListQuery.next().then((participants) => {\n      setUsers(participants);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        isFullScreenOnMobile\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL}\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-users__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next().then((o) => {\n                setUsers([\n                  ...users,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          {\n            users.map((operator) => (\n              <UserListItem\n                currentUser={currentUserId}\n                user={operator}\n                key={operator.userId}\n                action={({ parentRef, actionRef }) => (\n                  currentUserId !== operator?.userId\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentContainRef={parentRef}\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                channel?.removeOperators([operator.userId]).then(() => {\n                                  setUsers(users.filter(({ userId }) => {\n                                    return userId !== operator.userId;\n                                  }));\n                                });\n                                closeDropdown();\n                              }}\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    ) : null\n                )}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(participants: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [participants, setParticipants] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState({});\n  const [participantQuery, setParticipantQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useOpenChannelSettingsContext();\n\n  useEffect(() => {\n    const participantListQuery = channel?.createParticipantListQuery({\n      limit: 20,\n    });\n    participantListQuery.next().then((users) => {\n      setParticipants(users);\n    });\n    setParticipantQuery(participantListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedUsers).filter((m) => selectedUsers[m]).length;\n  return (\n    <>\n      <Modal\n        isFullScreenOnMobile\n        type={ButtonTypes.PRIMARY}\n        submitText={stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON}\n        onCancel={onCancel}\n        onSubmit={() => {\n          const users = Object.keys(selectedUsers).filter((m) => selectedUsers[m]);\n          channel?.addOperators(users).then(() => {\n            onSubmit(users);\n          })\n        }}\n        titleText={stringSet.OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS}\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`}\n        </Label>\n        <div\n          className=\"sendbird-more-users__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = participantQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              participantQuery.next().then((o) => {\n                setParticipants([\n                  ...participants,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          {\n            participants.map((participant) => {\n              const isOperator = channel?.operators.find((operator) => operator?.userId === participant?.userId) ? true : false;\n              return (\n                <UserListItem\n                  checkBox\n                  checked={selectedUsers[participant.userId] || isOperator}\n                  disabled={isOperator}\n                  isOperator={isOperator}\n                  onChange={\n                    (event) => {\n                      const modifiedSelectedUsers = {\n                        ...selectedUsers,\n                        [event.target.id]: event.target.checked,\n                      };\n                      if (!event.target.checked) {\n                        delete modifiedSelectedUsers[event.target.id];\n                      }\n                      setSelectedUsers(modifiedSelectedUsers);\n                    }\n                  }\n                  user={participant}\n                  key={participant.userId}\n                />\n              );\n            })\n          }\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\n\nimport { UserListItem } from '../ParticipantUI/ParticipantItem';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport IconButton from '../../../../ui/IconButton';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport OperatorListModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\nconst OperatorList = (): ReactElement => {\n  const [showAdd, setShowAdd] = useState<boolean>(false);\n  const [showMore, setShowMore] = useState<boolean>(false);\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useOpenChannelSettingsContext();\n\n  return (\n    <div>\n      {\n        channel?.operators?.slice(0, 10).map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={currentUserId}\n            action={({ actionRef }) => (\n              currentUserId !== operator?.userId\n                ? (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-openchannel-operator-list__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentRef={actionRef}\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.removeOperators([operator.userId]).then(() => {\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                        </MenuItem>\n                        <MenuItem\n                          onClick={() => {\n                            channel?.muteUser(operator).then(() => {\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__MUTE}\n                        </MenuItem>\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(operator).then(() => {\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__BAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                ) : null\n            )}\n          />\n        ))\n      }\n      <div className=\"sendbird-openchannel-operator-list__footer\">\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          channel?.operators?.length > 10 && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <>\n            <OperatorListModal\n              onCancel={() => {\n                setShowMore(false);\n              }}\n            />\n          </>\n        )\n      }\n      {\n        showAdd && (\n          <>\n            <AddOperatorsModal\n              onCancel={() => setShowAdd(false)}\n              onSubmit={() => {\n                setShowAdd(false);\n              }}\n            />\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedParticipantsModal({\n  onCancel,\n}: Props): ReactElement {\n  const [mutedUsers, setMutedUsers] = useState([]);\n  const [userListQuery, setUserListQuery] = useState(null);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const mutedUserListQuery = channel?.createMutedUserListQuery({\n      limit: 10,\n    });\n    mutedUserListQuery.next().then((users) => {\n      setMutedUsers(users);\n    });\n    setUserListQuery(mutedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userListQuery.next().then((o) => {\n                setMutedUsers([\n                  ...mutedUsers,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          {\n            mutedUsers.map((mutedUser) => (\n              <UserListItem\n                currentUser={currentUserId}\n                user={mutedUser}\n                key={mutedUser.userId}\n                action={({ actionRef }) => (\n                  mutedUser?.userId !== currentUserId\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                channel?.unmuteUser(mutedUser).then(() => {\n                                  closeDropdown();\n                                  setMutedUsers(mutedUsers.filter((u) => {\n                                    return (u.userId !== mutedUser.userId);\n                                  }));\n                                });\n                              }}\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    ) : null\n                )}\n              />\n            ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport { UserListItem } from '../ParticipantUI/ParticipantItem';\nimport MutedParticipantsModal from './MutedParticipantsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nexport const MutedParticipantList = (): ReactElement => {\n  const [mutedUsers, setMutedUsers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setMutedUsers([]);\n      return;\n    }\n    const mutedUserListQuery = channel?.createMutedUserListQuery({\n      limit: 10,\n    });\n    mutedUserListQuery.next().then((members) => {\n      setMutedUsers(members);\n      setHasNext(mutedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMutedUsers([]);\n      return;\n    }\n\n    const mutedUserListQuery = channel?.createMutedUserListQuery({\n      limit: 10,\n    });\n    mutedUserListQuery.next().then((members) => {\n      setMutedUsers(members);\n      setHasNext(mutedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        mutedUsers.map((mutedUser) => (\n          <UserListItem\n            key={mutedUser.userId}\n            user={mutedUser}\n            currentUser={currentUserId}\n            isOperator={channel?.isOperator(mutedUser.userId)}\n            action={({ actionRef }) => (\n              mutedUser?.userId !== currentUserId\n                ? (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                        parentRef={actionRef}\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.unmuteUser(mutedUser).then(() => {\n                              refreshList();\n                              closeDropdown();\n                            })\n                          }}\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                ) : null\n            )}\n          />\n        ))\n      }\n      {\n        mutedUsers && mutedUsers.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-muted-participant-list__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedParticipantsModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nexport default MutedParticipantList;\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedUsersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [userListQuery, setUserListQuery] = useState(null);\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const currentUserId = state?.config?.userId;\n\n  useEffect(() => {\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setBannedUsers(users);\n    });\n    setUserListQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        isFullScreenOnMobile\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userListQuery.next().then((o) => {\n                setBannedUsers([\n                  ...bannedUsers,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          {\n            bannedUsers.map((bannedUser) => (\n              <UserListItem\n                user={bannedUser}\n                key={bannedUser.userId}\n                action={({ actionRef }) => (\n                  bannedUser?.userId !== currentUserId\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                channel?.unbanUser(bannedUser).then(() => {\n                                  closeDropdown();\n                                  setBannedUsers(bannedUsers.filter((u) => {\n                                    return (u.userId !== bannedUser.userId);\n                                  }));\n                                })\n                              }}\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNBAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    ) : null\n                )\n                }\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport BannedUsersModal from './BannedUsersModal';\nimport { UserListItem } from '../ParticipantUI/ParticipantItem';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nexport const BannedUserList = (): ReactElement => {\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const currentUserId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setBannedUsers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setBannedUsers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setBannedUsers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setBannedUsers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        bannedUsers.map((bannedUser) => (\n          <UserListItem\n            key={bannedUser.userId}\n            user={bannedUser}\n            isOperator={channel?.isOperator(bannedUser.userId)}\n            action={({ actionRef }) => (\n              bannedUser?.userId !== currentUserId\n                ? (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentRef={actionRef}\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.unbanUser(bannedUser).then(() => {\n                              closeDropdown();\n                              refreshList();\n                            })\n                          }}\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNBAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                ) : null\n            )}\n          />\n        ))\n      }\n      {\n        bannedUsers && bannedUsers.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div className=\"sendbird-channel-settings-banned-user-list__footer\" >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedUsersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\n\nexport default BannedUserList;\n","import React, { useContext } from 'react';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, {\n  IconTypes,\n  IconColors,\n} from '../../../../ui/Icon';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport OpenChannelProfile from '../OpenChannelProfile';\nimport DeleteChannel from './DeleteOpenChannel';\nimport ParticipantsAccordion from '../ParticipantUI';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport OperatorList from './OperatorList';\nimport MutedParticipantList from './MutedParticipantList';\nimport BannedUserList from './BannedUserList';\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport interface OperatorUIProps {\n  renderChannelProfile?: () => React.ReactElement;\n}\n\nexport const OperatorUI: React.FC<OperatorUIProps> = ({\n  renderChannelProfile,\n}: OperatorUIProps) => {\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    onCloseClick,\n    channel,\n  } = useOpenChannelSettingsContext();\n  return (\n    <>\n      <div className=\"sendbird-openchannel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <Icon\n          className=\"sendbird-openchannel-settings__close-icon\"\n          type={IconTypes.CLOSE}\n          height=\"24px\"\n          width=\"24px\"\n          onClick={() => {\n            onCloseClick();\n          }}\n        />\n      </div>\n      <div className=\"sendbird-openchannel-settings__profile\">\n        {\n          renderChannelProfile?.() || (\n            <OpenChannelProfile />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-settings__url\">\n        <Icon\n          className=\"sendbird-openchannel-settings__copy-icon\"\n          type={IconTypes.COPY}\n          height=\"22px\"\n          width=\"22px\"\n          onClick={() => {\n            copyToClipboard(channel?.url);\n          }}\n        />\n        <Label\n          className=\"sendbird-openchannel-settings__url-label\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__OPERATOR_URL}\n        </Label>\n        <Label\n          className=\"sendbird-openchannel-settings__url-value\"\n          type={LabelTypography.SUBTITLE_2}\n        >\n          {channel?.url}\n        </Label>\n      </div>\n      <AccordionGroup>\n        <Accordion\n          className=\"sendbird-openchannel-settings__operators-list\"\n          id=\"operators\"\n          renderTitle={() => (\n            <>\n              <Icon\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n                type={IconTypes.OPERATOR}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <OperatorList />\n            </>\n          )}\n        />\n        <Accordion\n          className=\"sendbird-channel-settings__operators-list\"\n          id=\"participants\"\n          renderTitle={() => (\n            <>\n              <Icon\n                type={IconTypes.MEMBERS}\n                fillColor={IconColors.PRIMARY}\n                width={24}\n                height={24}\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <ParticipantsAccordion isOperatorView />\n            </>\n          )}\n        />\n        <Accordion\n          className=\"sendbird-channel-settings__operators-list\"\n          id=\"mutedMembers\"\n          renderTitle={() => (\n            <>\n              <Icon\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n                type={IconTypes.MUTE}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <MutedParticipantList />\n            </>\n          )}\n        />\n        <Accordion\n          className=\"sendbird-channel-settings__operators-list\"\n          id=\"bannedUsers\"\n          renderTitle={() => (\n            <>\n              <Icon\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n                type={IconTypes.BAN}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <BannedUserList />\n            </>\n          )}\n        />\n      </AccordionGroup>\n      <DeleteChannel />\n    </>\n  );\n};\n\nexport default OperatorUI;\n"],"names":["DeleteChannel","_c","useState","showDeleteChannelModal","setShowDeleteChannelModal","stringSet","useContext","LocalizationContext","globalState","useSendbirdStateContext","isOnline","_a","config","logger","_b","_d","useOpenChannelSettingsContext","channel","onDeleteChannel","deleteChannel","delete","then","response","info","catch","error","warning","React","concat","IconTypes","DELETE","IconColors","ERROR","join","LabelTypography","SUBTITLE_1","LabelColors","ONBACKGROUND_1","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT","OperatorListModal","onCancel","users","setUsers","operatorQuery","setOperatorQuery","state","currentUserId","userId","useEffect","operatorListQuery","createOperatorListQuery","limit","next","participants","OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","map","operator","parentRef","actionRef","toggleDropdown","MORE","CONTENT_INVERSE","closeDropdown","removeOperators","filter","OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","AddOperatorsModal","onSubmit","setParticipants","selectedUsers","setSelectedUsers","participantQuery","setParticipantQuery","participantListQuery","createParticipantListQuery","selectedCount","Object","keys","m","length","ButtonTypes","PRIMARY","CHANNEL_SETTING__OPERATORS__ADD_BUTTON","addOperators","OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTED","participant","isOperator","operators","find","event","modifiedSelectedUsers","__assign","id","checked","OperatorList","showAdd","setShowAdd","_e","showMore","setShowMore","slice","UserListItem","muteUser","OPEN_CHANNEL_SETTING__MODERATION__MUTE","banUser","OPEN_CHANNEL_SETTING__MODERATION__BAN","SECONDARY","ButtonSizes","SMALL","OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD","MutedParticipantsModal","mutedUsers","setMutedUsers","userListQuery","setUserListQuery","mutedUserListQuery","createMutedUserListQuery","noop","OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE","mutedUser","unmuteUser","u","OPEN_CHANNEL_SETTING__MODERATION__UNMUTE","MutedParticipantList","setHasNext","showModal","setShowModal","members","refreshList","useCallback","SUBTITLE_2","OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE","OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL","BannedUsersModal","bannedUsers","setBannedUsers","bannedUserListQuery","createBannedUserListQuery","bannedUser","unbanUser","OPEN_CHANNEL_SETTING__MODERATION__UNBAN","BannedUserList","OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE","OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL","copyToClipboard","text","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","OperatorUI","renderChannelProfile","onCloseClick","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","OpenChannelProfile","COPY","url","CAPTION_2","ONBACKGROUND_2","OPEN_CHANNEL_SETTINGS__OPERATOR_URL","OPERATOR","OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE","MEMBERS","OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE","ParticipantsAccordion","MUTE","BAN","OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE"],"mappings":"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"}