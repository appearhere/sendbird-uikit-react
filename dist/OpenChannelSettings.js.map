{"version":3,"file":"OpenChannelSettings.js","sources":["../src/ui/ChannelAvatar/OpenChannelAvatar.tsx","../src/smart-components/OpenChannelSettings/components/EditDetailsModal.tsx","../src/smart-components/OpenChannelSettings/components/ChannelProfile.tsx","../src/smart-components/OpenChannelSettings/components/ParticipantsModal.tsx","../src/smart-components/OpenChannelSettings/components/ParticipantsAccordion.tsx","../src/smart-components/OpenChannelSettings/components/DeleteChannel.tsx","../src/smart-components/OpenChannelSettings/components/ParticipantsList.tsx","../src/smart-components/OpenChannelSettings/components/InvalidChannel.tsx","../src/smart-components/OpenChannelSettings/index.tsx"],"sourcesContent":["import React, { useMemo, useContext } from 'react';\n\nimport Avatar from '../Avatar/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  theme: string;\n  height?: number;\n  width?: number;\n}\n\nfunction ChannelAvatar({\n  channel,\n  theme,\n  height = 56,\n  width = 56,\n}: Props): JSX.Element{\n  const { stringSet } = useContext(LocalizationContext);\n  const memoizedAvatar = useMemo(() => {\n    return (\n      <Avatar\n        className=\"sendbird-chat-header__avatar--open-channel\"\n        src={utils.getOpenChannelAvatar(channel)}\n        width={`${width}px`}\n        height={`${height}px`}\n        alt={channel.name || stringSet.OPEN_CHANNEL_SETTINGS__NO_TITLE}\n      />\n    );\n  }, [channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n","import React, {\n  useState,\n  useRef,\n  useContext,\n  ReactElement,\n} from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\n\ninterface Props {\n  onSubmit(newFile: File, newTitle: string): void;\n  onCancel(): void;\n  channel: SendBird.OpenChannel;\n  theme: string;\n}\n\nconst EditDetails = (props: Props): ReactElement => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <OpenChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditDetails;\n","import React, {\n  ReactElement,\n  useContext,\n  useState,\n} from 'react';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\nimport EditDetailsModal from './EditDetailsModal';\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  disabled: boolean;\n  theme: string;\n  onChannelInfoChange(currentImg: File, currentTitle: string): void;\n}\n\nexport default function ChannelProfile(props: Props): ReactElement {\n  const {\n    disabled,\n    channel,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const title = channel.name;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className=\"sendbird-openchannel-profile\">\n      <div className=\"sendbird-openchannel-profile--inner\">\n        <div className=\"sendbird-openchannel-profile__avatar\">\n          <OpenChannelAvatar\n            channel={channel}\n            theme={theme}\n            height={80}\n            width={80}\n          />\n        </div>\n        <Label\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n          className=\"sendbird-openchannel-profile__title\"\n        >\n          {title || stringSet.OPEN_CHANNEL_SETTINGS__NO_TITLE}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-openchannel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport Modal from '../../../ui/Modal';\nimport UserListItem from '../../../ui/UserListItem';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { noop } from '../../../utils/utils';\n\ninterface Props {\n  currentUser: string;\n  hideModal(): void;\n  channel: SendBird.OpenChannel;\n}\n\nexport default function ParticipantsModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<SendBird.User>|null>([]);\n  const [participantListQuery, setParticipantListQuery] = useState<SendBird.ParticipantListQuery | null>(null);\n  useEffect(() => {\n    if (!channel || !channel.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel.createParticipantListQuery();\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next((participantList, error) => {\n      if (error) {\n        return;\n      }\n      setParticipants(participantList);\n    });\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = participantListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              participantListQuery.next((fetchedParticipants, error) => {\n                if (error) {\n                  return;\n                }\n                setParticipants([\n                  ...participants,\n                  ...fetchedParticipants,\n                ])\n              });\n            }\n          }}\n        >\n          { participants.map((p) => (\n            <UserListItem\n              user={p}\n              key={p.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Accordion from '../../../ui/Accordion';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport ParticipantsModal from './ParticipantsModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\ninterface UserListItemProps {\n  member: SendBird.User;\n  currentUser?: string;\n}\n\nexport const UserListItem = ({\n  member,\n  currentUser = '',\n}: UserListItemProps): ReactElement => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-participants-accordion__member\">\n      <div className=\"sendbird-participants-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      disableMessaging\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  currentUser: string;\n}\n\nexport default function ParticipantsAccordion({ channel, currentUser }: Props): ReactElement {\n  const [participants, setParticipants] = useState([]);\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel || !channel.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel.createParticipantListQuery();\n    participantListQuery.next((participantList, error) => {\n      if (error) {\n        return;\n      }\n      setParticipants(participantList);\n    });\n  }, [channel]);\n\n  return (\n    <Accordion\n      className=\"sendbird-participants-accordion\"\n      id=\"participants\"\n      renderTitle={() => (\n        <>\n          <Icon\n            type={IconTypes.MEMBERS}\n            fillColor={IconColors.PRIMARY}\n            width={24}\n            height={24}\n            className=\"sendbird-openchannel-settings__accordion-icon\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE}\n          </Label>\n        </>\n      )}\n      renderContent={() => (\n        <div className=\"\">\n          <div className=\"sendbird-participants-accordion__list\">\n            {\n              participants.slice(0, SHOWN_MEMBER_MAX).map((p) => (\n                <UserListItem\n                  member={p}\n                  currentUser={currentUser}\n                  key={p.userId}\n                />\n              ))\n            }\n            {\n              (participants && participants.length === 0)\n                ? (\n                    <Label\n                      className=\"sendbird-channel-settings__empty-list\"\n                      type={LabelTypography.SUBTITLE_2}\n                      color={LabelColors.ONBACKGROUND_3}\n                    >\n                      {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n                    </Label>\n                ): null\n            }\n          </div>\n          {\n            participants.length >= SHOWN_MEMBER_MAX && (\n              <div className=\"sendbird-participants-accordion__footer\">\n                <Button\n                  className=\"sendbird-participants-accordion__footer__all-participants\"\n                  type={ButtonTypes.SECONDARY}\n                  size={ButtonSizes.SMALL}\n                  onClick={() => setShowMoreModal(true)}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__SEE_ALL}\n                </Button>\n                {\n                  showMoreModal && (\n                    <ParticipantsModal\n                      currentUser={currentUser}\n                      hideModal={() => {\n                        setShowMoreModal(false);\n                      }}\n                      channel={channel}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n      )}\n    />\n  );\n}\n","import React, {\n  ReactElement,\n  useState,\n  useContext,\n} from 'react';\n\nimport Modal from '../../../ui/Modal';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes } from '../../../ui/Icon';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  isOnline: boolean;\n  onDeleteChannel(): void;\n}\n\nexport default function DeleteChannel({\n  isOnline,\n  onDeleteChannel,\n}: Props): ReactElement {\n  const [showDeleteChannelModal, setShowDeleteChannelModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <>\n      <div\n        className={\n          `sendbird-openchannel-settings__panel-item\n          sendbird-openchannel-settings__delete-channel\n            ${!isOnline ? 'sendbird-openchannel-settings__panel-item__disabled' : ''}`\n        }\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n        onClick={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n      >\n        <Icon\n          type={IconTypes.DELETE}\n          className={[\n            'sendbird-openchannel-settings__panel-icon-left',\n            'sendbird-openchannel-settings__panel-icon__delete',\n          ].join(' ')}\n          height=\"24px\"\n          width=\"24px\"\n        />\n        <Label\n          type={LabelTypography.SUBTITLE_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL}\n        </Label>\n      </div>\n      {\n        showDeleteChannelModal && (\n          <Modal\n            onCancel={() => {\n              setShowDeleteChannelModal(false);\n            }}\n            onSubmit={() => {\n              onDeleteChannel();\n            }}\n            submitText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT}\n            titleText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE}\n          />\n        )\n      }\n    </>\n  )\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\n\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nimport { UserListItem } from './ParticipantsAccordion';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  onCloseClick(): void;\n  currentUser: string;\n}\n\nexport default function ParticipantsList({\n  channel,\n  onCloseClick,\n  currentUser,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<SendBird.User>|null>([]);\n  const [participantListQuery, setParticipantListQuery] = useState<SendBird.ParticipantListQuery | null>(null);\n  useEffect(() => {\n    if (!channel || !channel.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel.createParticipantListQuery();\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next((participantList, error) => {\n      if (error) {\n        return;\n      }\n      setParticipants(participantList);\n    });\n  }, [channel]);\n  return (\n    <div className=\"sendbird-openchannel-settings__participant\">\n      <div className=\"sendbird-openchannel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE}\n        </Label>\n        <Icon\n          type={IconTypes.CLOSE}\n          className=\"sendbird-openchannel-settings__close-icon\"\n          height=\"24px\"\n          width=\"24px\"\n          onClick={() => {\n            onCloseClick();\n          }}\n        />\n      </div>\n      <div\n        className=\"sendbird-openchannel-settings__participants-list\"\n        onScroll={(e) => {\n          const { hasNext } = participantListQuery;\n          const target = e.target as HTMLTextAreaElement;\n          const fetchMore = (\n            target.clientHeight + target.scrollTop === target.scrollHeight\n          );\n\n          if (hasNext && fetchMore) {\n            participantListQuery.next((fetchedParticipants, error) => {\n              if (error) {\n                return;\n              }\n              setParticipants([\n                ...participants,\n                ...fetchedParticipants,\n              ])\n            });\n          }\n        }}\n      >\n        <div>\n          {\n            participants.map((p: SendBird.User) => (\n              <UserListItem\n                member={p}\n                currentUser={currentUser}\n                key={p.userId}\n              />\n            ))\n          }\n          {\n            (participants && participants.length === 0)\n              ? (\n                  <Label\n                    className=\"sendbird-channel-settings__empty-list\"\n                    type={LabelTypography.SUBTITLE_2}\n                    color={LabelColors.ONBACKGROUND_3}\n                  >\n                    {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n                  </Label>\n              ): null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { ReactElement, useContext } from 'react'\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nimport PlaceHolder from '../../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../../ui/PlaceHolder/type';\n\ninterface Props {\n  onCloseClick?(): void;\n}\n\nexport default function InvalidChannel({\n  onCloseClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-openchannel-settings\">\n      <div className=\"sendbird-openchannel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <Icon\n          type={IconTypes.CLOSE}\n          className=\"sendbird-openchannel-settings__close-icon\"\n          height=\"24px\"\n          width=\"24px\"\n          onClick={() => {\n            onCloseClick();\n          }}\n        />\n      </div>\n      <div className=\"sendbird-openchannel-settings__placeholder\">\n        <PlaceHolder type={PlaceHolderTypes.WRONG} />\n      </div>\n    </div>\n  )\n}\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { OpenChannelSettingsProps } from '../../index';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport selectors from '../../lib/selectors';\n\nimport { copyToClipboard } from '../../utils'\n\nimport './index.scss';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes } from '../../ui/Icon';\nimport ChannelProfile from './components/ChannelProfile';\nimport ParticipantsAccordion from './components/ParticipantsAccordion';\nimport DeleteChannel from './components/DeleteChannel';\nimport ParticipantsList from './components/ParticipantsList';\nimport InvalidChannel from './components/InvalidChannel';\nimport { AccordionGroup } from '../../ui/Accordion';\nimport { noop } from '../../utils/utils';\n\nconst emptyLogger = () => ({\n  info: noop,\n  error: noop,\n  warning: noop,\n});\n\ninterface Props extends OpenChannelSettingsProps {\n  logger: SendbirdUIKit.Logger;\n  sdk: SendBird.SendBirdInstance;\n  theme: string;\n  user: SendBird.User;\n  isOnline: boolean;\n}\n\nfunction OpenChannelSettings(props: Props) {\n  const {\n    channelUrl,\n    onCloseClick = noop,\n    onBeforeUpdateChannel,\n    onChannelModified = noop,\n    renderChannelProfile,\n    renderUserProfile,\n    onDeleteChannel,\n    disableUserProfile = false,\n    logger = emptyLogger(),\n    sdk,\n    theme,\n    user,\n    isOnline,\n  } = props;\n\n  const currentUser = user.userId;\n  const [channel, setChannel] = useState<SendBird.OpenChannel | null>(null);\n  const { stringSet } = useContext(LocalizationContext);\n  useEffect(() => {\n    if (!channelUrl || !sdk || !sdk.getConnectionState) {\n      setChannel(null);\n      return;\n    }\n\n    sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n      if (!error) {\n        setChannel(openChannel);\n      } else {\n        setChannel(null);\n      }\n    });\n  }, [channelUrl, sdk])\n  if (!channel) {\n    return (\n      <InvalidChannel\n        onCloseClick={() => {\n          logger.info('OpenChannelSettings: Click close');\n          if (onCloseClick) {\n            onCloseClick();\n          }\n        }}\n      />\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-openchannel-settings\"\n      disableUserProfile={disableUserProfile}\n      renderUserProfile={renderUserProfile}\n    >\n      {\n        channel.isOperator(user)\n          ? (\n            <>\n              <div className=\"sendbird-openchannel-settings__header\">\n                <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n                  {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n                </Label>\n                <Icon\n                  className=\"sendbird-openchannel-settings__close-icon\"\n                  type={IconTypes.CLOSE}\n                  height=\"24px\"\n                  width=\"24px\"\n                  onClick={() => {\n                    onCloseClick();\n                  }}\n                />\n              </div>\n              <div className=\"sendbird-openchannel-settings__profile\">\n              {\n                renderChannelProfile\n                  ? renderChannelProfile({ channel, user })\n                  : (\n                    <ChannelProfile\n                      disabled={!isOnline}\n                      channel={channel}\n                      theme={theme}\n                      onChannelInfoChange={(currentImg: File, currentTitle: string) => {\n                        logger.info('ChannelSettings: Channel information being updated');\n                        if (onBeforeUpdateChannel) {\n                          const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                          logger.info('ChannelSettings: onBeforeUpdateChannel', params);\n                          channel.updateChannel(params, (openChannel) => {\n                            onChannelModified(openChannel);\n                            // setChannel(openChannel) => alone not working\n                            setChannel(null);\n                            setChannel(openChannel);\n                          });\n                        } else {\n                          channel.updateChannel(\n                            currentTitle,\n                            currentImg,\n                            channel.data,\n                            (openChannel) => {\n                              logger.info('ChannelSettings: Channel information updated', openChannel);\n                              onChannelModified(openChannel);\n                              // setChannel(openChannel) => alone not working\n                              setChannel(null);\n                              setChannel(openChannel);\n                            },\n                          );\n                        }\n                      }}\n                    />\n                  )\n                }\n              </div>\n              <div className=\"sendbird-openchannel-settings__url\">\n                <Icon\n                  className=\"sendbird-openchannel-settings__copy-icon\"\n                  type={IconTypes.COPY}\n                  height=\"22px\"\n                  width=\"22px\"\n                  onClick={() => {\n                    copyToClipboard(channel.url);\n                  }}\n                />\n                <Label\n                  className=\"sendbird-openchannel-settings__url-label\"\n                  type={LabelTypography.CAPTION_2}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__OPERATOR_URL}\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-settings__url-value\"\n                  type={LabelTypography.SUBTITLE_2}\n                >\n                  {channel.url}\n                </Label>\n              </div>\n              <AccordionGroup>\n                <ParticipantsAccordion\n                  channel={channel}\n                  currentUser={currentUser}\n                />\n              </AccordionGroup>\n              <DeleteChannel\n                isOnline={isOnline}\n                onDeleteChannel={() => {\n                  channel.delete((response, error) => {\n                    if (error) {\n                      logger.warning('OpenChannelSettings: Delete channel failed', error);\n                      return;\n                    }\n                    logger.info('OpenChannelSettings: Delete channel success', response);\n                    if (onDeleteChannel) {\n                      onDeleteChannel(channel);\n                    }\n                  });\n                }}\n              />\n            </>\n          ) : (\n            <ParticipantsList\n              currentUser={currentUser}\n              channel={channel}\n              onCloseClick={() => {\n                onCloseClick();\n              }}\n            />\n          )\n      }\n    </UserProfileProvider>\n  )\n}\n\nconst ChannelSettingsWithSendbird = withSendbirdContext(OpenChannelSettings, (store) => {\n  const logger = (store && store.config && store.config.logger);\n  const theme = (store && store.config && store.config.theme) || 'light';\n  const isOnline = (store && store.config && store.config.isOnline);\n  const user = (store && store.stores && store.stores.userStore\n    && store.stores.userStore.user);\n  return {\n    sdk: selectors.getSdk(store),\n    logger,\n    theme,\n    isOnline,\n    user,\n  };\n});\n\nexport default ChannelSettingsWithSendbird;\n"],"names":["ChannelAvatar","_a","channel","theme","_b","height","_c","width","stringSet","useContext","LocalizationContext","memoizedAvatar","useMemo","React","utils","concat","name","OPEN_CHANNEL_SETTINGS__NO_TITLE","coverUrl","EditDetails","props","onSubmit","onCancel","inputRef","useRef","formRef","hiddenInputRef","useState","currentImg","setCurrentImg","newFile","setNewFile","title","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","OpenChannelAvatar","display","URL","createObjectURL","target","files","click","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","ParticipantsModal","hideModal","participants","setParticipants","participantListQuery","setParticipantListQuery","useEffect","createParticipantListQuery","next","participantList","error","noop","OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","fetchedParticipants","__spreadArray","map","p","UserListItem","userId","SHOWN_MEMBER_MAX","member","currentUser","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","toggleDropdown","profileUrl","closeDropdown","paddingTop","paddingBottom","user","currentUserId","close","UserProfile","nickname","NO_NAME","CHANNEL_SETTING__MEMBERS__YOU","ParticipantsAccordion","showMoreModal","setShowMoreModal","IconTypes","MEMBERS","IconColors","SUBTITLE_1","OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE","slice","length","ONBACKGROUND_3","OPEN_CHANNEL_SETTINGS__EMPTY_LIST","ButtonTypes","SECONDARY","ButtonSizes","SMALL","OPEN_CHANNEL_SETTINGS__SEE_ALL","DeleteChannel","isOnline","onDeleteChannel","showDeleteChannelModal","setShowDeleteChannelModal","DELETE","join","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE","ParticipantsList","onCloseClick","H_2","OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE","CLOSE","InvalidChannel","CHANNEL_SETTING__HEADER__TITLE","PlaceHolderTypes","WRONG","emptyLogger","info","warning","OpenChannelSettings","channelUrl","onBeforeUpdateChannel","onChannelModified","renderChannelProfile","_d","logger","sdk","_e","setChannel","getConnectionState","OpenChannel","getChannel","openChannel","isOperator","currentTitle","params","data","updateChannel","COPY","copyToClipboard","url","CAPTION_2","OPEN_CHANNEL_SETTINGS__OPERATOR_URL","delete","response","ChannelSettingsWithSendbird","withSendbirdContext","store","config","stores","userStore","selectors","getSdk"],"mappings":"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"}