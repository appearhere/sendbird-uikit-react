{"version":3,"file":"OpenChannelListUI.js","sources":["../../../src/smart-components/OpenChannelList/components/OpenChannelListUI/index.tsx"],"sourcesContent":["import React, { useContext, useMemo, useRef, useState } from 'react';\nimport { OpenChannel } from '@sendbird/chat/openChannel';\n\nimport './index.scss';\n\nimport OpenChannelPreview from '../OpenChannelPreview';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport { OnOpenChannelSelected, OpenChannelListFetchingStatus } from '../../context/OpenChannelListInterfaces';\nimport { useOpenChannelListContext } from '../../context/OpenChannelListProvider';\nimport OpenChannelListActionTypes from '../../context/dux/actionTypes';\nimport CreateOpenChannel from '../../../CreateOpenChannel';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface RenderOpenChannelPreviewProps {\n  channel: OpenChannel;\n  isSelected: boolean;\n  onChannelSelected: OnOpenChannelSelected;\n}\n\nexport interface OpenChannelListUIProps {\n  renderHeader?: () => React.ReactElement;\n  renderChannelPreview?: (props: RenderOpenChannelPreviewProps) => React.ReactElement;\n  renderPlaceHolderEmpty?: () => React.ReactElement;\n  renderPlaceHolderError?: () => React.ReactElement;\n  renderPlaceHolderLoading?: () => React.ReactElement;\n}\n\nfunction OpenChannelListUI({\n  renderHeader,\n  renderChannelPreview,\n  renderPlaceHolderEmpty,\n  renderPlaceHolderError,\n  renderPlaceHolderLoading,\n}: OpenChannelListUIProps): React.ReactElement {\n  const [showCreateChannelModal, setShowCreateChannel] = useState(false);\n  const scrollRef = useRef(null);\n  const {\n    logger,\n    currentChannel,\n    allChannels,\n    fetchingStatus,\n    onChannelSelected,\n    fetchNextChannels,\n    refreshOpenChannelList,\n    openChannelListDispatcher,\n  } = useOpenChannelListContext();\n  const { stringSet } = useContext(LocalizationContext);\n\n  const handleScroll = (e) => {\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    const isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n    if (isAboutSame(clientHeight + scrollTop, scrollHeight, 10)) {\n      fetchNextChannels((messages) => {\n        if (messages) {\n          try {\n            element.scrollTop = scrollHeight - clientHeight;\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n  };\n  const handleOnClickCreateChannel = () => {\n    setShowCreateChannel(true);\n  };\n\n  const MemoizedHeader: React.ReactElement = useMemo(() => {\n    return renderHeader?.() || null;\n  }, [renderHeader]);\n  const MemoizedPlaceHolder: React.ReactElement = useMemo(() => {\n    if (fetchingStatus === OpenChannelListFetchingStatus.EMPTY) {\n      return renderPlaceHolderEmpty?.() || (\n        <PlaceHolder\n          className=\"sendbird-open-channel-list-ui__channel-list--place-holder--empty\"\n          type={PlaceHolderTypes.NO_CHANNELS}\n        />\n      );\n    }\n    if (fetchingStatus === OpenChannelListFetchingStatus.FETCHING) {\n      return renderPlaceHolderLoading?.() || (\n        <div className=\"sendbird-open-channel-list-ui__channel-list--place-holder--loading\">\n          <PlaceHolder\n            iconSize=\"24px\"\n            type={PlaceHolderTypes.LOADING}\n          />\n        </div>\n      );\n    }\n    if (fetchingStatus === OpenChannelListFetchingStatus.ERROR) {\n      return renderPlaceHolderError?.() || (\n        <PlaceHolder\n          className=\"sendbird-open-channel-list-ui__channel-list--place-holder--error\"\n          type={PlaceHolderTypes.WRONG}\n        />\n      );\n    }\n    return null;\n  }, [fetchingStatus, renderPlaceHolderEmpty, renderPlaceHolderLoading, renderPlaceHolderError]);\n  const MemoizedAllChannels = useMemo(() => {\n    if (fetchingStatus === OpenChannelListFetchingStatus.DONE) {\n      return allChannels.map((channel) => {\n        const isSelected = channel?.url === currentChannel?.url;\n        const handleClick = (e) => {\n          onChannelSelected?.(channel, e);\n          logger.info('OpenChannelList|ChannelPreview: A channel is selected', channel);\n          openChannelListDispatcher({\n            type: OpenChannelListActionTypes.SET_CURRENT_OPEN_CHANNEL,\n            payload: channel,\n          });\n        };\n        return renderChannelPreview\n          ? (\n            <div\n              className=\"sendbird-open-channel-list-ui__channel-list__item\"\n              onClick={handleClick}\n            >\n              {renderChannelPreview({ channel, isSelected, onChannelSelected })}\n            </div>\n          )\n          : (\n            <OpenChannelPreview\n              className=\"sendbird-open-channel-list-ui__channel-list__item\"\n              channel={channel}\n              isSelected={isSelected}\n              onClick={handleClick}\n              key={channel?.url}\n            />\n          );\n      })\n    }\n    return null;\n  }, [allChannels, allChannels.length, currentChannel]);\n\n  return (\n    <div className=\"sendbird-open-channel-list-ui\">\n      {\n        showCreateChannelModal && (\n          <CreateOpenChannel\n            closeModal={() => setShowCreateChannel(false)}\n            onCreateChannel={(openChannel) => {\n              onChannelSelected?.(openChannel);\n              openChannelListDispatcher({\n                type: OpenChannelListActionTypes.CREATE_OPEN_CHANNEL,\n                payload: openChannel,\n              });\n            }}\n          />\n        )\n      }\n      {\n        MemoizedHeader || (\n          <div className=\"sendbird-open-channel-list-ui__header\">\n            <Label\n              className=\"sendbird-open-channel-list-ui__header__title\"\n              type={LabelTypography.H_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.OPEN_CHANNEL_LIST__TITLE}\n            </Label>\n            <IconButton\n              className=\"sendbird-open-channel-list-ui__header__button-refresh\"\n              width=\"32px\"\n              height=\"32px\"\n              type=\"button\"\n              onClick={() => refreshOpenChannelList()}\n            >\n              <Icon\n                type={IconTypes.REFRESH}\n                fillColor={IconColors.PRIMARY}\n                width=\"22px\"\n                height=\"22px\"\n              />\n            </IconButton>\n            <IconButton\n              className=\"sendbird-open-channel-list-ui__header__button-create-channel\"\n              width=\"32px\"\n              height=\"32px\"\n              type=\"button\"\n              onClick={handleOnClickCreateChannel}\n            >\n              <Icon\n                type={IconTypes.CREATE}\n                fillColor={IconColors.PRIMARY}\n                width=\"22px\"\n                height=\"22px\"\n              />\n            </IconButton>\n          </div>\n        )\n      }\n      <div\n        className=\"sendbird-open-channel-list-ui__channel-list\"\n        ref={scrollRef}\n        onScroll={handleScroll}\n        >\n        {MemoizedPlaceHolder}\n        {MemoizedAllChannels}\n      </div>\n    </div>\n  );\n}\n\nexport default OpenChannelListUI;\n"],"names":["OpenChannelListUI","_a","renderHeader","renderChannelPreview","renderPlaceHolderEmpty","renderPlaceHolderError","renderPlaceHolderLoading","_b","useState","showCreateChannelModal","setShowCreateChannel","scrollRef","useRef","_c","useOpenChannelListContext","logger","currentChannel","allChannels","fetchingStatus","onChannelSelected","fetchNextChannels","refreshOpenChannelList","openChannelListDispatcher","stringSet","useContext","LocalizationContext","handleScroll","e","element","target","scrollTop","clientHeight","scrollHeight","isAboutSame","a","b","px","Math","abs","messages","error","handleOnClickCreateChannel","MemoizedHeader","useMemo","MemoizedPlaceHolder","OpenChannelListFetchingStatus","EMPTY","React","PlaceHolderTypes","NO_CHANNELS","FETCHING","LOADING","ERROR","WRONG","MemoizedAllChannels","DONE","map","channel","isSelected","url","handleClick","info","type","OpenChannelListActionTypes","SET_CURRENT_OPEN_CHANNEL","payload","length","openChannel","CREATE_OPEN_CHANNEL","LabelTypography","H_2","LabelColors","ONBACKGROUND_1","OPEN_CHANNEL_LIST__TITLE","IconTypes","REFRESH","IconColors","PRIMARY","CREATE"],"mappings":"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"}