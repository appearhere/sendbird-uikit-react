{"version":3,"file":"MessageSearch.js","sources":["../src/smart-components/MessageSearch/dux/actionTypes.ts","../src/smart-components/MessageSearch/dux/reducers.ts","../src/smart-components/MessageSearch/dux/initialState.ts","../src/smart-components/MessageSearch/hooks/useSetChannel.ts","../src/smart-components/MessageSearch/hooks/useGetSearchedMessages.ts","../src/smart-components/MessageSearch/hooks/useScrollCallback.ts","../src/ui/MessageSearchItem/getCreatedAt.ts","../src/ui/MessageSearchItem/index.tsx","../src/ui/MessageSearchFileItem/utils.ts","../src/ui/MessageSearchFileItem/index.tsx","../src/smart-components/MessageSearch/hooks/useSearchStringEffect.ts","../src/smart-components/MessageSearch/index.tsx"],"sourcesContent":["export const GET_SEARCHED_MESSAGES = 'GET_SEARCHED_MESSAGES';\nexport const GET_NEXT_SEARCHED_MESSAGES = 'GET_NEXT_SEARCHED_MESSAGES';\nexport const START_MESSAGE_SEARCH = 'START_MESSAGE_SEARCH';\nexport const START_GETTING_SEARCHED_MESSAGES = 'START_GETTING_SEARCHED_MESSAGES';\nexport const SET_QUERY_INVALID = 'SET_QUERY_INVALID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const CHANNEL_INVALID = 'CHANNEL_INVALID';\nexport const RESET_SEARCH_STRING = 'RESET_SEARCH_STRING';\n","import { State as initialStateInterface } from './initialState';\nimport * as actionTypes from './actionTypes';\n\ninterface ActionInterface {\n  type: string;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  payload?: any;\n}\n\nexport default function reducer(\n  state: initialStateInterface,\n  action: ActionInterface,\n): initialStateInterface {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      const currentChannel = action.payload;\n      return {\n        ...state,\n        currentChannel,\n        initialized: true,\n      };\n    }\n    case actionTypes.CHANNEL_INVALID: {\n      return {\n        ...state,\n        currentChannel: null,\n        initialized: false,\n      };\n    }\n    case actionTypes.GET_SEARCHED_MESSAGES: {\n      const { messages, createdQuery } = action.payload;\n      if (\n        createdQuery\n        && createdQuery.channelUrl === state.currentMessageSearchQuery.channelUrl\n        && createdQuery.key === state.currentMessageSearchQuery.key\n      ) {\n        return {\n          ...state,\n          loading: false,\n          isInvalid: false,\n          allMessages: [...messages],\n          hasMoreResult: state.currentMessageSearchQuery.hasNext,\n        };\n      }\n      return { ...state };\n    }\n    case actionTypes.SET_QUERY_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      }\n    }\n    case actionTypes.START_MESSAGE_SEARCH: {\n      return {\n        ...state,\n        isInvalid: false,\n        loading: false,\n      }\n    }\n    case actionTypes.START_GETTING_SEARCHED_MESSAGES: {\n      const currentMessageSearchQuery = action.payload;\n      return {\n        ...state,\n        loading: true,\n        currentMessageSearchQuery,\n      };\n    }\n    case actionTypes.GET_NEXT_SEARCHED_MESSAGES: {\n      const messages = action.payload;\n      return {\n        ...state,\n        allMessages: [...state.allMessages, ...messages],\n        hasMoreResult: state.currentMessageSearchQuery.hasNext,\n      };\n    }\n    case actionTypes.RESET_SEARCH_STRING: {\n      return {\n        ...state,\n        allMessages: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import SendbirdUIKit from '../../../index';\nexport interface State {\n  allMessages: Array<SendbirdUIKit.ClientFileMessage | SendbirdUIKit.ClientUserMessage>;\n  loading: boolean;\n  isInvalid: boolean;\n  initialized: boolean;\n  currentChannel: SendbirdUIKit.GroupChannelType;\n  currentMessageSearchQuery: SendbirdUIKit.ClientMessageSearchQuery;\n  hasMoreResult: boolean;\n}\n\nconst initialState: State = {\n  allMessages: [],\n  loading: false,\n  isInvalid: false,\n  initialized: false,\n  currentChannel: null,\n  currentMessageSearchQuery: null,\n  hasMoreResult: false,\n};\n\nexport default initialState;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  channelUrl: string;\n  sdkInit: boolean;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nfunction useSetChannel(\n  { channelUrl, sdkInit }: MainProps,\n  { sdk, logger, messageSearchDispathcer }: ToolProps,\n): void {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && (sdk.OpenChannel || sdk.GroupChannel)) {\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useSetChannel group channel', groupChannel);\n          messageSearchDispathcer({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        } else {\n          messageSearchDispathcer({\n            type: messageActionTypes.CHANNEL_INVALID,\n            payload: null,\n          });\n        }\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport SendbirdUIKit from '../../../index';\nimport SendBird from 'sendbird';\n\ninterface MainProps {\n  currentChannel: SendbirdUIKit.GroupChannelType;\n  channelUrl: string;\n  requestString?: string;\n  messageSearchQuery?: SendbirdUIKit.MessageSearchQueryType;\n  onResultLoaded?: (\n    messages?: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    error?: SendbirdUIKit.SendbirdError,\n  ) => void;\n  retryCount: number;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nfunction useGetSearchedMessages(\n  { currentChannel, channelUrl, requestString, messageSearchQuery, onResultLoaded, retryCount }: MainProps,\n  { sdk, logger, messageSearchDispathcer }: ToolProps,\n): void {\n  useEffect(() => {\n    messageSearchDispathcer({\n      type: messageActionTypes.START_MESSAGE_SEARCH,\n      payload: null,\n    });\n    if (sdk && channelUrl && sdk.createMessageSearchQuery && currentChannel) {\n      if (requestString) {\n        const inputSearchMessageQueryObject = {\n          ...messageSearchQuery,\n          order: 'ts' as const,\n          channelUrl,\n          messageTimestampFrom: currentChannel.invitedAt,\n        };\n        const createdQuery = sdk.createMessageSearchQuery(requestString, inputSearchMessageQueryObject);\n        createdQuery.next((messages, error) => {\n          if (!error) {\n            logger.info('MessageSearch | useGetSearchedMessages: succeeded getting messages', messages);\n            messageSearchDispathcer({\n              type: messageActionTypes.GET_SEARCHED_MESSAGES,\n              payload: {\n                messages,\n                createdQuery,\n              },\n            });\n            if (onResultLoaded && typeof onResultLoaded === 'function') {\n              onResultLoaded(messages, null);\n            }\n          } else {\n            logger.warning('MessageSearch | useGetSearchedMessages: getting failed', error);\n            messageSearchDispathcer({\n              type: messageActionTypes.SET_QUERY_INVALID,\n              payload: null,\n            });\n            if (onResultLoaded && typeof onResultLoaded === 'function') {\n              onResultLoaded(null, error);\n            }\n          }\n        });\n        messageSearchDispathcer({\n          type: messageActionTypes.START_GETTING_SEARCHED_MESSAGES,\n          payload: createdQuery,\n        });\n      } else {\n        logger.info('MessageSearch | useGetSeasrchedMessages: search string is empty');\n      }\n    }\n  }, [channelUrl, messageSearchQuery, requestString, currentChannel, retryCount]);\n}\n\nexport default useGetSearchedMessages;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport SendbirdUIKit from '../../../index';\n\ninterface MainProps {\n  currentMessageSearchQuery: SendBird.MessageSearchQuery;\n  hasMoreResult: boolean;\n  onResultLoaded?: (\n    messages?: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    error?: SendbirdUIKit.SendbirdError,\n  ) => void;\n}\ninterface ToolProps {\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\ntype CallbackReturn = (\n  callback: (\n    messages: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    error: any,\n  ) => void\n) => void;\n\nfunction useScrollCallback(\n  { currentMessageSearchQuery, hasMoreResult, onResultLoaded }: MainProps,\n  { logger, messageSearchDispathcer }: ToolProps,\n): CallbackReturn {\n  return useCallback((cb) => {\n    if (!hasMoreResult) {\n      logger.warning('MessageSearch | useScrollCallback: no more searched results', hasMoreResult);\n    }\n    if (currentMessageSearchQuery && currentMessageSearchQuery.hasNext) {\n      currentMessageSearchQuery.next((messages, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useScrollCallback: succeeded getting searched messages', messages);\n          messageSearchDispathcer({\n            type: messageActionTypes.GET_NEXT_SEARCHED_MESSAGES,\n            payload: messages,\n          });\n          cb(messages, null);\n          if (onResultLoaded && typeof onResultLoaded === 'function') {\n            onResultLoaded(messages, null);\n          }\n        } else {\n          logger.warning('MessageSearch | useScrollCallback: failed getting searched messages', error);\n          cb(null, error);\n          if (onResultLoaded && typeof onResultLoaded === 'function') {\n            onResultLoaded(null, error);\n          }\n        }\n      });\n    } else {\n      logger.warning('MessageSearch | useScrollCallback: no currentMessageSearchQuery');\n    }\n  }, [currentMessageSearchQuery, hasMoreResult]);\n}\n\nexport default useScrollCallback;\n","import format from 'date-fns/format';\nimport formatRelative from 'date-fns/formatRelative';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\n\n// getCreatedAt\nexport default (createdAt: number, locale: Locale): string => {\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return formatRelative(createdAt, new Date(), optionalParam);\n  }\n  return format(createdAt, 'MMM dd', optionalParam);\n};\n","import React, { useContext } from 'react';\nimport './index.scss';\nimport getCreatedAt from './getCreatedAt';\n\nimport Avatar from '../Avatar';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: SendbirdUIKit.ClientUserMessage;\n  selected?: boolean;\n  onClick?: (message: SendbirdUIKit.ClientMessage) => void;\n}\n\nexport default function MessageSearchItem({\n  className,\n  message,\n  selected,\n  onClick,\n}: Props): JSX.Element {\n  const { createdAt } = message;\n  const messageText = message.message;\n  const sender = message.sender || message._sender;\n  const { profileUrl, nickname } = sender;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-search-item',\n        selected ? 'sendbird-message-search-item--selected' : '',\n      ].join(' ')}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(message);\n      }}\n    >\n      <div className=\"sendbird-message-search-item__left\">\n        <Avatar\n          className=\"sendbird-message-search-item__left__sender-avatar\"\n          src={profileUrl}\n          alt=\"profile image\"\n          width=\"56px\"\n          height=\"56px\"\n        />\n      </div>\n      <div className=\"sendbird-message-search-item__right\">\n        <Label\n          className=\"sendbird-message-search-item__right__sender-name\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {nickname || stringSet.NO_NAME}\n        </Label>\n        <Label\n          className=\"sendbird-message-search-item__right__message-text\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {messageText}\n        </Label>\n        <Label\n          className=\"sendbird-message-search-item__right__message-created-at\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {getCreatedAt(createdAt, dateLocale)}\n        </Label>\n      </div>\n      <div className=\"sendbird-message-search-item__right-footer\" />\n    </div>\n  );\n}\n","import format from 'date-fns/format';\nimport formatRelative from 'date-fns/formatRelative';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\nimport { IconTypes } from '../Icon';\n\nexport function getCreatedAt(createdAt: number, locale: Locale): string {\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return formatRelative(createdAt, new Date(), optionalParam);\n  }\n  return format(createdAt, 'MMM dd', optionalParam);\n}\n\nexport function getIconOfFileType(message: SendbirdUIKit.ClientFileMessage): string {\n  const { url } = message;\n  const fileMessageUrl = url;\n  const fileExtension = (fileMessageUrl.match(/\\.([^.]*?)(?=\\?|#|$)/))[1];\n\n  if (/(jpg|jpeg|png)$/i.test(fileExtension)) {\n    return IconTypes.PHOTO;\n  } else if (/mp4$/i.test(fileExtension)) {\n    return IconTypes.PLAY;\n  } else if (/mp3/i.test(fileExtension)) {\n    return IconTypes.FILE_AUDIO;\n  } else if (/gif/i.test(fileExtension)) {\n    return IconTypes.GIF;\n  } else {\n    return IconTypes.FILE_DOCUMENT;\n  }\n}\n\nexport function truncate(fullText: string, textLimit: number): string {\n  if (fullText.length <= textLimit) return fullText;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = textLimit - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullText.substr(0, frontChars) + separator + fullText.substr(fullText.length - backChars);\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport Icon, { IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { getCreatedAt, getIconOfFileType, truncate } from './utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: SendbirdUIKit.ClientFileMessage;\n  selected?: boolean;\n  onClick?: (message: SendbirdUIKit.ClientFileMessage) => void;\n}\n\nexport default function MessageSearchFileItem(props: Props): ReactElement {\n  const {\n    className,\n    message,\n    selected,\n    onClick,\n  } = props;\n  const { createdAt, url, name } = message;\n  const fileMessageUrl = url;\n  const sender = message.sender || message._sender;\n  const { profileUrl, nickname } = sender;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-search-file-item',\n        selected ? 'sendbird-message-search-file-item--selected' : '',\n      ].join(' ')}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(message);\n      }}\n    >\n      <div className=\"sendbird-message-search-file-item__left\">\n        <Avatar\n          className=\"sendbird-message-search-file-item__left__sender-avatar\"\n          src={profileUrl}\n          alt=\"profile image\"\n          width=\"56px\"\n          height=\"56px\"\n        />\n      </div>\n      <div className=\"sendbird-message-search-file-item__right\">\n        <Label\n          className=\"sendbird-message-search-file-item__right__sender-name\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {nickname || stringSet.NO_NAME}\n        </Label>\n        <div className=\"sendbird-message-search-file-item__right__content\">\n          <div className=\"sendbird-message-search-file-item__right__content__type-icon\">\n            <Icon\n              type={getIconOfFileType(message)}\n              fillColor={IconColors.PRIMARY}\n              width=\"18px\"\n              height=\"18px\"\n            />\n          </div>\n          <Label\n            className=\"sendbird-message-search-file-item__right__content__url\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {truncate(name || fileMessageUrl, 28)}\n          </Label>\n        </div>\n      </div>\n      <Label\n        className=\"sendbird-message-search-file-item__message-created-at\"\n        type={LabelTypography.CAPTION_3}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {getCreatedAt(createdAt, dateLocale)}\n      </Label>\n      <div className=\"sendbird-message-search-file-item__right-footer\" />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  searchString: string;\n}\n\ninterface StaticParams {\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nconst DEBOUNCING_TIME = 500;\n\nfunction useSearchStringEffect(\n  { searchString }: DynamicParams,\n  { messageSearchDispathcer }: StaticParams,\n): string {\n  const [requestString, setRequestString] = useState('');\n  const [debouncingTimer, setDebouncingTimer] = useState(null);\n  useEffect(() => {\n    clearTimeout(debouncingTimer);\n    if (searchString) {\n      setDebouncingTimer(\n        setTimeout(() => {\n          setRequestString(searchString);\n        }, DEBOUNCING_TIME)\n      );\n    } else {\n      setRequestString('');\n      messageSearchDispathcer({\n        type: messageActionTypes.RESET_SEARCH_STRING,\n        payload: '',\n      });\n    }\n  }, [searchString]);\n  return requestString;\n}\n\nexport default useSearchStringEffect;\n","import React, { useReducer, useRef, useContext, useState } from 'react';\nimport './index.scss';\n\nimport widthSendbirdContext from '../../lib/SendbirdSdkContext';\nimport messageSearchReducer from './dux/reducers';\nimport messageSearchInitialState from './dux/initialState';\n\nimport useSetChannel from './hooks/useSetChannel';\nimport useGetSearchMessages from './hooks/useGetSearchedMessages';\nimport useScrollCallback from './hooks/useScrollCallback';\n\nimport MessageSearchItem from '../../ui/MessageSearchItem';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport MessageSearchFileItem from '../../ui/MessageSearchFileItem';\n\nimport SendbirdUIKit from '../../index';\nimport useSearchStringEffect from './hooks/useSearchStringEffect';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search';\n\ninterface Props extends SendbirdUIKit.MessageSearchProps {\n  // sendbird internal props\n  stores: {\n    sdkStore?: SendbirdUIKit.SdkStore,\n    userStore?: SendbirdUIKit.UserStore,\n  };\n  config: {\n    userId: string,\n    isOnline: boolean,\n    logger?: SendbirdUIKit.Logger,\n    theme?: string,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    pubSub: any,\n    disableUserProfile?: boolean,\n    renderUserProfile?(): JSX.Element,\n    imageCompression?: {\n      compressionRate?: number,\n      resizingWidth?: number | string,\n      resizingHeight?: number | string,\n    },\n  };\n}\n\nfunction MessageSearch(props: Props): JSX.Element {\n  const {\n    // sendbird internal props\n    stores,\n    config,\n    // message search props\n    channelUrl,\n    searchString,\n    messageSearchQuery,\n    renderSearchItem,\n    onResultLoaded,\n    onResultClick,\n  } = props;\n\n  // hook variables\n  const { stringSet } = useContext(LocalizationContext);\n  const [retryCount, setRetryCount] = useState(0); // this is a trigger flag for activating useGetSearchMessages\n  const [selectedMessageId, setSelectedMessageId] = useState(0);\n  const [messageSearchStore, messageSearchDispathcer] = useReducer(messageSearchReducer, messageSearchInitialState);\n  const {\n    allMessages,\n    loading,\n    isInvalid,\n    currentChannel,\n    currentMessageSearchQuery,\n    hasMoreResult,\n  } = messageSearchStore;\n\n  const getChannelName = () => {\n    if (currentChannel && currentChannel.name && currentChannel.name !== 'Group Channel') {\n      return currentChannel.name;\n    }\n    if (currentChannel && (currentChannel.name === 'Group Channel' || !currentChannel.name)) {\n      return currentChannel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  // const\n  const { sdkStore } = stores;\n  const { logger } = config;\n  const { sdk } = sdkStore;\n  const sdkInit = sdkStore.initialized;\n  const scrollRef = useRef(null);\n  const handleOnScroll = (e) => {\n    const scrollElement = e.target;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight,\n    } = scrollElement;\n\n    if (!hasMoreResult) {\n      return;\n    }\n    if (scrollTop + clientHeight >= scrollHeight) {\n      onScroll(() => {\n        // after load more searched messages\n      });\n    }\n  };\n\n  useSetChannel(\n    { channelUrl, sdkInit },\n    { sdk, logger, messageSearchDispathcer },\n  );\n\n  const requestString = useSearchStringEffect({ searchString }, { messageSearchDispathcer });\n\n  useGetSearchMessages(\n    { currentChannel, channelUrl, requestString, messageSearchQuery, onResultLoaded, retryCount },\n    { sdk, logger, messageSearchDispathcer },\n  );\n\n  const onScroll = useScrollCallback(\n    { currentMessageSearchQuery, hasMoreResult, onResultLoaded },\n    { logger, messageSearchDispathcer },\n  );\n\n  const handleRetryToConnect = () => {\n    setRetryCount(retryCount + 1);\n  };\n\n  if (isInvalid && searchString && requestString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={handleRetryToConnect}\n        />\n      </div>\n    );\n  }\n\n  if (loading && searchString && requestString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder type={PlaceHolderTypes.SEARCHING} />\n      </div>\n    );\n  }\n\n  if (!searchString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder\n          type={PlaceHolderTypes.SEARCH_IN}\n          searchInString={getChannelName()}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={COMPONENT_CLASS_NAME}\n      onScroll={handleOnScroll}\n      ref={scrollRef}\n    >\n      {\n        (allMessages.length > 0)\n          ? (\n            allMessages.map((message) => {\n              if (renderSearchItem) {\n                return renderSearchItem({ message, onResultClick });\n              }\n              if (message.messageType === 'file') {\n                return (\n                  <MessageSearchFileItem\n                    className={`${COMPONENT_CLASS_NAME}__message-search-item`}\n                    message={message}\n                    key={message.messageId}\n                    selected={(selectedMessageId === message.messageId)}\n                    onClick={() => {\n                      onResultClick(message);\n                      setSelectedMessageId(message.messageId);\n                    }}\n                  />\n                );\n              }\n              return (\n                <MessageSearchItem\n                  className={`${COMPONENT_CLASS_NAME}__message-search-item`}\n                  message={message}\n                  key={message.messageId}\n                  selected={(selectedMessageId === message.messageId)}\n                  onClick={() => {\n                    onResultClick(message);\n                    setSelectedMessageId(message.messageId);\n                  }}\n                />\n              );\n            })\n          )\n          : (\n            <PlaceHolder type={PlaceHolderTypes.NO_RESULTS} />\n          )\n      }\n    </div>\n  );\n}\n\nexport default widthSendbirdContext(MessageSearch);\n"],"names":["GET_SEARCHED_MESSAGES","GET_NEXT_SEARCHED_MESSAGES","START_MESSAGE_SEARCH","START_GETTING_SEARCHED_MESSAGES","SET_QUERY_INVALID","SET_CURRENT_CHANNEL","CHANNEL_INVALID","RESET_SEARCH_STRING","reducer","state","action","type","actionTypes","currentChannel","payload","__assign","initialized","_a","messages","createdQuery","channelUrl","currentMessageSearchQuery","key","loading","isInvalid","allMessages","__spreadArray","hasMoreResult","hasNext","initialState","useSetChannel","_b","sdkInit","sdk","logger","messageSearchDispathcer","useEffect","OpenChannel","GroupChannel","getChannel","groupChannel","error","info","messageActionTypes","useGetSearchedMessages","requestString","messageSearchQuery","onResultLoaded","retryCount","createMessageSearchQuery","inputSearchMessageQueryObject","order","messageTimestampFrom","invitedAt","createdQuery_1","next","warning","useScrollCallback","useCallback","cb","createdAt","locale","optionalParam","isToday","format","isYesterday","formatRelative","Date","MessageSearchItem","className","message","selected","onClick","messageText","sender","_sender","profileUrl","nickname","useContext","LocalizationContext","stringSet","dateLocale","React","Array","isArray","join","e","stopPropagation","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","NO_NAME","BODY_2","ONBACKGROUND_3","CAPTION_3","ONBACKGROUND_2","getCreatedAt","getIconOfFileType","url","fileMessageUrl","fileExtension","match","test","IconTypes","PHOTO","PLAY","FILE_AUDIO","GIF","FILE_DOCUMENT","truncate","fullText","textLimit","length","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","MessageSearchFileItem","props","name","IconColors","PRIMARY","DEBOUNCING_TIME","useSearchStringEffect","searchString","_c","useState","setRequestString","_d","debouncingTimer","setDebouncingTimer","clearTimeout","setTimeout","COMPONENT_CLASS_NAME","MessageSearch","stores","config","renderSearchItem","onResultClick","setRetryCount","selectedMessageId","setSelectedMessageId","useReducer","messageSearchReducer","messageSearchInitialState","messageSearchStore","getChannelName","members","map","member","NO_TITLE","sdkStore","scrollRef","useRef","handleOnScroll","scrollElement","target","scrollTop","scrollHeight","clientHeight","onScroll","useGetSearchMessages","handleRetryToConnect","PlaceHolderTypes","WRONG","SEARCHING","SEARCH_IN","messageType","concat","messageId","NO_RESULTS","widthSendbirdContext"],"mappings":"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"}