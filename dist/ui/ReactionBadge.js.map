{"version":3,"file":"ReactionBadge.js","sources":["../../src/ui/ReactionBadge/index.tsx"],"sourcesContent":["import React, {\n  KeyboardEvent,\n  MouseEvent,\n  ReactElement,\n  RefObject,\n  TouchEvent,\n} from 'react';\n\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nexport interface ReactionBadgeProps {\n  className?: string | Array<string>;\n  children: ReactElement;\n  count?: number | string;\n  isAdd?: boolean;\n  selected?: boolean;\n  onClick?: (\n    e: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement> | TouchEvent<HTMLDivElement>\n  ) => void;\n}\nconst ReactionBadge = React.forwardRef((props: ReactionBadgeProps, ref: RefObject<HTMLDivElement>): ReactElement => {\n  const {\n    className = '',\n    children,\n    count = '',\n    isAdd = false,\n    selected = false,\n    onClick = () => {/* noop */},\n  } = props;\n\n  const getClassNameTail = (): string => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      onTouchEnd={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nexport default ReactionBadge;\n"],"names":["ReactionBadge","React","forwardRef","props","ref","_a","className","children","_b","count","_c","isAdd","_d","selected","_e","onClick","getClassNameTail","__spreadArray","Array","isArray","concat","join","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_1"],"mappings":";;;;;;AAsBMA,IAAAA,aAAa,gBAAGC,cAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAA4BC,GAA5B,EAA0D;AAE7F,EAAA,IAAAC,EAAA,GAMEF,KAAK,CANOG,SAAd;MAAAA,SAAS,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAEA,EAAd;AAAA,MACAE,QAAQ,GAKNJ,KAAK,CALCI,QADR;AAAA,MAEAC,EAIE,GAAAL,KAAK,CAJGM,KAFV;MAEAA,KAAK,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAEA,EAFV;AAAA,MAGAE,EAGE,GAAAP,KAAK,MANP;MAGAQ,KAAK,mBAAG,QAAKD,EAHb;AAAA,MAIAE,EAEE,GAAAT,KAAK,CAFSU,QAJhB;MAIAA,QAAQ,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQA,EAJhB;AAAA,MAKAE,EACE,GAAAX,KAAK,CADqBY,OAL5B;MAKAA,OAAO,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAA,YAAA,EAAA,GAAkBA,EAL5B,CAAA;;EAQF,IAAME,gBAAgB,GAAG,YAAA;AACvB,IAAA,IAAIH,QAAQ,IAAI,CAACF,KAAjB,EAAwB;AACtB,MAAA,OAAO,YAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAIA,KAAJ,EAAW;AACT,MAAA,OAAO,UAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,EAAP,CAAA;GAPF,CAAA;;EAUA,oBACEV,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAEgB,aAAA,CAAAA,aAAA,CAAA,EAAA,EACLC,KAAK,CAACC,OAAN,CAAcb,SAAd,CAAA,GAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,EAC8C,IAD9C,CAAA,EAC8C,CACvD,yBAA0Bc,CAAAA,MAA1B,CAA0BJ,gBAAgB,EAA1C,CADuD,CAD9C,EAGT,KAHS,CAAA,CAGTK,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,GAAG,EAAEjB,GANP;AAOE,IAAA,OAAO,EAAEW,OAPX;AAQE,IAAA,SAAS,EAAEA,OARb;AASE,IAAA,UAAU,EAAEA,OATd;AAUE,IAAA,QAAQ,EAAE,CAAA;GAEV,eAAAd,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gCAAA;GACb,eAAAA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,sCAAA;AAAf,GAAA,EACGM,QADH,CADF,eAIEN,cAAA,CAAA,aAAA,CAAC,KAAD,EAAA;AACE,IAAA,SAAS,EAAGM,QAAQ,IAAIE,KAAb,IAAuB,uCADpC;IAEE,IAAI,EAAEa,eAAe,CAACC,SAFxB;IAGE,KAAK,EAAEC,WAAW,CAACC,cAAAA;GAElBhB,EAAAA,KALH,CAJF,CAZF,CADF,CAAA;AA2BD,CA/CqB;;;;"}