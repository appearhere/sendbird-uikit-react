{"version":3,"file":"MessageItemReactionMenu.js","sources":["../../src/ui/MessageItemReactionMenu/index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { ReactElement, useRef } from 'react';\nimport type { FileMessage, Reaction, UserMessage } from '@sendbird/chat/message';\nimport type { Emoji, EmojiContainer } from '@sendbird/chat';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(message) || isFailedMessage(message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["MessageItemReactionMenu","_a","className","message","userId","_b","spaceFromTrigger","emojiContainer","toggleReaction","setSupposedHover","triggerRef","useRef","containerRef","isPendingMessage","isFailedMessage","React","getClassName","toggleDropdown","IconTypes","EMOJI_MORE","IconColors","CONTENT_INVERSE","close","closeDropdown","getEmojiListAll","map","emoji","isReacted","_c","reactions","filter","reaction","key","userIds","some","reactorId","url","style","QUESTION","ON_BACKGROUND_3"],"mappings":"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"}