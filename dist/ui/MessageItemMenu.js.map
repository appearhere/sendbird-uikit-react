{"version":3,"file":"MessageItemMenu.js","sources":["../../src/ui/MessageItemMenu/index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { ReactElement, useContext, useRef } from 'react';\nimport type { FileMessage, UserMessage } from '@sendbird/chat/message';\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport type { OpenChannel } from '@sendbird/chat/openChannel';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  disableDeleteMessage?: boolean;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n  onReplyInThread?: (props: { message: UserMessage | FileMessage }) => void;\n  onMoveToParentMessage?: () => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  disableDeleteMessage = null,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n  onReplyInThread,\n  onMoveToParentMessage = null,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(message) && message?.isResendable && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(message) && isByMe;\n  const showMenuItemOpenInChannel: boolean = onMoveToParentMessage !== null;\n  /**\n   * TODO: Manage timing issue\n   * User delete pending message -> Sending message success\n   */\n  const isReplyTypeEnabled = !isFailedMessage(message)\n    && !isPendingMessage(message)\n    && (channel?.isGroupChannel?.()\n      && !(channel as GroupChannel)?.isBroadcast);\n  const showMenuItemReply = isReplyTypeEnabled && replyType === 'QUOTE_REPLY';\n  const showMenuItemThread = isReplyTypeEnabled && replyType === 'THREAD' && !message?.parentMessageId && onReplyInThread;\n\n  if (!(showMenuItemCopy\n    || showMenuItemReply\n    || showMenuItemThread\n    || showMenuItemOpenInChannel\n    || showMenuItemEdit\n    || showMenuItemResend\n    || showMenuItemDelete\n  )) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemThread && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-thread\"\n                  onClick={() => {\n                    onReplyInThread?.({ message });\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__THREAD}\n                </MenuItem>\n              )}\n              {showMenuItemOpenInChannel && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-open-channel\"\n                  onClick={() => {\n                    onMoveToParentMessage?.();\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__OPEN_IN_CHANNEL}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={\n                    typeof disableDeleteMessage === 'boolean'\n                    ? disableDeleteMessage\n                    : message?.threadInfo?.replyCount > 0\n                  }\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["MessageItemMenu","_a","className","message","channel","_c","isByMe","_d","disabled","replyType","_e","disableDeleteMessage","showEdit","showRemove","resendMessage","setQuoteMessage","setSupposedHover","onReplyInThread","_f","onMoveToParentMessage","stringSet","useContext","LocalizationContext","triggerRef","useRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","isFailedMessage","isResendable","showMenuItemDelete","isPendingMessage","showMenuItemOpenInChannel","isReplyTypeEnabled","isGroupChannel","_b","call","isBroadcast","showMenuItemReply","showMenuItemThread","parentMessageId","React","getClassName","toggleDropdown","IconTypes","MORE","IconColors","CONTENT_INVERSE","close","closeDropdown","copyToClipboard","MESSAGE_MENU__COPY","MESSAGE_MENU__REPLY","MESSAGE_MENU__THREAD","MESSAGE_MENU__OPEN_IN_CHANNEL","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","threadInfo","replyCount","MESSAGE_MENU__DELETE"],"mappings":"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"}