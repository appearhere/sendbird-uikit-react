{"version":3,"file":"Channel.js","sources":["../src/smart-components/Conversation/dux/actionTypes.js","../src/smart-components/Conversation/utils.js","../src/smart-components/Conversation/dux/initialState.js","../src/smart-components/Conversation/dux/reducers.js","../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../src/smart-components/Conversation/hooks/useGetChannel.js","../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../src/smart-components/Conversation/hooks/useHandleReconnect.ts","../src/smart-components/Conversation/hooks/useScrollCallback.js","../src/smart-components/Conversation/hooks/useScrollDownCallback.js","../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../src/ui/ReactionButton/index.jsx","../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../src/smart-components/Conversation/hooks/useScrollToMessage.ts","../src/ui/MessageStatus/index.jsx","../src/ui/MessageItemMenu/index.tsx","../src/ui/MessageItemReactionMenu/index.tsx","../src/ui/Tooltip/index.jsx","../src/ui/TooltipWrapper/index.jsx","../src/ui/ReactionBadge/index.jsx","../src/ui/EmojiReactions/index.tsx","../src/ui/AdminMessage/index.jsx","../src/ui/TextMessageItemBody/index.tsx","../src/ui/FileMessageItemBody/index.tsx","../src/ui/ThumbnailMessageItemBody/index.tsx","../src/ui/OGMessageItemBody/index.tsx","../src/ui/UnknownMessageItemBody/index.tsx","../src/ui/QuoteMessage/index.tsx","../src/ui/MessageContent/index.tsx","../src/smart-components/Conversation/components/RemoveMessage.jsx","../src/smart-components/Conversation/components/MessageHOC.jsx","../src/smart-components/Conversation/components/ConversationScroll.jsx","../src/smart-components/Conversation/components/Notification.jsx","../src/smart-components/Conversation/components/FrozenNotification.tsx","../src/smart-components/Conversation/components/TypingIndicator.jsx","../src/ui/QuoteMessageInput/QuoteMessageThumbnail.tsx","../src/ui/QuoteMessageInput/index.tsx","../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../src/ui/ConnectionStatus/index.jsx","../src/ui/ChatHeader/utils.js","../src/ui/ChatHeader/index.jsx","../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport {\n  getSendingMessageStatus,\n  getOutgoingMessageStates,\n} from '../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__messages-padding');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (!(message\n    && comparingMessage\n    && message?.messageType !== 'admin'\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => {\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage) && isAcceptable,\n    isSameGroup(currMessage, nextMessage) && isAcceptable,\n  ];\n};\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...filteredNewMessages,\n          ...updatedAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...updatedAllMessages,\n          ...filteredNewMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { channel, message } = action.payload;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_THREAD_INFO_UPDATED: {\n      const { channel, event } = action.payload;\n      const { channelUrl, threadInfo, targetMessageId } = event;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (\n        !compareIds(channel.url, currentGroupChannelUrl)\n        || !compareIds(channel.url, channelUrl)\n      ) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, targetMessageId)) {\n            // eslint-disable-next-line no-param-reassign\n            m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n  setQuoteMessage,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel?.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch {\n                  //\n                }\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n      ChannelHandler.onReadReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n      ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onThreadInfoUpdated = (channel, event) => {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: { channel, event },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          try {\n            groupChannel.markAsRead();\n          } catch {\n            //\n          }\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n  replyType,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if ((replyType && replyType === 'QUOTE_REPLY') || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            nextMessageListParams.isInclusive = true;\n            nextMessageListParams.includeReplies = false;\n            nextMessageListParams.includeReaction = true;\n            if (replyType && replyType === 'QUOTE_REPLY') {\n              nextMessageListParams.includeThreadInfo = true;\n              nextMessageListParams.includeParentMessageInfo = true;\n              nextMessageListParams.replyType = 'only_reply_to_channel';\n            }\n            if (userFilledMessageListQuery) {\n              Object.keys(userFilledMessageListQuery).forEach((key) => {\n                nextMessageListParams[key] = userFilledMessageListQuery[key];\n              });\n            }\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { Logger, Sdk } from '../../..';\nimport { GroupChannel } from 'sendbird';\n\ninterface DynamicParams {\n  isOnline: boolean;\n  replyType?: string;\n}\n\ninterface StaticParams {\n  logger: Logger;\n  sdk: Sdk;\n  currentGroupChannel: GroupChannel;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  userFilledMessageListQuery?: Record<string, any>;\n}\n\nfunction useHandleReconnect(\n  { isOnline, replyType }: DynamicParams,\n  {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  }: StaticParams,\n): void {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline && currentGroupChannel?.url) {\n        logger.info('Refreshing conversation state');\n        const useReaction = sdk?.appInfo?.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.isInclusive = true;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams.includeThreadInfo = true;\n          messageListParams.includeParentMessageInfo = true;\n          messageListParams.replyType = 'only_reply_to_channel';\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n          payload: null,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                  payload: null,\n                });\n\n                const hasMore = messages?.length > 0;\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                try {\n                  currentGroupChannel.markAsRead?.();\n                } catch {\n                  //\n                }\n              });\n          });\n      }\n    };\n  }, [isOnline, replyType]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n  replyType,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n  replyType,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    (quoteMessage = null) => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        if (quoteMessage) {\n          params.isReplyToChannel = true;\n          params.parentMessageId = quoteMessage.messageId;\n        }\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text, quoteMessage)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file, quoteMessage = null) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile, quoteMessage)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file, quoteMessage)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    className,\n    width,\n    height,\n    selected,\n    onClick,\n    children,\n  } = props;\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-button${selected ? '--selected' : ''}`,\n      ].join(' ')}\n      ref={ref}\n      role=\"button\"\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired,\n};\n\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: () => { },\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../types';\nimport { Logger } from '../../../index';\n\ninterface DynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setAnimatedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setAnimatedMessageId,\n  allMessages,\n}: DynamicParams,\n  { logger }: StaticParams,\n): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setAnimatedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setAnimatedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setAnimatedMessageId(messageId);\n        }\n      });\n    }, [\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport format from 'date-fns/format';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nimport {\n  getOutgoingMessageState,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  channel,\n}) {\n  const { dateLocale } = useContext(LocalizationContext);\n  const showMessageStatusIcon = channel?.isGroupChannel()\n    && !channel?.isSuper\n    && !channel?.isPublic\n    && !channel?.isBroadcast;\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.DONE,\n    [MessageStatusTypes.DELIVERED]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.READ]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [MessageStatusTypes.SENT]: IconColors.SENT,\n    [MessageStatusTypes.DELIVERED]: IconColors.SENT,\n    [MessageStatusTypes.READ]: IconColors.READ,\n    [MessageStatusTypes.FAILED]: IconColors.ERROR,\n  };\n\n  const messageStatus = useMemo(() => (\n    getOutgoingMessageState(channel, message)\n  ), [channel?.getUnreadMemberCount?.(message), channel?.getUndeliveredMemberCount?.(message)]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(showMessageStatusIcon) && (\n        (messageStatus === MessageStatusTypes.PENDING) ? (\n          <Loader\n            className=\"sendbird-message-status__icon\"\n            width=\"16px\"\n            height=\"16px\"\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </Loader>\n        ) : (\n          <Icon\n            className=\"sendbird-message-status__icon\"\n            type={iconType[messageStatus] || IconTypes.ERROR}\n            fillColor={iconColor[messageStatus]}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        )\n      )}\n      {isSentStatus(messageStatus) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {format(message?.createdAt, 'p', { locale: dateLocale })}\n        </Label>\n      )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func,\n  }),\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null,\n};\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemReply: boolean = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message?.isResendable?.() && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(channel, message) && isByMe;\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer, GroupChannel, OpenChannel } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  channel,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-tooltip__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONCONTENT_1}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip-wrapper',\n      ].join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className=\"sendbird-tooltip-wrapper__children\"\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className=\"sendbird-tooltip-wrapper__hover-tooltip\"\n            style={{ bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)` }}\n          >\n            <div className=\"sendbird-tooltip-wrapper__hover-tooltip__inner\">\n              <div\n                className=\"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\"\n                style={{ left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)` }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { Emoji, EmojiContainer, FileMessage, Reaction, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport ReactionBadge from '../ReactionBadge';\nimport ReactionButton from '../ReactionButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\n\nimport { getClassName, getEmojiListAll, getEmojiMapAll, getEmojiTooltipString, isReactedBy } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  message: UserMessage | FileMessage;\n  emojiContainer: EmojiContainer;\n  memberNicknamesMap: Map<string, string>;\n  spaceFromTrigger?: Record<string, unknown>;\n  isByMe?: boolean;\n  toggleReaction?: (message: UserMessage | FileMessage, key: string, byMe: boolean) => void;\n}\n\nexport default function EmojiReactions2({\n  className,\n  userId,\n  message,\n  emojiContainer,\n  memberNicknamesMap,\n  spaceFromTrigger = {},\n  isByMe = false,\n  toggleReaction,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const emojisMap = getEmojiMapAll(emojiContainer);\n  const addReactionRef = useRef(null);\n\n  return (\n    <div className={getClassName([\n      className, 'sendbird-emoji-reactions',\n      isByMe ? 'outgoing' : 'incoming',\n    ])}>\n      {(message?.reactions?.length > 0) && (\n        message.reactions.map((reaction: Reaction): ReactElement => {\n          const reactedByMe = isReactedBy(userId, reaction);\n          return (\n            <TooltipWrapper\n              className=\"sendbird-emoji-reactions__reaction-badge\"\n              key={reaction?.key}\n              hoverTooltip={(reaction?.userIds?.length > 0) && (\n                <Tooltip>\n                  {getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet)}\n                </Tooltip>\n              )}\n            >\n              <ReactionBadge\n                count={reaction.userIds.length}\n                selected={reactedByMe}\n                onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n              >\n                <ImageRenderer\n                  circle\n                  url={emojisMap.get(reaction?.key)?.url || ''}\n                  width=\"20px\"\n                  height=\"20px\"\n                  defaultComponent={(\n                    <Icon width=\"20px\" height=\"20px\" type={IconTypes.QUESTION} />\n                  )}\n                />\n              </ReactionBadge>\n            </TooltipWrapper>\n          );\n        })\n      )}\n      {(message?.reactions?.length < emojisMap.size) && (\n        <ContextMenu\n          menuTrigger={(toggleDropdown: () => void): ReactElement => (\n            <ReactionBadge\n              className=\"sendbird-emoji-reactions__add-reaction-badge\"\n              ref={addReactionRef}\n              isAdd\n              onClick={toggleDropdown}\n            >\n              <Icon\n                type={IconTypes.EMOJI_MORE}\n                fillColor={IconColors.ON_BACKGROUND_3}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </ReactionBadge>\n          )}\n          menuItems={(closeDropdown: () => void): ReactElement => (\n            <EmojiListItems\n              parentRef={addReactionRef}\n              parentContainRef={addReactionRef}\n              closeDropdown={closeDropdown}\n              spacefromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string): boolean => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={(): void => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji?.url || ''}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style: Record<string, unknown>): ReactElement => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func,\n  }),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport {\n  getClassName,\n  isEditedMessage,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Label\n      type={LabelTypography.BODY_1}\n      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n    >\n      <p className={getClassName([\n        className,\n        'sendbird-text-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n        {message?.message}\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-text-message-item-body__message edited\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </p>\n    </Label>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport { getClassName, getUIKitFileType, truncateString } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function FileMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-file-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-file-message-item-body__file-icon\">\n        <Icon\n          className={'sendbird-file-message-item-body__file-icon__icon'}\n          type={{\n            IMAGE: IconTypes.PHOTO,\n            VIDEO: IconTypes.PLAY,\n            AUDIO: IconTypes.FILE_AUDIO,\n            GIF: IconTypes.GIF,\n            OTHERS: IconTypes.FILE_DOCUMENT,\n          }[getUIKitFileType(message?.type)]}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n      <TextButton\n        className=\"sendbird-file-message-item-body__file-name\"\n        onClick={() => { window.open(message?.url) }}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <Label\n          className=\"sendbird-file-message-item-body__file-name__text\"\n          type={LabelTypography.BODY_1}\n          color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n        >\n          {truncateString(message?.name || message?.url)}\n        </Label>\n      </TextButton>\n    </div>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { getClassName, isGifMessage, isVideoMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function ThumbnailMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  showFileViewer,\n}: Props): ReactElement {\n  const { thumbnails = [] } = message;\n  const thumbnailUrl: string = thumbnails.length > 0 ? thumbnails[0]?.url : '';\n  const [imageRendered, setImageRendered] = useState(false);\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        'sendbird-thumbnail-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}\n      onClick={() => {\n        if(message?.sendingStatus === 'succeeded'){\n          showFileViewer(true);\n        }\n      }}\n    >\n      <ImageRenderer\n        className=\"sendbird-thumbnail-message-item-body__thumbnail\"\n        url={thumbnailUrl || message?.url}\n        alt={message?.type}\n        width=\"360px\"\n        height=\"270px\"\n        onLoad={() => { setImageRendered(true) }}\n        placeHolder={(style) => (\n          <div\n            className=\"sendbird-thumbnail-message-item-body__placeholder\"\n            style={style}\n          >\n            <div className=\"sendbird-thumbnail-message-item-body__placeholder__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )}\n      />\n      {\n        (isVideoMessage(message) && !thumbnailUrl) && !imageRendered && (\n          <video className=\"sendbird-thumbnail-message-item-body__video\">\n            <source src={message?.url} type={message?.type} />\n          </video>\n        )\n      }\n      <div className=\"sendbird-thumbnail-message-item-body__image-cover\" />\n      {\n        (isVideoMessage(message) || isGifMessage(message)) && (\n          <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper\">\n            <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF}\n                fillColor={IconColors.GRAY}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport Icon, { IconTypes } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../utils';\nimport uuidv4 from '../../utils/uuid';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-og-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        key={uuidv4()}\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <p className=\"sendbird-og-message-item-body__text-bubble\">\n          {\n            message?.message.split(' ').map((word: string) => {\n              const urlRegex = new RegExp(\"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?\");\n              const targetUrl = urlRegex.exec(word)?.[0];\n              const stringUrl = { front: '', url: '', back: '' };\n              if (targetUrl) {\n                const targetUrlIndex = word.indexOf(targetUrl);\n                if (targetUrlIndex > 0) {\n                  stringUrl.front = word.slice(0, targetUrlIndex);\n                }\n                stringUrl.url = word.slice(targetUrlIndex, targetUrlIndex + targetUrl.length);\n                if (targetUrlIndex + targetUrl.length < word.length) {\n                  stringUrl.back = word.slice(targetUrlIndex + targetUrl.length);\n                }\n              }\n              if (targetUrl) {\n                return [\n                  stringUrl.front ? stringUrl.front : '',\n                  stringUrl.url ? (\n                    <LinkLabel\n                      className=\"sendbird-word__url\"\n                      key={uuidv4()}\n                      src={stringUrl.url}\n                      type={LabelTypography.BODY_1}\n                      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                    >\n                      {stringUrl.url}\n                    </LinkLabel>\n                  ) : null,\n                  stringUrl.back ? stringUrl.back : '',\n                ];\n              }\n              return (\n                isUrl(word)\n                  ? (\n                    <LinkLabel\n                      className=\"sendbird-og-message-item-body__text-bubble__message\"\n                      key={uuidv4()}\n                      src={word}\n                      type={LabelTypography.BODY_1}\n                      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                    >\n                      {word}\n                    </LinkLabel>\n                  )\n                  : (`${word} `)\n              );\n            })\n          }\n          {\n            isEditedMessage(message) && (\n              <Label\n                className=\"sendbird-og-message-item-body__text-bubble__message\"\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n              >\n                {` ${stringSet.MESSAGE_EDITED} `}\n              </Label>\n            )\n          }\n        </p>\n      </Label>\n      <div\n        className=\"sendbird-og-message-item-body__og-thumbnail\"\n        onClick={openOGUrl}\n      >\n        <ImageRenderer\n          className=\"sendbird-og-message-item-body__og-thumbnail__image\"\n          url={message?.ogMetaData?.defaultImage?.url || ''}\n          alt={message?.ogMetaData?.defaultImage?.alt}\n          // TODO: Change fixing width and height lengths\n          width=\"320px\"\n          height=\"180px\"\n          defaultComponent={(\n            <div className=\"sendbird-og-message-item-body__og-thumbnail__place-holder\">\n              <Icon\n                className=\"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\"\n                type={IconTypes.THUMBNAIL_NONE}\n                width=\"56px\"\n                height=\"56px\"\n              />\n            </div>\n          )}\n        />\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__description\"\n        onClick={openOGUrl}\n      >\n        {message?.ogMetaData?.title && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__title\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.title}\n          </Label>\n        )}\n        {message?.ogMetaData?.description && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__description\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.description}\n          </Label>\n        )}\n        {message?.ogMetaData?.url && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__url\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {message.ogMetaData.url}\n          </Label>\n        )}\n      </div>\n      <div className=\"sendbird-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { CoreMessageType, getClassName } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: CoreMessageType;\n  mouseHover?: boolean;\n}\n\nexport default function UnknownMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-unknown-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        className=\"sendbird-unknown-message-item-body__header\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n      </Label>\n      <Label\n        className=\"sendbird-unknown-message-item-body__description\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n      </Label>\n    </div>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ImageRenderer from '../ImageRenderer';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport {\n  getClassName,\n  getUIKitFileType,\n  getUIKitFileTypes,\n  isFileMessage,\n  isGif,\n  isSupportedFileView,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideo,\n  truncateString,\n} from '../../utils';\ninterface Props {\n  message?: UserMessage | FileMessage;\n  userId?: string;\n  isByMe?: boolean;\n  className?: string | Array<string>;\n  onClick?: () => void;\n}\n\nexport default function QuoteMessage({\n  message,\n  userId = '',\n  isByMe = false,\n  className,\n  onClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { parentMessage } = message;\n  const parentMessageSender = (parentMessage as UserMessage | FileMessage)?.sender;\n  const parentMessageSenderNickname = (userId === parentMessageSender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender?.nickname;\n  const parentMessageUrl = (parentMessage as FileMessage)?.url || '';\n  const parentMessageType = (parentMessage as FileMessage)?.type;\n  const currentMessageSenderNickname = (userId === message?.sender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message?.sender?.nickname;\n\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = (parentMessage as FileMessage)?.name ? (parentMessage as FileMessage).name.split('/') : parentMessageUrl.split('/');\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming'])}\n      key={parentMessage?.messageId}\n      onClick={() => { if (onClick) onClick() }}\n    >\n      <div className=\"sendbird-quote-message__replied-to\">\n        <Icon\n          className=\"sendbird-quote-message__replied-to__icon\"\n          type={IconTypes.REPLY}\n          fillColor={IconColors.ON_BACKGROUND_3}\n          width=\"12px\"\n          height=\"12px\"\n        />\n        <Label\n          className=\"sendbird-quote-message__replied-to__text\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {`${currentMessageSenderNickname} ${stringSet.QUOTED_MESSAGE__REPLIED_TO} ${parentMessageSenderNickname}`}\n        </Label>\n      </div>\n      <div className=\"sendbird-quote-message__replied-message\">\n        {/* text message */}\n        {(isUserMessage(parentMessage as UserMessage) && (parentMessage as UserMessage)?.message?.length > 0) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {(parentMessage as UserMessage)?.message}\n            </Label>\n          </div>\n        )}\n        {/* thumbnail message */}\n        {(isThumbnailMessage(parentMessage as FileMessage) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__thumbnail-message\">\n            <ImageRenderer\n              className=\"sendbird-quote-message__replied-message__thumbnail-message__image\"\n              url={parentMessageUrl}\n              alt={parentMessageType}\n              width=\"144px\"\n              height=\"108px\"\n              onLoad={() => setThumbnailLoaded(true)}\n              defaultComponent={(\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\">\n                    <Icon\n                      type={isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"22px\"\n                      height=\"22px\"\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            {(isVideo(parentMessageType) && !((parentMessage as FileMessage)?.thumbnails?.length > 0)) && (\n              <>\n                <video className=\"sendbird-quote-message__replied-message__thumbnail-message__video\">\n                  <source src={parentMessageUrl} type={parentMessageType} />\n                </video>\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                    <Icon\n                      type={IconTypes.PLAY}\n                      fillColor={IconColors.GRAY}\n                      width=\"14px\"\n                      height=\"14px\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n            {(isThumbnailLoaded && isGif(parentMessageType)) && (\n              <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                  <Icon\n                    type={IconTypes.GIF}\n                    fillColor={IconColors.GRAY}\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* file message */}\n        {(isFileMessage(parentMessage as FileMessage) && !isSupportedFileView((parentMessage as FileMessage).type) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__file-message\">\n            <Icon\n              className=\"sendbird-quote-message__replied-message__file-message__type-icon\"\n              type={{\n                [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n                [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n                [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n                [uikitFileTypes.GIF]: IconTypes.GIF,\n                [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT,\n              }[getUIKitFileType(parentMessageType)]}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"16px\"\n              height=\"16px\"\n            />\n            <Label\n              className=\"sendbird-quote-message__replied-message__file-message__file-name\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_3}\n            >\n              {truncateString(splitFileName[splitFileName.length - 1])}\n            </Label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index.js';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { dateLocale } = useContext(LocalizationContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY') && message?.parentMessageId && message?.parentMessage);\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message)}\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              onClick={() => {\n                if (message?.parentMessage?.createdAt && message?.parentMessageId) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              showFileViewer={showFileViewer}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {/* reactions */}\n          {(useReaction && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message.createdAt, 'p', { locale: dateLocale })}\n            </Label>\n          )}\n        </div>\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { ButtonTypes } from '../../../ui/Button';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n    message,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      type={ButtonTypes.DANGER}\n      disabled={message?.threadInfo?.replyCount > 0}\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageContent from '../../../ui/MessageContent';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport { getClassName } from '../../../utils';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  replyType,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  animatedMessageId,\n  highLightedMessageId,\n  toggleReaction,\n  quoteMessage,\n  setQuoteMessage,\n  renderCustomMessage,\n  currentGroupChannel,\n  handleScroll,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  const { dateLocale } = useContext(LocalizationContext);\n  useLayoutEffect(() => {\n    handleScroll();\n  }, [showEdit, message?.reactions?.length]);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsAnimated(false);\n        setTimeout(() => {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(() => {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsHighlighted(false);\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender?.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={getClassName([\n          'sendbird-msg-hoc sendbird-msg--scroll-ref',\n          isAnimated ? 'sendbird-msg-hoc__animated' : '',\n          isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n        ])}\n      >\n        {/* date-separator */}\n        {\n          hasSeparator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={getClassName([\n        'sendbird-msg-hoc sendbird-msg--scroll-ref',\n        isAnimated ? 'sendbird-msg-hoc__animated' : '',\n        isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n      ])}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        replyType={replyType}\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        quoteMessage={quoteMessage}\n        setQuoteMessage={setQuoteMessage}\n      />\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n              if (message?.messageId === quoteMessage?.messageId) {\n                setQuoteMessage(null);\n              }\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number),\n  }),\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string,\n      })),\n    })),\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string,\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n  quoteMessage: null,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nconst SCROLL_REF_CLASS_NAME = '.sendbird-msg--scroll-ref';\n\nexport default class ConversationScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleScroll = () => {\n    const { scrollRef } = this?.props;\n    const current = scrollRef?.current;\n    if (current) {\n      const bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n      const { scrollBottom = 0 } = this.state;\n      if (scrollBottom < bottom) {\n        current.scrollTop += bottom - scrollBottom;\n      }\n    }\n  }\n\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          // Set block to nearest to prevent unexpected scrolling from outer components\n          try {\n            first.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n\n      // save the lastest scroll bottom value\n      if (scrollRef?.current) {\n        const current = scrollRef?.current;\n        this.setState((state) => ({\n          ...state,\n          scrollBottom: current.scrollHeight - current.scrollTop - current.offsetHeight,\n        }), () => { });\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      replyType,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      animatedMessageId,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n      quoteMessage,\n      setQuoteMessage,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div className=\"sendbird-conversation__scroll-container\">\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div\n            className=\"sendbird-conversation__messages-padding\"\n            ref={scrollRef}\n            onScroll={this.onScroll}\n          >\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            animatedMessageId,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            onScrollToMessage: scrollToMessage,\n                            onReplyMessage: setQuoteMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                            hasSeparator,\n                            menuDisabled: disabled,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      animatedMessageId={animatedMessageId}\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      handleScroll={this.handleScroll}\n                      message={m}\n                      quoteMessage={quoteMessage}\n                      scrollToMessage={scrollToMessage}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      replyType={replyType}\n                      emojiAllMap={emojiAllMap}\n                      emojiContainer={emojiContainer}\n                      editDisabled={editDisabled}\n                      hasSeparator={hasSeparator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      setQuoteMessage={setQuoteMessage}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.PRIMARY}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: 'NONE',\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => { },\n  scrollToMessage: () => { },\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n  quoteMessage: null,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator(props) {\n  const {\n    className,\n    channelUrl,\n    sb,\n    logger,\n  } = props;\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label\n      className={className}\n      type={LabelTypography.CAPTION_2}\n      color={LabelColors.ONBACKGROUND_2}\n    >\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\nTypingIndicator.defaultProps = {\n  className: '',\n};\n\nexport default TypingIndicator;\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { isAudioMessage, isFileMessage, isImageMessage, isThumbnailMessage } from '../../utils';\n\ninterface Props {\n  message: FileMessage;\n}\n\nconst componentClassname = 'sendbird-quote_message_input__avatar';\n\nexport default function QuoteMessageThumbnail({ message }: Props): ReactElement {\n  if (!isFileMessage(message)) {\n    return null;\n  }\n\n  const thumbnailUrl: string = (message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url)\n    || (isImageMessage(message) && message.url);\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return (\n      <ImageRenderer\n        className={componentClassname}\n        url={thumbnailUrl}\n        alt={message.type}\n        width=\"44px\"\n        height=\"44px\"\n        fixedSize\n      />\n    );\n  } else if (isAudioMessage(message)) {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_AUDIO}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_DOCUMENT}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport {\n  CoreMessageType,\n  getClassName,\n  isFileMessage,\n  isGifMessage,\n  isImageMessage,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideoMessage,\n} from '../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport QuoteMessageThumbnail from './QuoteMessageThumbnail';\nimport './index.scss';\n\ninterface Props {\n  className?: string | Array<string>;\n  replyingMessage: CoreMessageType;\n  onClose?: (message: CoreMessageType) => void;\n}\n\nexport default function QuoteMessageInput({\n  className,\n  replyingMessage,\n  onClose,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const fileMessage = replyingMessage as FileMessage;\n  const sender = (replyingMessage as UserMessage | FileMessage)?.sender;\n\n  return (\n    <div className={getClassName(['sendbird-quote_message_input', className])}>\n      <QuoteMessageThumbnail message={fileMessage} />\n      <div\n        className=\"sendbird-quote_message_input__body\"\n        style={{\n          width: `calc(100% - ${fileMessage.isFileMessage() ? '164px' : '120px'})`,\n          left: fileMessage.isFileMessage() ? '92px' : '40px',\n        }}\n      >\n        <Label\n          className=\"sendbird-quote_message_input__body__sender-name\"\n          type={LabelTypography.CAPTION_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {`${stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO} ${(sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME}`}\n        </Label>\n        <Label\n          className=\"sendbird-quote_message_input__body__message-content\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE}\n          {isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO}\n          {isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF}\n          {isUserMessage(replyingMessage as UserMessage) && (replyingMessage as UserMessage).message}\n          {(isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage)) && fileMessage.name}\n        </Label>\n      </div>\n      <Icon\n        className=\"sendbird-quote_message_input__close-button\"\n        type={IconTypes.CLOSE}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"24px\"\n        height=\"24px\"\n        onClick={() => onClose(replyingMessage)}\n      />\n    </div>\n  );\n}\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird, { FileMessage, UserMessage } from 'sendbird';\n\nimport './message-input-wrapper.scss';\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport QuoteMessageInput from '../../../ui/QuoteMessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  quoteMessage?: UserMessage | FileMessage;\n  onSendMessage: (quoteMessage?: UserMessage | FileMessage) => void;\n  onFileUpload: (file: File, quoteMessage?: UserMessage | FileMessage) => void;\n  setQuoteMessage: (message: UserMessage | FileMessage) => void;\n  renderMessageInput: (renderProps: RenderGroupChannelMessageInputProps) => JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  isOnline,\n  initialized,\n  quoteMessage,\n  onSendMessage,\n  onFileUpload,\n  setQuoteMessage,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled, quoteMessage });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <div className=\"sendbird-message-input-wrapper\">\n      {quoteMessage && (\n        <div className=\"sendbird-message-input-wrapper__quote-message-input\">\n          <QuoteMessageInput\n            replyingMessage={quoteMessage}\n            onClose={() => setQuoteMessage(null)}\n          />\n        </div>\n      )}\n      <MessageInput\n        className=\"sendbird-message-input-wrapper__message-input\"\n        channelUrl={channel?.url}\n        placeholder={\n          (quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER)\n          || (utils.isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n          || (utils.isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n        }\n        ref={ref}\n        disabled={disabled}\n        onStartTyping={() => {\n          channel.startTyping();\n        }}\n        onSendMessage={() => {\n          onSendMessage(quoteMessage);\n          setQuoteMessage(null);\n        }}\n        onFileUpload={(file) => {\n          onFileUpload(file, quoteMessage);\n          setQuoteMessage(null);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-connection-status\">\n      <Label\n        type={LabelTypography.BODY_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.TRYING_TO_CONNECT}\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        width=\"14px\"\n        height=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => { };\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isMuted,\n    theme,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  onActionClick: noop,\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    replyType,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  useEffect(() => {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [animatedMessageId, setAnimatedMessageId] = useState('');\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n  const [quoteMessage, setQuoteMessage] = useState(null);\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n    // TODO: Make useReaction independent from appInfo.isUsingReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery, replyType,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n    replyType,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useEffect(() => {\n    setQuoteMessage(null);\n  }, [channelUrl]);\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n      setQuoteMessage,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n    replyType,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline, replyType }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  try {\n                    currentGroupChannel.markAsRead();\n                  } catch {\n                    //\n                  }\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              animatedMessageId={animatedMessageId}\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              replyType={replyType}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              quoteMessage={quoteMessage}\n              setQuoteMessage={setQuoteMessage}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          isOnline={isOnline}\n          initialized={initialized}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          quoteMessage={quoteMessage}\n          setQuoteMessage={setQuoteMessage}\n          renderMessageInput={renderMessageInput}\n        />\n        <div className=\"sendbird-conversation__footer__typing-indicator\">\n          <TypingIndicator className=\"sendbird-conversation__footer__typing-indicator__text\" channelUrl={channelUrl} sb={sdk} logger={logger} />\n          {\n            !isOnline && (\n              <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n            )\n          }\n        </div>\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_THREAD_INFO_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","MessageStatusType","getOutgoingMessageStates","UNDEFINED","SUCCEEDED","FAILED","PENDING","getSendingMessageStatus","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","message","url","type","channelActions","payload","fromSelector","messageId","getParsedStatus","currentGroupChannel","requestState","SENT","unreadCount","getReadReceipt","READ","isDelivered","getDeliveryReceipt","DELIVERED","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","messageType","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","isAcceptable","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","_objectSpread","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","duplicatedMessageIds","updatedAllMessages","duplicatedMessage","find","compareIds","updatedAt","filteredNewMessages","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","some","filterMessageListParams","Date","event","threadInfo","targetMessageId","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","setQuoteMessage","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onReadReceiptUpdated","onDeliveryReceiptUpdated","onMessageUpdated","onThreadInfoUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","replyType","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","includeThreadInfo","includeParentMessageInfo","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","_a","_b","isOnline","wasOffline","useReaction","appInfo","isUsingReaction","messageListParams_1","lastMessageTime","call","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","quoteMessage","value","trim","isReplyToChannel","parentMessageId","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","ReactionButton","React","forwardRef","props","ref","className","selected","onClick","children","Array","isArray","join","slice","propTypes","PropTypes","oneOfType","string","arrayOf","number","bool","func","element","isRequired","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","setIntialTimeStamp","setAnimatedMessageId","isPresent","MessageStatusTypes","MessageStatus","dateLocale","useContext","LocalizationContext","showMessageStatusIcon","isGroupChannel","isSuper","isPublic","isBroadcast","iconType","DONE","DONE_ALL","ERROR","iconColor","IconColors","messageStatus","getOutgoingMessageState","getUnreadMemberCount","getUndeliveredMemberCount","SPINNER","PRIMARY","isSentStatus","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","locale","shape","friendName","profileUrl","MessageItemMenu","_c","isByMe","_d","disabled","showEdit","showRemove","resendMessage","setSupposedHover","stringSet","triggerRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemReply","isFailedMessage","isPendingMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","showMenuItemDelete","getClassName","toggleDropdown","MORE","CONTENT_INVERSE","close","copyToClipboard","MESSAGE_MENU__COPY","MESSAGE_MENU__REPLY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","replyCount","MESSAGE_MENU__DELETE","MessageItemReactionMenu","EMOJI_MORE","getEmojiListAll","reactorId","style","ON_BACKGROUND_3","Tooltip","CAPTION_2","ONCONTENT_1","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","showHoverTooltip","setShowHoverTooltip","useState","childrenRef","bottom","left","offsetWidth","ReactionBadge","count","isAdd","getClassNameTail","ONBACKGROUND_1","EmojiReactions2","memberNicknamesMap","_e","emojisMap","getEmojiMapAll","addReactionRef","reactedByMe","isReactedBy","getEmojiTooltipString","get","size","AdminMessage","TextMessageItemBody","mouseHover","BODY_1","isEditedMessage","ONCONTENT_2","concat","MESSAGE_EDITED","FileMessageItemBody","IMAGE","PHOTO","VIDEO","PLAY","AUDIO","FILE_AUDIO","GIF","OTHERS","FILE_DOCUMENT","getUIKitFileType","window","open","truncateString","ThumbnailMessageItemBody","showFileViewer","_f","thumbnails","thumbnailUrl","_g","imageRendered","setImageRendered","isVideoMessage","ON_BACKGROUND_2","isGifMessage","GRAY","OGMessageItemBody","_k","_l","openOGUrl","ogMetaData","split","word","urlRegex","RegExp","targetUrl","exec","stringUrl","front","back","targetUrlIndex","isUrl","defaultImage","alt","THUMBNAIL_NONE","title","SUBTITLE_2","_h","description","BODY_2","_j","UnknownMessageItemBody","UNKNOWN__UNKNOWN_MESSAGE_TYPE","UNKNOWN__CANNOT_READ_MESSAGE","QuoteMessage","parentMessage","parentMessageSender","parentMessageSenderNickname","QUOTED_MESSAGE__CURRENT_USER","parentMessageUrl","parentMessageType","currentMessageSenderNickname","isThumbnailLoaded","setThumbnailLoaded","uikitFileTypes","getUIKitFileTypes","splitFileName","REPLY","ONBACKGROUND_3","QUOTED_MESSAGE__REPLIED_TO","isThumbnailMessage","isVideo","isGif","isFileMessage","isSupportedFileView","MessageContent","chainTop","chainBottom","scrollToMessage","messageTypes","getUIKitMessageTypes","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","setMouseHover","supposedHover","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","useReplying","useReplyingClassName","ClientAdminMessage","paddingTop","paddingBottom","user","UserProfile","getSenderName","isTextMessage","isOGMessage","getUIKitMessageType","FILE","UNKNOWN","EmojiReactions","RemoveMessage","onCloseModal","onDeleteMessage","ButtonTypes","DANGER","MODAL__DELETE_MESSAGE__TITLE","MessageHoc","editDisabled","hasSeparator","updateMessage","membersMap","animatedMessageId","highLightedMessageId","renderCustomMessage","handleScroll","setShowEdit","setShowRemove","setShowFileViewer","isAnimated","setIsAnimated","isHighlighted","setIsHighlighted","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","marginBottom","RemoveMessageModal","isDateseparator","oneOf","instanceOf","SCROLL_REF_CLASS_NAME","ConversationScroll","Component","constructor","scrollBottom","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","setState","render","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","onScrollToMessage","onReplyMessage","menuDisabled","MessageHOC","CHEVRON_DOWN","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","componentClassname","QuoteMessageThumbnail","isImageMessage","isAudioMessage","QuoteMessageInput","replyingMessage","onClose","fileMessage","CAPTION_1","QUOTE_MESSAGE_INPUT__REPLY_TO","NO_NAME","QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE","QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO","QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF","CLOSE","MessageInputWrapper","onSendMessage","onFileUpload","renderMessageInput","MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","getChannelTitle","currentUserId","LabelStringSet","NO_TITLE","NO_MEMBERS","noop","ChatHeader","currentUser","subTitle","isMuted","theme","showSearchIcon","onSearchClick","onActionClick","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","dispatchers","reconnect","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setHighLightedMessageId","messagesStore","useReducer","messagesReducer","messagesInitialState","readStatus","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","LOADING","any","includeMetaArray","includeParentMessageText","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}