{"version":3,"file":"ThreadProvider-5ccbbc4b.js","sources":["../src/smart-components/Thread/context/utils.ts","../src/smart-components/Thread/consts.ts","../src/smart-components/Thread/context/dux/actionTypes.ts","../src/smart-components/Thread/context/dux/reducer.ts","../src/smart-components/Thread/context/dux/initialState.ts","../src/smart-components/Thread/context/hooks/useGetChannel.ts","../src/smart-components/Thread/context/hooks/useGetAllEmoji.ts","../src/smart-components/Thread/context/hooks/useGetThreadList.ts","../src/smart-components/Thread/context/hooks/useGetParentMessage.ts","../src/smart-components/Thread/context/hooks/useHandlePubsubEvents.ts","../src/smart-components/Thread/context/hooks/useHandleChannelEvents.ts","../src/smart-components/Thread/context/hooks/useSendFileMessage.ts","../src/smart-components/Thread/context/hooks/useUpdateMessageCallback.ts","../src/smart-components/Thread/context/hooks/useDeleteMessageCallback.ts","../src/smart-components/Thread/context/hooks/useGetPrevThreadsCallback.ts","../src/smart-components/Thread/context/hooks/useGetNextThreadsCallback.ts","../src/smart-components/Thread/context/hooks/useToggleReactionsCallback.ts","../src/smart-components/Thread/context/hooks/useSendUserMessageCallback.ts","../src/smart-components/Thread/context/hooks/useResendMessageCallback.ts","../src/smart-components/Thread/context/ThreadProvider.tsx"],"sourcesContent":["import format from 'date-fns/format';\nimport { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { FileMessage, UserMessage } from \"@sendbird/chat/message\";\nimport { getOutgoingMessageState, OutgoingMessageStates } from \"../../../utils/exports/getOutgoingMessageState\";\n\nexport const getNicknamesMapFromMembers = (members = []): Map<string, string> => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const isAboutSame = (a: number, b: number, px: number): boolean => (Math.abs(a - b) <= px);\n\nexport const isEmpty = (val: unknown): boolean => (val === null || val === undefined);\n\n// Some Ids return string and number inconsistently\n// only use to comapre IDs\nexport function compareIds(a: number | string, b: number | string): boolean {\n  if (isEmpty(a) || isEmpty(b)) {\n    return false;\n  }\n  const aString = a.toString();\n  const bString = b.toString();\n  return aString === bString;\n}\n\nexport const getMessageCreatedAt = (message: UserMessage | FileMessage): string => format(message.createdAt, 'p');\nexport const isReadMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isSameGroup = (\n  message: UserMessage | FileMessage,\n  comparingMessage: UserMessage | FileMessage,\n  currentChannel: GroupChannel,\n): boolean => {\n  if (!(message\n    && comparingMessage\n    && message.messageType\n    && message.messageType !== 'admin'\n    && comparingMessage.messageType\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n    && isReadMessage(currentChannel, message) === isReadMessage(currentChannel, comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage: UserMessage | FileMessage,\n  currMessage: UserMessage | FileMessage,\n  nextMessage: UserMessage | FileMessage,\n  currentChannel: GroupChannel,\n  replyType: string,\n): [boolean, boolean] => {\n  if (replyType === 'THREAD' && currMessage?.threadInfo) {\n    return [false, false];\n  }\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage, currentChannel) && isAcceptable,\n    isSameGroup(currMessage, nextMessage, currentChannel) && isAcceptable,\n  ];\n};\n\nexport const scrollIntoLast = (intialTry = 0): void => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-thread-ui--scroll');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n","export const PREV_THREADS_FETCH_SIZE = 30;\nexport const NEXT_THREADS_FETCH_SIZE = 30;\n","export enum ThreadContextActionTypes {\n  // initialize\n  INIT_USER_ID = 'INIT_USER_ID',\n  // channel\n  GET_CHANNEL_START = 'GET_CHANNEL_START',\n  GET_CHANNEL_SUCCESS = 'GET_CHANNEL_SUCCESS',\n  GET_CHANNEL_FAILURE = 'GET_CHANNEL_FAILURE',\n  // emojis\n  SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER',\n  // parent message\n  GET_PARENT_MESSAGE_START = 'GET_PARENT_MESSAGE_START',\n  GET_PARENT_MESSAGE_SUCCESS = 'GET_PARENT_MESSAGE_SUCCESS',\n  GET_PARENT_MESSAGE_FAILURE = 'GET_PARENT_MESSAGE_FAILURE',\n  // fetch threads\n  INITIALIZE_THREAD_LIST_START = 'INITIALIZE_THREAD_LIST_START',\n  INITIALIZE_THREAD_LIST_SUCCESS = 'INITIALIZE_THREAD_LIST_SUCCESS',\n  INITIALIZE_THREAD_LIST_FAILURE = 'INITIALIZE_THREAD_LIST_FAILURE',\n  GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START',\n  GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS',\n  GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE',\n  GET_NEXT_MESSAGES_START = 'GET_NEXT_MESSAGES_START',\n  GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS',\n  GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE',\n  // handle messages\n  SEND_MESSAGE_START = 'SEND_MESSAGE_START',\n  SEND_MESSAGE_SUCESS = 'SEND_MESSAGE_SUCESS',\n  SEND_MESSAGE_FAILURE = 'SEND_MESSAGE_FAILURE',\n  RESEND_MESSAGE_START = 'RESEND_MESSAGE_START',\n  ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID',\n  // event handlers - message status change\n  ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED',\n  ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED',\n  ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED',\n  ON_REACTION_UPDATED = 'ON_REACTION_UPDATED',\n  // event handlers - user status change\n  ON_USER_MUTED = 'ON_USER_MUTED',\n  ON_USER_UNMUTED = 'ON_USER_UNMUTED',\n  ON_USER_BANNED = 'ON_USER_BANNED',\n  ON_USER_UNBANNED = 'ON_USER_UNBANNED',\n  ON_USER_LEFT = 'ON_USER_LEFT',\n  // event handler - channel status change\n  ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN',\n  ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN',\n  ON_OPERATOR_UPDATED = 'ON_OPERATOR_UPDATED',\n}\n","import { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { FileMessage, ReactionEvent, UserMessage } from \"@sendbird/chat/message\";\nimport { NEXT_THREADS_FETCH_SIZE, PREV_THREADS_FETCH_SIZE } from \"../../consts\";\nimport { ChannelStateTypes, ParentMessageStateTypes, ThreadListStateTypes } from \"../../types\";\nimport { compareIds } from \"../utils\";\nimport { ThreadContextActionTypes as actionTypes } from \"./actionTypes\";\nimport { ThreadContextInitialState } from \"./initialState\";\n\ninterface ActionInterface {\n  type: actionTypes;\n  payload?: any;\n}\n\nexport default function reducer(\n  state: ThreadContextInitialState,\n  action: ActionInterface,\n): ThreadContextInitialState {\n  switch (action.type) {\n    // initialize\n    case actionTypes.INIT_USER_ID: {\n      return {\n        ...state,\n        currentUserId: action.payload,\n      };\n    }\n    case actionTypes.GET_CHANNEL_START: {\n      return {\n        ...state,\n        channelState: ChannelStateTypes.LOADING,\n        currentChannel: null,\n      };\n    }\n    case actionTypes.GET_CHANNEL_SUCCESS: {\n      const groupChannel = action.payload.groupChannel as GroupChannel;\n      return {\n        ...state,\n        channelState: ChannelStateTypes.INITIALIZED,\n        currentChannel: groupChannel,\n        // only support in normal group channel\n        isMuted: groupChannel?.members?.find((member) => member?.userId === state.currentUserId)?.isMuted || false,\n        isChannelFrozen: groupChannel?.isFrozen || false,\n      };\n    }\n    case actionTypes.GET_CHANNEL_FAILURE: {\n      return {\n        ...state,\n        channelState: ChannelStateTypes.INVALID,\n        currentChannel: null,\n      };\n    }\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      const { emojiContainer } = action.payload;\n      return {\n        ...state,\n        emojiContainer: emojiContainer,\n      }\n    }\n    case actionTypes.GET_PARENT_MESSAGE_START: {\n      return {\n        ...state,\n        parentMessageState: ParentMessageStateTypes.LOADING,\n        parentMessage: null,\n      };\n    }\n    case actionTypes.GET_PARENT_MESSAGE_SUCCESS: {\n      return {\n        ...state,\n        parentMessageState: ParentMessageStateTypes.INITIALIZED,\n        parentMessage: action.payload.parentMessage,\n      };\n    }\n    case actionTypes.GET_PARENT_MESSAGE_FAILURE: {\n      return {\n        ...state,\n        parentMessageState: ParentMessageStateTypes.INVALID,\n        parentMessage: null,\n      };\n    }\n    // fetch threads\n    case actionTypes.INITIALIZE_THREAD_LIST_START: {\n      return {\n        ...state,\n        threadListState: ThreadListStateTypes.LOADING,\n        allThreadMessages: [],\n      };\n    }\n    case actionTypes.INITIALIZE_THREAD_LIST_SUCCESS: {\n      const { parentMessage, anchorMessage, threadedMessages } = action.payload;\n      const anchorMessageCreatedAt = (!anchorMessage?.messageId) ? parentMessage?.createdAt : anchorMessage?.createdAt;\n      const anchorIndex = threadedMessages.findIndex((message) => message?.createdAt > anchorMessageCreatedAt);\n      const prevThreadMessages = anchorIndex > -1 ? threadedMessages.slice(0, anchorIndex) : threadedMessages;\n      const anchorThreadMessage = anchorMessage?.messageId ? [anchorMessage] : [];\n      const nextThreadMessages = anchorIndex > -1 ? threadedMessages.slice(anchorIndex) : [];\n      return {\n        ...state,\n        threadListState: ThreadListStateTypes.INITIALIZED,\n        hasMorePrev: anchorIndex === -1 || anchorIndex === PREV_THREADS_FETCH_SIZE,\n        hasMoreNext: threadedMessages.length - anchorIndex === NEXT_THREADS_FETCH_SIZE,\n        allThreadMessages: [prevThreadMessages, anchorThreadMessage, nextThreadMessages].flat(),\n      };\n    }\n    case actionTypes.INITIALIZE_THREAD_LIST_FAILURE: {\n      return {\n        ...state,\n        threadListState: ThreadListStateTypes.INVALID,\n        allThreadMessages: [],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_START: {\n      return {\n        ...state,\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const { threadedMessages } = action.payload;\n      return {\n        ...state,\n        hasMoreNext: threadedMessages.length === NEXT_THREADS_FETCH_SIZE,\n        allThreadMessages: [...state.allThreadMessages, ...threadedMessages],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return {\n        ...state,\n        hasMoreNext: false,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_START: {\n      return {\n        ...state,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const { threadedMessages } = action.payload;\n      return {\n        ...state,\n        hasMorePrev: threadedMessages.length === PREV_THREADS_FETCH_SIZE,\n        allThreadMessages: [...threadedMessages, ...state.allThreadMessages],\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_FAILURE: {\n      return {\n        ...state,\n        hasMorePrev: false,\n      };\n    }\n    // event handlers - message status change\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message }: { channel: GroupChannel, message: UserMessage | FileMessage } = action.payload;\n\n      if (\n        state.currentChannel?.url !== channel?.url\n        || state.hasMoreNext\n        || message?.parentMessage?.messageId !== state?.parentMessage?.messageId\n      ) {\n        return state;\n      }\n      const isAlreadyReceived = state.allThreadMessages.findIndex((m) => (\n        m.messageId === message.messageId\n      )) > -1;\n      return {\n        ...state,\n        parentMessage: state.parentMessage?.messageId === message?.messageId ? message : state.parentMessage,\n        allThreadMessages: isAlreadyReceived\n          ? state.allThreadMessages.map((m) => (\n            m.messageId === message.messageId ? message : m\n          ))\n          : [\n            ...state.allThreadMessages.filter((m) => (m as UserMessage | FileMessage)?.reqId !== message?.reqId),\n            message,\n          ],\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { channel, message } = action.payload;\n      if (state.currentChannel?.url !== channel?.url) {\n        return state;\n      }\n      return {\n        ...state,\n        parentMessage: state.parentMessage?.messageId === message?.messageId\n          ? message\n          : state.parentMessage,\n        allThreadMessages: state.allThreadMessages?.map((msg) => (\n          (msg?.messageId === message?.messageId) ? message : msg\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED: {\n      const { channel, messageId } = action.payload;\n      if (state.currentChannel?.url !== channel?.url) {\n        return state;\n      }\n      if (state?.parentMessage?.messageId === messageId) {\n        return {\n          ...state,\n          parentMessage: null,\n          parentMessageState: ParentMessageStateTypes.NIL,\n          allThreadMessages: [],\n        };\n      }\n      return {\n        ...state,\n        allThreadMessages: state.allThreadMessages?.filter((msg) => (\n          msg?.messageId !== messageId\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID: {\n      return {\n        ...state,\n        allThreadMessages: state.allThreadMessages.filter((m) => (\n          !compareIds((m as UserMessage | FileMessage).reqId, action.payload)\n        )),\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      const reactionEvent = action.payload?.reactionEvent as ReactionEvent;\n      if (state?.parentMessage?.messageId === reactionEvent?.messageId) {\n        state.parentMessage?.applyReactionEvent?.(reactionEvent);\n      }\n      return {\n        ...state,\n        allThreadMessages: state.allThreadMessages.map((m) => {\n          if (reactionEvent?.messageId === m?.messageId) {\n            m?.applyReactionEvent?.(reactionEvent);\n            return m;\n          }\n          return m;\n        })\n      };\n    }\n    // event handlers - user status change\n    case actionTypes.ON_USER_MUTED: {\n      const { channel, user } = action.payload;\n      if (state.currentChannel?.url !== channel?.url || state.currentUserId !== user?.userId) {\n        return state;\n      }\n      return {\n        ...state,\n        isMuted: true,\n      };\n    }\n    case actionTypes.ON_USER_UNMUTED: {\n      const { channel, user } = action.payload;\n      if (state.currentChannel?.url !== channel?.url || state.currentUserId !== user?.userId) {\n        return state;\n      }\n      return {\n        ...state,\n        isMuted: false,\n      };\n    }\n    case actionTypes.ON_USER_BANNED: {\n      return {\n        ...state,\n        channelState: ChannelStateTypes.NIL,\n        threadListState: ThreadListStateTypes.NIL,\n        parentMessageState: ParentMessageStateTypes.NIL,\n        currentChannel: null,\n        parentMessage: null,\n        allThreadMessages: [],\n        hasMorePrev: false,\n        hasMoreNext: false,\n      };\n    }\n    case actionTypes.ON_USER_UNBANNED: {\n      return {\n        ...state,\n      };\n    }\n    case actionTypes.ON_USER_LEFT: {\n      return {\n        ...state,\n        channelState: ChannelStateTypes.NIL,\n        threadListState: ThreadListStateTypes.NIL,\n        parentMessageState: ParentMessageStateTypes.NIL,\n        currentChannel: null,\n        parentMessage: null,\n        allThreadMessages: [],\n        hasMorePrev: false,\n        hasMoreNext: false,\n      };\n    }\n    // event handler - channel status change\n    case actionTypes.ON_CHANNEL_FROZEN: {\n      return {\n        ...state,\n        isChannelFrozen: true,\n      };\n    }\n    case actionTypes.ON_CHANNEL_UNFROZEN: {\n      return {\n        ...state,\n        isChannelFrozen: false,\n      };\n    }\n    case actionTypes.ON_OPERATOR_UPDATED: {\n      const { channel } = action.payload;\n      if (channel?.url === state.currentChannel?.url) {\n        return {\n          ...state,\n          currentChannel: channel,\n        }\n      }\n      return state;\n    }\n    // message\n    case actionTypes.SEND_MESSAGE_START: {\n      const { message } = action.payload;\n      return {\n        ...state,\n        allThreadMessages: [\n          ...state.allThreadMessages,\n          message,\n        ]\n      };\n    }\n    case actionTypes.SEND_MESSAGE_SUCESS: {\n      const { message } = action.payload;\n      const filteredThreadMessages = state.allThreadMessages.filter((m) => (\n        !compareIds((m as UserMessage)?.reqId, message?.reqId)\n      ));\n      return {\n        ...state,\n        allThreadMessages: [\n          ...filteredThreadMessages,\n          message,\n        ],\n      };\n    }\n    case actionTypes.SEND_MESSAGE_FAILURE: {\n      const { message } = action.payload;\n      return {\n        ...state,\n        allThreadMessages: state.allThreadMessages.map((m) => (\n          compareIds((m as UserMessage)?.reqId, message?.reqId)\n            ? message\n            : m\n        ))\n      };\n    }\n    case actionTypes.RESEND_MESSAGE_START: {\n      return {\n        ...state,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { EmojiContainer } from \"@sendbird/chat\";\nimport { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { BaseMessage, FileMessage, UserMessage } from \"@sendbird/chat/message\";\nimport {\n  ChannelStateTypes,\n  ParentMessageStateTypes,\n  ThreadListStateTypes,\n} from \"../../types\";\n\nexport interface ThreadContextInitialState {\n  currentChannel: GroupChannel;\n  allThreadMessages: Array<BaseMessage>;\n  parentMessage: UserMessage | FileMessage;\n  channelState: ChannelStateTypes;\n  parentMessageState: ParentMessageStateTypes;\n  threadListState: ThreadListStateTypes;\n  hasMorePrev: boolean;\n  hasMoreNext: boolean;\n  emojiContainer: EmojiContainer;\n  isMuted: boolean;\n  isChannelFrozen: boolean;\n  currentUserId: string;\n}\n\nconst initialState: ThreadContextInitialState = {\n  currentChannel: null,\n  allThreadMessages: [],\n  parentMessage: null,\n  channelState: ChannelStateTypes.NIL,\n  parentMessageState: ParentMessageStateTypes.NIL,\n  threadListState: ThreadListStateTypes.NIL,\n  hasMorePrev: false,\n  hasMoreNext: false,\n  emojiContainer: {} as EmojiContainer,\n  isMuted: false,\n  isChannelFrozen: false,\n  currentUserId: '',\n}\n\nexport default initialState;\n","import { useEffect } from 'react';\nimport { SendbirdGroupChat } from '@sendbird/chat/groupChannel';\n\nimport { Logger } from '../../../../lib/SendbirdState';\nimport { ThreadContextActionTypes } from '../dux/actionTypes';\nimport { FileMessage, UserMessage } from '@sendbird/chat/message';\n\ninterface DynamicProps {\n  channelUrl: string;\n  sdkInit: boolean;\n  message: UserMessage | FileMessage;\n}\n\ninterface StaticProps {\n  sdk: SendbirdGroupChat;\n  logger: Logger;\n  threadDispatcher: (props: { type: string, payload?: any }) => void;\n}\n\nexport default function useGetChannel({\n  channelUrl,\n  sdkInit,\n  message,\n}: DynamicProps, {\n  sdk,\n  logger,\n  threadDispatcher,\n}: StaticProps): void {\n  useEffect(() => {\n    // validation check\n    if (sdkInit && channelUrl && sdk?.groupChannel) {\n      threadDispatcher({\n        type: ThreadContextActionTypes.GET_CHANNEL_START,\n        payload: null,\n      });\n      sdk.groupChannel.getChannel?.(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Thread | useInitialize: Get channel succeeded', groupChannel);\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_CHANNEL_SUCCESS,\n            payload: { groupChannel },\n          });\n        })\n        .catch((error) => {\n          logger.info('Thread | useInitialize: Get channel failed', error);\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_CHANNEL_FAILURE,\n            payload: error,\n          });\n        });\n    }\n  }, [message, sdkInit]);\n  /**\n   * We don't use channelUrl here,\n   * because Thread must operate independently of the channel.\n   */\n}\n","import { useEffect } from 'react';\nimport { SendbirdGroupChat } from \"@sendbird/chat/groupChannel\";\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport { ThreadContextActionTypes } from '../dux/actionTypes';\n\ninterface DanamicPrpos {\n  sdk: SendbirdGroupChat;\n}\ninterface StaticProps {\n  logger: Logger;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useGetAllEmoji({\n  sdk,\n}: DanamicPrpos, {\n  logger,\n  threadDispatcher,\n}: StaticProps): void {\n  useEffect(() => {\n    if (sdk?.getAllEmoji) { // validation check\n      sdk?.getAllEmoji()\n        .then((emojiContainer) => {\n          logger.info('Thread | useGetAllEmoji: Getting emojis succeeded.', emojiContainer);\n          threadDispatcher({\n            type: ThreadContextActionTypes.SET_EMOJI_CONTAINER,\n            payload: { emojiContainer },\n          });\n        })\n        .catch((error) => {\n          logger.info('Thread | useGetAllEmoji: Getting emojis failed.', error);\n        });\n    }\n  }, [sdk]);\n}\n","import { useEffect } from 'react';\nimport { CustomUseReducerDispatcher, Logger } from '../../../../lib/SendbirdState';\nimport { FileMessage, ThreadedMessageListParams, UserMessage } from '@sendbird/chat/message';\nimport { ThreadContextActionTypes } from '../dux/actionTypes';\nimport { NEXT_THREADS_FETCH_SIZE, PREV_THREADS_FETCH_SIZE } from '../../consts';\n\ninterface DynamicProps {\n  sdkInit: boolean;\n  parentMessage: UserMessage | FileMessage;\n  anchorMessage?: UserMessage | FileMessage;\n  isReactionEnabled?: boolean;\n}\n\ninterface StaticProps {\n  logger: Logger;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useGetThreadList({\n  sdkInit,\n  parentMessage,\n  anchorMessage,\n  isReactionEnabled,\n}: DynamicProps, {\n  logger,\n  threadDispatcher,\n}: StaticProps): void {\n  useEffect(() => {\n    // validation check\n    if (sdkInit && parentMessage?.getThreadedMessagesByTimestamp) {\n      threadDispatcher({\n        type: ThreadContextActionTypes.INITIALIZE_THREAD_LIST_START,\n        payload: null,\n      });\n      const timeStamp = anchorMessage?.createdAt || 0;\n      const params = {\n        prevResultSize: PREV_THREADS_FETCH_SIZE,\n        nextResultSize: NEXT_THREADS_FETCH_SIZE,\n        includeReactions: isReactionEnabled,\n      } as ThreadedMessageListParams;\n      logger.info('Thread | useGetThreadList: Initialize thread list start.', { timeStamp, params });\n      parentMessage.getThreadedMessagesByTimestamp?.(timeStamp, params)\n        .then(({ parentMessage, threadedMessages }) => {\n          logger.info('Thread | useGetThreadList: Initialize thread list succeeded.', { parentMessage, threadedMessages });\n          threadDispatcher({\n            type: ThreadContextActionTypes.INITIALIZE_THREAD_LIST_SUCCESS,\n            payload: {\n              parentMessage,\n              anchorMessage,\n              threadedMessages,\n            },\n          });\n        })\n        .catch((error) => {\n          logger.info('Therad | useGetThreadList: Initialize thread list failed.', error);\n          threadDispatcher({\n            type: ThreadContextActionTypes.INITIALIZE_THREAD_LIST_FAILURE,\n            payload: error,\n          });\n        });\n    }\n  }, [sdkInit, parentMessage, anchorMessage]);\n}\n","import { useEffect } from 'react';\nimport { SendbirdGroupChat } from '@sendbird/chat/groupChannel';\n\nimport { CustomUseReducerDispatcher, Logger } from '../../../../lib/SendbirdState';\nimport { BaseMessage, MessageRetrievalParams } from '@sendbird/chat/message';\nimport { ThreadContextActionTypes } from '../dux/actionTypes';\nimport { ChannelType } from '@sendbird/chat';\n\ninterface DynamicProps {\n  channelUrl: string;\n  parentMessageId: number;\n  sdkInit: boolean;\n  parentMessage?: BaseMessage;\n}\n\ninterface StaticProps {\n  sdk: SendbirdGroupChat;\n  logger: Logger;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useGetParentMessage({\n  channelUrl,\n  parentMessageId,\n  sdkInit,\n  parentMessage,\n}: DynamicProps, {\n  sdk,\n  logger,\n  threadDispatcher,\n}: StaticProps): void {\n  useEffect(() => {\n    // validation check\n    if (sdkInit && sdk?.message?.getMessage) {\n      threadDispatcher({\n        type: ThreadContextActionTypes.GET_PARENT_MESSAGE_START,\n        payload: null,\n      });\n      const params: MessageRetrievalParams = {\n        channelUrl,\n        channelType: ChannelType.GROUP,\n        messageId: parentMessageId,\n        includeMetaArray: true,\n        includeReactions: true,\n        includeThreadInfo: true,\n        includePollDetails: true,\n        includeParentMessageInfo: true,\n      };\n      logger.info('Thread | useGetParentMessage: Get parent message start.', params);\n      const fetchParentMessage = async () => {\n        const data = await sdk.message.getMessage?.(params);\n        return data;\n      }\n      fetchParentMessage()\n        .then((parentMsg) => {\n          logger.info('Thread | useGetParentMessage: Get parent message succeeded.', parentMessage);\n          parentMsg.ogMetaData = parentMessage.ogMetaData;// ogMetaData is not included for now\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_PARENT_MESSAGE_SUCCESS,\n            payload: { parentMessage: parentMsg },\n          });\n        })\n        .catch((error) => {\n          logger.info('Thread | useGetParentMessage: Get parent message failed.', error);\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_PARENT_MESSAGE_FAILURE,\n            payload: error,\n          });\n        });\n    }\n  }, [sdkInit, parentMessageId]);\n  /**\n   * We don't use channelUrl here,\n   * because Thread must operate independently of the channel.\n   */\n}\n","import { useEffect } from \"react\";\nimport { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { FileMessage, UserMessage } from \"@sendbird/chat/message\";\n\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport * as topics from '../../../../lib/pubSub/topics';\nimport { scrollIntoLast } from \"../utils\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\n\ninterface DynamicProps {\n  sdkInit: boolean;\n  currentChannel: GroupChannel;\n  parentMessage: UserMessage | FileMessage\n}\ninterface StaticProps {\n  logger: Logger;\n  pubSub: any;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useHandlePubsubEvents({\n  sdkInit,\n  currentChannel,\n  parentMessage,\n}: DynamicProps, {\n  pubSub,\n  threadDispatcher,\n}: StaticProps): void {\n  useEffect(() => {\n    const pubSubHandler = (): Map<any, any> => {\n      const subscriber = new Map();\n      if (!pubSub || !pubSub.subscribe) {\n        return subscriber;\n      }\n      subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (props) => {\n        const { channel, message } = props;\n        if (currentChannel?.url === channel?.url\n          && message?.parentMessageId === parentMessage?.messageId\n        ) {\n          threadDispatcher({\n            type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,\n            payload: { message },\n          });\n        }\n        scrollIntoLast?.();\n      }));\n      subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (props) => {\n        const { channel, message } = props;\n        if (currentChannel?.url === channel?.url) {\n          threadDispatcher({\n            type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,\n            payload: { message },\n          });\n        }\n        scrollIntoLast?.();\n      }));\n      subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n        const { channel, message } = msg;\n        if (currentChannel?.url === channel?.url) {\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_MESSAGE_UPDATED,\n            payload: { channel, message },\n          });\n        }\n      }));\n      subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n        const { channel, messageId } = msg;\n        if (currentChannel?.url === channel?.url) {\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_MESSAGE_DELETED,\n            payload: { messageId },\n          });\n        }\n      }));\n    };\n    const subscriber = pubSubHandler();\n    return () => {\n      subscriber?.forEach((s) => {\n        try {\n          s?.remove();\n        } catch {\n          //\n        }\n      });\n    }\n  }, [sdkInit, currentChannel]);\n}\n","import { GroupChannel, GroupChannelHandler, SendbirdGroupChat } from \"@sendbird/chat/groupChannel\";\nimport { useEffect } from \"react\";\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport uuidv4 from \"../../../../utils/uuid\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\n\n\ninterface DynamicProps {\n  sdk: SendbirdGroupChat;\n  currentChannel: GroupChannel;\n}\ninterface StaticProps {\n  logger: Logger;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useHandleChannelEvents({\n  sdk,\n  currentChannel,\n}: DynamicProps, {\n  logger,\n  threadDispatcher,\n}: StaticProps): void {\n  useEffect(() => {\n    const handlerId = uuidv4();\n    // validation check\n    if (sdk?.groupChannel?.addGroupChannelHandler\n      && currentChannel\n    ) {\n      const channelHandlerParams: GroupChannelHandler = {\n        // message status change\n        onMessageReceived(channel, message) {\n          logger.info('Thread | useHandleChannelEvents: onMessageReceived', { channel, message });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_MESSAGE_RECEIVED,\n            payload: { channel, message },\n          });\n        },\n        onMessageUpdated(channel, message) {\n          logger.info('Thread | useHandleChannelEvents: onMessageUpdated', { channel, message });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_MESSAGE_UPDATED,\n            payload: { channel, message },\n          });\n        },\n        onMessageDeleted(channel, messageId) {\n          logger.info('Thread | useHandleChannelEvents: onMessageDeleted', { channel, messageId });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_MESSAGE_DELETED,\n            payload: { channel, messageId },\n          });\n        },\n        onReactionUpdated(channel, reactionEvent) {\n          logger.info('Thread | useHandleChannelEvents: onReactionUpdated', { channel, reactionEvent });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_REACTION_UPDATED,\n            payload: { channel, reactionEvent },\n          });\n        },\n        // user status change\n        onUserMuted(channel, user) {\n          logger.info('Thread | useHandleChannelEvents: onUserMuted', { channel, user });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_USER_MUTED,\n            payload: { channel, user },\n          });\n        },\n        onUserUnmuted(channel, user) {\n          logger.info('Thread | useHandleChannelEvents: onUserUnmuted', { channel, user });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_USER_UNMUTED,\n            payload: { channel, user },\n          });\n        },\n        onUserBanned(channel, user) {\n          logger.info('Thread | useHandleChannelEvents: onUserBanned', { channel, user });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_USER_BANNED,\n            payload: { channel, user },\n          });\n        },\n        onUserUnbanned(channel, user) {\n          logger.info('Thread | useHandleChannelEvents: onUserUnbanned', { channel, user });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_USER_UNBANNED,\n            payload: { channel, user },\n          });\n        },\n        onUserLeft(channel, user) {\n          logger.info('Thread | useHandleChannelEvents: onUserLeft', { channel, user });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_USER_LEFT,\n            payload: { channel, user },\n          });\n        },\n        // channel status change\n        onChannelFrozen(channel) {\n          logger.info('Thread | useHandleChannelEvents: onChannelFrozen', { channel });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_CHANNEL_FROZEN,\n            payload: { channel },\n          });\n        },\n        onChannelUnfrozen(channel) {\n          logger.info('Thread | useHandleChannelEvents: onChannelUnfrozen', { channel });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_CHANNEL_UNFROZEN,\n            payload: { channel },\n          });\n        },\n        onOperatorUpdated(channel, users) {\n          logger.info('Thread | useHandleChannelEvents: onOperatorUpdated', { channel, users });\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_OPERATOR_UPDATED,\n            payload: { channel, users },\n          });\n        },\n      };\n      const channelHandler = new GroupChannelHandler(channelHandlerParams);\n      sdk.groupChannel.addGroupChannelHandler?.(handlerId, channelHandler);\n      logger.info('Thread | useHandleChannelEvents: Added channelHandler in Thread', { handlerId, channelHandler });\n    }\n    return () => {\n      // validation check\n      if (handlerId && sdk?.groupChannel?.removeGroupChannelHandler) {\n        sdk.groupChannel.removeGroupChannelHandler?.(handlerId);\n        logger.info('Thread | useHandleChannelEvents: Removed channelHandler in Thread.', handlerId);\n      }\n    };\n  }, [\n    sdk?.groupChannel,\n    currentChannel,\n  ]);\n}\n","import { useCallback } from \"react\";\nimport { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { FileMessage, FileMessageCreateParams } from \"@sendbird/chat/message\";\n\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\nimport * as topics from '../../../../lib/pubSub/topics';\nimport { scrollIntoLast } from \"../utils\";\n\ninterface DynamicProps {\n  currentChannel: GroupChannel;\n}\ninterface StaticProps {\n  logger: Logger;\n  pubSub: any;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\ninterface LocalFileMessage extends FileMessage {\n  localUrl: string;\n  file: File;\n}\n\nexport default function useSendFileMessageCallback({\n  currentChannel,\n}: DynamicProps, {\n  logger,\n  pubSub,\n  threadDispatcher,\n}: StaticProps): (file, quoteMessage) => void {\n  const sendMessage = useCallback((file, quoteMessage) => {\n    const createParamsDefault = () => {\n      const params = {} as FileMessageCreateParams;\n      params.file = file;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n    const params = createParamsDefault();\n    logger.info('Thread | useSendFileMessageCallback: Sending file message start.', params);\n\n    currentChannel?.sendFileMessage(params)\n      .onPending((pendingMessage) => {\n        threadDispatcher({\n          type: ThreadContextActionTypes.SEND_MESSAGE_START,\n          payload: {\n            /* pubSub is used instead of messagesDispatcher\n            to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n            message: {\n              ...pendingMessage,\n              url: URL.createObjectURL(file),\n              // pending thumbnail message seems to be failed\n              requestState: 'pending',\n            },\n          },\n        });\n        setTimeout(() => scrollIntoLast(), 1000);\n      })\n      .onFailed((error, message) => {\n        (message as LocalFileMessage).localUrl = URL.createObjectURL(file);\n        (message as LocalFileMessage).file = file;\n        logger.info('Thread | useSendFileMessageCallback: Sending file message failed.', { message, error });\n        threadDispatcher({\n          type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,\n          payload: { message, error },\n        });\n      })\n      .onSucceeded((message) => {\n        logger.info('Thread | useSendFileMessageCallback: Sending file message succeeded.', message);\n        pubSub.publish(topics.SEND_FILE_MESSAGE, {\n          channel: currentChannel,\n          message: message,\n        });\n      });\n  }, [currentChannel]);\n  return sendMessage;\n}\n","import { useCallback } from \"react\";\nimport { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { UserMessage, UserMessageUpdateParams } from \"@sendbird/chat/message\";\n\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\n\nimport * as topics from '../../../../lib/pubSub/topics';\n\ninterface DynamicProps {\n  currentChannel: GroupChannel;\n  isMentionEnabled?: boolean;\n}\ninterface StaticProps {\n  logger: Logger;\n  pubSub: any;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useUpdateMessageCallback({\n  currentChannel,\n  isMentionEnabled,\n}: DynamicProps, {\n  logger,\n  pubSub,\n  threadDispatcher,\n}: StaticProps): (props) => void {\n  return useCallback((props) => {\n    const {\n      messageId,\n      message,\n      mentionedUsers,\n      mentionTemplate,\n    } = props;\n    const createParamsDefault = () => {\n      const params = {} as UserMessageUpdateParams;\n      params.message = message;\n      if (isMentionEnabled && mentionedUsers?.length > 0) {\n        params.mentionedUsers = mentionedUsers;\n      }\n      if (isMentionEnabled && mentionTemplate) {\n        params.mentionedMessageTemplate = mentionTemplate;\n      } else {\n        params.mentionedMessageTemplate = message;\n      }\n      return params;\n    };\n\n    const params = createParamsDefault();\n    logger.info('Thread | useUpdateMessageCallback: Message update start.', params);\n\n    currentChannel?.updateUserMessage?.(messageId, params)\n      .then((message: UserMessage) => {\n        logger.info('Thread | useUpdateMessageCallback: Message update succeeded.', message);\n        threadDispatcher({\n          type: ThreadContextActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentChannel,\n            message: message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            fromSelector: true,\n            channel: currentChannel,\n            message: message,\n          },\n        );\n      });\n  }, [currentChannel, isMentionEnabled])\n}\n","import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { FileMessage, UserMessage } from '@sendbird/chat/message';\nimport { useCallback } from 'react';\nimport { CustomUseReducerDispatcher, Logger } from '../../../../lib/SendbirdState';\nimport { ThreadContextActionTypes } from '../dux/actionTypes';\n\ninterface DynamicProps {\n  currentChannel: GroupChannel;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\ninterface StaticProps {\n  logger: Logger;\n}\n\nexport default function useDeleteMessageCallback({\n  currentChannel,\n  threadDispatcher,\n}: DynamicProps, {\n  logger,\n}: StaticProps): (message: UserMessage | FileMessage) => Promise<UserMessage | FileMessage> {\n  return useCallback((message: UserMessage | FileMessage): Promise<UserMessage | FileMessage> => {\n    logger.info('Thread | useDeleteMessageCallback: Deleting message.', message);\n    const { sendingStatus } = message;\n    return new Promise((resolve, reject) => {\n      logger.info('Thread | useDeleteMessageCallback: Deleting message requestState:', sendingStatus);\n      // Message is only on local\n      if (sendingStatus === 'failed' || sendingStatus === 'pending') {\n        logger.info('Thread | useDeleteMessageCallback: Deleted message from local:', message);\n        threadDispatcher({\n          type: ThreadContextActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n          payload: message.reqId,\n        });\n        resolve(message);\n      }\n\n      logger.info('Thread | useDeleteMessageCallback: Deleting message from remote:', sendingStatus);\n      currentChannel?.deleteMessage?.(message)\n        .then(() => {\n          logger.info('Thread | useDeleteMessageCallback: Deleting message success!', message);\n          threadDispatcher({\n            type: ThreadContextActionTypes.ON_MESSAGE_DELETED,\n            payload: { message, channel: currentChannel },\n          });\n          resolve(message);\n        })\n        .catch((err) => {\n          logger.warning('Thread | useDeleteMessageCallback: Deleting message failed!', err);\n          reject(err);\n        });\n    });\n  }, [currentChannel]);\n}\n","import { useCallback } from \"react\";\nimport { BaseMessage, FileMessage, ThreadedMessageListParams, UserMessage } from \"@sendbird/chat/message\";\n\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport { PREV_THREADS_FETCH_SIZE } from \"../../consts\";\nimport { ThreadListStateTypes } from \"../../types\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\n\ninterface DynamicProps {\n  hasMorePrev: boolean;\n  parentMessage: UserMessage | FileMessage;\n  threadListState: ThreadListStateTypes;\n  oldestMessageTimeStamp: number;\n  isReactionEnabled?: boolean;\n}\ninterface StaticProps {\n  logger: Logger;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useGetPrevThreadsCallback({\n  hasMorePrev,\n  parentMessage,\n  threadListState,\n  oldestMessageTimeStamp,\n  isReactionEnabled,\n}: DynamicProps, {\n  logger,\n  threadDispatcher,\n}: StaticProps): (callback?: (messages?: Array<BaseMessage>) => void) => void {\n  return useCallback((callback) => {\n    // validation check\n    if (threadListState === ThreadListStateTypes.INITIALIZED\n      && parentMessage?.getThreadedMessagesByTimestamp\n      && oldestMessageTimeStamp !== 0\n    ) {\n      threadDispatcher({\n        type: ThreadContextActionTypes.GET_PREV_MESSAGES_START,\n        payload: null,\n      });\n      parentMessage.getThreadedMessagesByTimestamp?.(\n        oldestMessageTimeStamp,\n        {\n          prevResultSize: PREV_THREADS_FETCH_SIZE,\n          nextResultSize: 0,\n          includeReactions: isReactionEnabled,\n        } as ThreadedMessageListParams,\n      )\n        .then(({ parentMessage, threadedMessages }) => {\n          logger.info('Thread | useGetPrevThreadsCallback: Fetch prev threads succeeded.', { parentMessage, threadedMessages });\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: { parentMessage, threadedMessages },\n          });\n          callback(threadedMessages);\n        })\n        .catch((error) => {\n          logger.info('Thread | useGetPrevThreadsCallback: Fetch prev threads failed.', error);\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_PREV_MESSAGES_FAILURE,\n            payload: error,\n          });\n        });\n    }\n  }, [\n    hasMorePrev,\n    parentMessage,\n    threadListState,\n    oldestMessageTimeStamp,\n  ]);\n}\n","import { BaseMessage, FileMessage, ThreadedMessageListParams, UserMessage } from \"@sendbird/chat/message\";\nimport { useCallback } from \"react\";\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport { NEXT_THREADS_FETCH_SIZE } from \"../../consts\";\nimport { ThreadListStateTypes } from \"../../types\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\n\ninterface DynamicProps {\n  hasMoreNext: boolean;\n  parentMessage: UserMessage | FileMessage;\n  threadListState: ThreadListStateTypes;\n  latestMessageTimeStamp: number;\n  isReactionEnabled?: boolean;\n}\ninterface StaticProps {\n  logger: Logger;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useGetNextThreadsCallback({\n  hasMoreNext,\n  parentMessage,\n  threadListState,\n  latestMessageTimeStamp,\n  isReactionEnabled,\n}: DynamicProps, {\n  logger,\n  threadDispatcher,\n}: StaticProps): (callback: (messages?: Array<BaseMessage>) => void) => void {\n  return useCallback((callback) => {\n    // validation check\n    if (threadListState === ThreadListStateTypes.INITIALIZED\n      && parentMessage?.getThreadedMessagesByTimestamp\n      && latestMessageTimeStamp !== 0\n    ) {\n      threadDispatcher({\n        type: ThreadContextActionTypes.GET_NEXT_MESSAGES_START,\n        payload: null,\n      });\n      parentMessage.getThreadedMessagesByTimestamp?.(\n        latestMessageTimeStamp,\n        {\n          prevResultSize: 0,\n          nextResultSize: NEXT_THREADS_FETCH_SIZE,\n          includeReactions: isReactionEnabled,\n        } as ThreadedMessageListParams,\n      )\n        .then(({ parentMessage, threadedMessages }) => {\n          logger.info('Thread | useGetNextThreadsCallback: Fetch next threads succeeded.', { parentMessage, threadedMessages })\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_NEXT_MESSAGES_SUCESS,\n            payload: { parentMessage, threadedMessages },\n          });\n          callback(threadedMessages);\n        })\n        .catch((error) => {\n          logger.info('Thread | useGetNextThreadsCallback: Fetch next threads failed.', error);\n          threadDispatcher({\n            type: ThreadContextActionTypes.GET_NEXT_MESSAGES_FAILURE,\n            payload: error,\n          });\n        });\n    }\n  }, [\n    hasMoreNext,\n    parentMessage,\n    threadListState,\n    latestMessageTimeStamp,\n  ]);\n}\n","import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { useCallback } from 'react';\nimport { Logger } from '../../../../lib/SendbirdState';\n\ninterface DynamicProps {\n  currentChannel: GroupChannel;\n}\ninterface StaticProps {\n  logger: Logger;\n}\n\nexport default function useToggleReactionCallback({\n  currentChannel,\n}: DynamicProps, {\n  logger\n}: StaticProps): (message, key, isReacted) => void {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentChannel?.deleteReaction?.(message, key)\n        .then((res) => {\n          logger.info('Thread | useToggleReactionsCallback: Delete reaction succeeded.', res);\n        })\n        .catch((err) => {\n          logger.warning('Thread | useToggleReactionsCallback: Delete reaction failed.', err);\n        });\n      return;\n    }\n    currentChannel?.addReaction?.(message, key)\n      .then((res) => {\n        logger.info('Thread | useToggleReactionsCallback: Add reaction succeeded.', res);\n      })\n      .catch((err) => {\n        logger.warning('Thread | useToggleReactionsCallback: Add reaction failed.', err);\n      });\n  }, [currentChannel]);\n}\n","import { useCallback } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { UserMessageCreateParams } from '@sendbird/chat/message';\n\nimport { CustomUseReducerDispatcher, Logger } from '../../../../lib/SendbirdState';\nimport { ThreadContextActionTypes } from '../dux/actionTypes';\nimport * as topics from '../../../../lib/pubSub/topics';\n\ninterface DynamicProps {\n  isMentionEnabled: boolean;\n  currentChannel: GroupChannel;\n}\ninterface StaticProps {\n  logger: Logger;\n  pubSub: any;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useSendUserMessageCallback({\n  isMentionEnabled,\n  currentChannel,\n}: DynamicProps, {\n  logger,\n  pubSub,\n  threadDispatcher,\n}: StaticProps): (props) => void {\n  const sendMessage = useCallback((props) => {\n    const {\n      message,\n      quoteMessage = null,\n      mentionTemplate,\n      mentionedUsers,\n    } = props;\n    const createDefaultParams = () => {\n      const params = {} as UserMessageCreateParams;\n      params.message = message?.trim() || message;\n      if (isMentionEnabled && mentionedUsers?.length > 0) {\n        params.mentionedUsers = mentionedUsers;\n      }\n      if (isMentionEnabled && mentionTemplate && mentionedUsers?.length > 0) {\n        params.mentionedMessageTemplate = mentionTemplate?.trim() || mentionTemplate;\n      }\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    }\n\n    const params = createDefaultParams();\n    logger.info('Thread | useSendUserMessageCallback: Sending user message start.', params);\n\n    if (currentChannel?.sendUserMessage) {\n      currentChannel?.sendUserMessage(params)\n        .onPending((pendingMessage) => {\n          threadDispatcher({\n            type: ThreadContextActionTypes.SEND_MESSAGE_START,\n            payload: { message: pendingMessage },\n          });\n        })\n        .onFailed((error, message) => {\n          logger.info('Thread | useSendUserMessageCallback: Sending user message failed.', { message, error });\n          threadDispatcher({\n            type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,\n            payload: { error, message },\n          });\n        })\n        .onSucceeded((message) => {\n          logger.info('Thread | useSendUserMessageCallback: Sending user message succeeded.', message);\n          threadDispatcher({\n            type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,\n            payload: { message },\n          });\n          // because Thread doesn't subscribe SEND_USER_MESSAGE\n          pubSub.publish(topics.SEND_USER_MESSAGE, {\n            channel: currentChannel,\n            message: message,\n          });\n        });\n    }\n  }, [isMentionEnabled, currentChannel]);\n  return sendMessage;\n}\n","import { GroupChannel } from \"@sendbird/chat/groupChannel\";\nimport { FileMessage, MessageType, SendingStatus, UserMessage } from \"@sendbird/chat/message\";\nimport { useCallback } from \"react\";\nimport { CustomUseReducerDispatcher, Logger } from \"../../../../lib/SendbirdState\";\nimport { ThreadContextActionTypes } from \"../dux/actionTypes\";\nimport * as topics from '../../../../lib/pubSub/topics';\n\ninterface DynamicProps {\n  currentChannel: GroupChannel;\n}\ninterface StaticProps {\n  logger: Logger;\n  pubSub: any;\n  threadDispatcher: CustomUseReducerDispatcher;\n}\n\nexport default function useResendMessageCallback({\n  currentChannel,\n}: DynamicProps, {\n  logger,\n  pubSub,\n  threadDispatcher,\n}: StaticProps): (failedMessage: UserMessage | FileMessage) => void {\n  return useCallback((failedMessage: UserMessage | FileMessage) => {\n    if ((failedMessage as UserMessage | FileMessage)?.isResendable) {\n      failedMessage.sendingStatus = SendingStatus.PENDING;\n      logger.info('Thread | useResendMessageCallback: Resending failedMessage start.', failedMessage);\n      threadDispatcher({\n        type: ThreadContextActionTypes.RESEND_MESSAGE_START,\n        payload: failedMessage,\n      });\n\n      if (failedMessage?.isUserMessage?.() || failedMessage?.messageType === MessageType.USER) {\n        currentChannel?.resendUserMessage(failedMessage as UserMessage)\n          .then((message) => {\n            logger.info('Thread | useResendMessageCallback: Resending failedMessage succeeded.', message);\n            threadDispatcher({\n              type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,\n              payload: { message },\n            });\n            pubSub.publish(topics.SEND_USER_MESSAGE, {\n              channel: currentChannel,\n              message: message,\n            });\n          })\n          .catch((error) => {\n            logger.warning('Thread | useResendMessageCallback: Resending failedMessage failed.', error);\n            failedMessage.sendingStatus = SendingStatus.FAILED;\n            threadDispatcher({\n              type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,\n              payload: { message: failedMessage },\n            });\n          });\n      } else if (failedMessage?.isFileMessage?.() || failedMessage?.messageType === MessageType.FILE) {\n        currentChannel?.resendFileMessage?.(failedMessage as FileMessage)\n          .then((message) => {\n            logger.info('Thread | useResendMessageCallback: Resending failedMessage succeeded.', message);\n            threadDispatcher({\n              type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,\n              payload: { message },\n            });\n          })\n          .catch((error) => {\n            logger.warning('Thread | useResendMessageCallback: Resending failedMessage failed.', error);\n            failedMessage.sendingStatus = SendingStatus.FAILED;\n            threadDispatcher({\n              type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,\n              payload: { message: failedMessage },\n            });\n            pubSub.publish(topics.SEND_FILE_MESSAGE, {\n              channel: currentChannel,\n              message: failedMessage,\n            });\n          });\n      } else {\n        logger.warning('Thread | useResendMessageCallback: Message is not resendable.', failedMessage);\n        failedMessage.sendingStatus = SendingStatus.FAILED;\n        threadDispatcher({\n          type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,\n          payload: { message: failedMessage },\n        });\n      }\n    }\n  }, [currentChannel]);\n}\n","import React, { useReducer, useMemo, useEffect, ReactElement } from 'react';\nimport { User } from '@sendbird/chat';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { BaseMessage, FileMessage, UserMessage } from '@sendbird/chat/message';\n\nimport { getNicknamesMapFromMembers } from './utils';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport { CustomUseReducerDispatcher } from '../../../lib/SendbirdState';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\n\nimport threadReducer from './dux/reducer';\nimport { ThreadContextActionTypes } from './dux/actionTypes';\nimport threadInitialState, { ThreadContextInitialState } from './dux/initialState';\n\nimport useGetChannel from './hooks/useGetChannel';\nimport useGetAllEmoji from './hooks/useGetAllEmoji';\nimport useGetThreadList from './hooks/useGetThreadList';\nimport useGetParentMessage from './hooks/useGetParentMessage';\nimport useHandlePubsubEvents from './hooks/useHandlePubsubEvents';\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useSendFileMessageCallback from './hooks/useSendFileMessage';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useGetPrevThreadsCallback from './hooks/useGetPrevThreadsCallback';\nimport useGetNextThreadsCallback from './hooks/useGetNextThreadsCallback';\nimport useToggleReactionCallback from './hooks/useToggleReactionsCallback';\nimport useSendUserMessageCallback from './hooks/useSendUserMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\n\nexport type ThreadProviderProps = {\n  children?: React.ReactElement;\n  channelUrl: string;\n  message: UserMessage | FileMessage;\n  onHeaderActionClick?: () => void;\n  onMoveToParentMessage?: (props: { message: UserMessage | FileMessage, channel: GroupChannel }) => void;\n  // User Profile\n  disableUserProfile?: boolean;\n  renderUserProfile?: (props: { user: User, close: () => void }) => ReactElement;\n  onUserProfileMessage?: (channel: GroupChannel) => void;\n}\nexport interface ThreadProviderInterface extends ThreadProviderProps, ThreadContextInitialState {\n  // hooks for fetching threads\n  fetchPrevThreads: (callback?: (messages?: Array<BaseMessage>) => void) => void;\n  fetchNextThreads: (callback?: (messages?: Array<BaseMessage>) => void) => void;\n  toggleReaction: (message, key, isReacted) => void;\n  sendMessage: (props: {\n    message: UserMessage,\n    quoteMessage?: UserMessage | FileMessage,\n    mentionTemplate?: string,\n    mentionedUsers?: Array<User>,\n  }) => void;\n  sendFileMessage: (file: File, quoteMessage: UserMessage | FileMessage) => void;\n  resendMessage: (failedMessage: UserMessage | FileMessage) => void;\n  updateMessage: (props, callback?: () => void) => void;\n  deleteMessage: (message: UserMessage | FileMessage) => Promise<UserMessage | FileMessage>;\n  nicknamesMap: Map<string, string>;\n}\nconst ThreadContext = React.createContext<ThreadProviderInterface | null>(null);\n\nexport const ThreadProvider: React.FC<ThreadProviderProps> = (props: ThreadProviderProps) => {\n  const {\n    children,\n    channelUrl,\n    message,\n    onHeaderActionClick,\n    onMoveToParentMessage,\n    // User Profile\n    disableUserProfile,\n    renderUserProfile,\n    onUserProfileMessage,\n  } = props;\n  // Context from SendbirdProvider\n  const globalStore = useSendbirdStateContext();\n  const { stores, config } = globalStore;\n  // // stores\n  const { sdkStore, userStore } = stores;\n  const { sdk } = sdkStore;\n  const { user } = userStore;\n  const sdkInit = sdkStore?.initialized;\n  // // config\n  const {\n    logger,\n    pubSub,\n    replyType,\n    isMentionEnabled,\n    isReactionEnabled,\n  } = config;\n\n  // dux of Thread\n  const [threadStore, threadDispatcher] = useReducer(\n    threadReducer,\n    threadInitialState,\n  ) as [ThreadContextInitialState, CustomUseReducerDispatcher];\n  const {\n    currentChannel,\n    allThreadMessages,\n    parentMessage,\n    channelState,\n    threadListState,\n    parentMessageState,\n    hasMorePrev,\n    hasMoreNext,\n    emojiContainer,\n    isMuted,\n    isChannelFrozen,\n    currentUserId,\n  }: ThreadContextInitialState = threadStore;\n\n  // Initialization\n  useEffect(() => {\n    threadDispatcher({\n      type: ThreadContextActionTypes.INIT_USER_ID,\n      payload: user?.userId,\n    });\n  }, [user]);\n  useGetChannel({\n    channelUrl,\n    sdkInit,\n    message,\n  }, { sdk, logger, threadDispatcher });\n  useGetParentMessage({\n    channelUrl,\n    sdkInit,\n    parentMessageId: message?.parentMessageId,\n    parentMessage: message?.parentMessage,\n  }, { sdk, logger, threadDispatcher });\n  useGetThreadList({\n    sdkInit,\n    parentMessage,\n    isReactionEnabled,\n    anchorMessage: message?.messageId ? message : null,\n  }, { logger, threadDispatcher });\n  useGetAllEmoji({ sdk }, { logger, threadDispatcher });\n  // Handle channel events\n  useHandleChannelEvents({\n    sdk,\n    currentChannel,\n  }, { logger, threadDispatcher });\n  useHandlePubsubEvents({\n    sdkInit,\n    currentChannel,\n    parentMessage,\n  }, { logger, pubSub, threadDispatcher })\n\n  // callbacks\n  const fetchPrevThreads = useGetPrevThreadsCallback({\n    hasMorePrev,\n    parentMessage,\n    threadListState,\n    isReactionEnabled,\n    oldestMessageTimeStamp: allThreadMessages[0]?.createdAt || 0,\n  }, { logger, threadDispatcher });\n  const fetchNextThreads = useGetNextThreadsCallback({\n    hasMoreNext,\n    parentMessage,\n    threadListState,\n    isReactionEnabled,\n    latestMessageTimeStamp: allThreadMessages[allThreadMessages.length - 1]?.createdAt || 0\n  }, { logger, threadDispatcher });\n  const toggleReaction = useToggleReactionCallback({ currentChannel }, { logger });\n  const sendMessage = useSendUserMessageCallback({\n    isMentionEnabled,\n    currentChannel,\n  }, { logger, pubSub, threadDispatcher });\n  const sendFileMessage = useSendFileMessageCallback({\n    currentChannel,\n  }, { logger, pubSub, threadDispatcher });\n  const resendMessage = useResendMessageCallback({\n    currentChannel,\n  }, { logger, pubSub, threadDispatcher });\n  const updateMessage = useUpdateMessageCallback({\n    currentChannel,\n    isMentionEnabled,\n  }, { logger, pubSub, threadDispatcher });\n  const deleteMessage = useDeleteMessageCallback({ currentChannel, threadDispatcher }, { logger });\n\n  // memo\n  const nicknamesMap: Map<string, string> = useMemo(() => (\n    (replyType && currentChannel)\n      ? getNicknamesMapFromMembers(currentChannel?.members)\n      : new Map()\n  ), [currentChannel?.members]);\n\n  return (\n    <ThreadContext.Provider\n      value={{\n        // ThreadProviderProps\n        channelUrl,\n        message,\n        onHeaderActionClick,\n        onMoveToParentMessage,\n        // ThreadContextInitialState\n        currentChannel,\n        allThreadMessages,\n        parentMessage,\n        channelState,\n        threadListState,\n        parentMessageState,\n        hasMorePrev,\n        hasMoreNext,\n        emojiContainer,\n        // hooks\n        fetchPrevThreads,\n        fetchNextThreads,\n        toggleReaction,\n        sendMessage,\n        sendFileMessage,\n        resendMessage,\n        updateMessage,\n        deleteMessage,\n        // context\n        nicknamesMap,\n        isMuted,\n        isChannelFrozen,\n        currentUserId,\n      }}\n    >\n      {/* UserProfileProvider */}\n      <UserProfileProvider\n        disableUserProfile={disableUserProfile}\n        renderUserProfile={renderUserProfile}\n        onUserProfileMessage={onUserProfileMessage}\n      >\n        {children}\n      </UserProfileProvider>\n    </ThreadContext.Provider>\n  );\n};\n\nexport type UseThreadContextType = () => ThreadProviderInterface;\nexport const useThreadContext: UseThreadContextType = () => React.useContext(ThreadContext);\n"],"names":["getNicknamesMapFromMembers","members","nicknamesMap","Map","memberIndex","length","_a","userId","nickname","set","isAboutSame","a","b","px","Math","abs","isEmpty","val","undefined","compareIds","aString","toString","bString","getMessageCreatedAt","message","format","createdAt","isReadMessage","channel","getOutgoingMessageState","OutgoingMessageStates","READ","isSameGroup","comparingMessage","currentChannel","messageType","sender","_b","sendingStatus","_c","_d","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","replyType","threadInfo","isAcceptable","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","PREV_THREADS_FETCH_SIZE","NEXT_THREADS_FETCH_SIZE","ThreadContextActionTypes","reducer","state","action","type","actionTypes","INIT_USER_ID","__assign","currentUserId","payload","GET_CHANNEL_START","channelState","ChannelStateTypes","LOADING","GET_CHANNEL_SUCCESS","groupChannel","INITIALIZED","isMuted","find","member","isChannelFrozen","isFrozen","GET_CHANNEL_FAILURE","INVALID","SET_EMOJI_CONTAINER","emojiContainer","GET_PARENT_MESSAGE_START","parentMessageState","ParentMessageStateTypes","parentMessage","GET_PARENT_MESSAGE_SUCCESS","GET_PARENT_MESSAGE_FAILURE","INITIALIZE_THREAD_LIST_START","threadListState","ThreadListStateTypes","allThreadMessages","INITIALIZE_THREAD_LIST_SUCCESS","_v","anchorMessage","threadedMessages","anchorMessageCreatedAt_1","messageId","anchorIndex","findIndex","prevThreadMessages","slice","anchorThreadMessage","nextThreadMessages","hasMorePrev","hasMoreNext","flat","INITIALIZE_THREAD_LIST_FAILURE","GET_NEXT_MESSAGES_START","GET_NEXT_MESSAGES_SUCESS","__spreadArray","GET_NEXT_MESSAGES_FAILURE","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_PREV_MESSAGES_FAILURE","ON_MESSAGE_RECEIVED","_w","message_1","url","_e","isAlreadyReceived","m","_f","map","filter","reqId","ON_MESSAGE_UPDATED","_x","message_2","_g","_h","_j","msg","ON_MESSAGE_DELETED","_y","messageId_1","_k","_l","NIL","_m","ON_MESSAGE_DELETED_BY_REQ_ID","ON_REACTION_UPDATED","reactionEvent_1","_o","reactionEvent","_p","_r","_q","applyReactionEvent","call","ON_USER_MUTED","_z","user","_s","ON_USER_UNMUTED","_0","_t","ON_USER_BANNED","ON_USER_UNBANNED","ON_USER_LEFT","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_OPERATOR_UPDATED","_u","SEND_MESSAGE_START","SEND_MESSAGE_SUCESS","message_3","filteredThreadMessages","SEND_MESSAGE_FAILURE","message_4","RESEND_MESSAGE_START","initialState","useGetChannel","channelUrl","sdkInit","sdk","logger","threadDispatcher","useEffect","getChannel","then","info","catch","useGetAllEmoji","getAllEmoji","useGetThreadList","isReactionEnabled","getThreadedMessagesByTimestamp","timeStamp","params","prevResultSize","nextResultSize","includeReactions","useGetParentMessage","_this","parentMessageId","getMessage","params_1","channelType","ChannelType","GROUP","includeMetaArray","includeThreadInfo","includePollDetails","includeParentMessageInfo","fetchParentMessage","__awaiter","data","sent","parentMsg","ogMetaData","useHandlePubsubEvents","pubSub","pubSubHandler","subscriber","subscribe","topics","props","forEach","s","remove","useHandleChannelEvents","handlerId","uuidv4","addGroupChannelHandler","channelHandlerParams","onMessageReceived","onMessageUpdated","onMessageDeleted","onReactionUpdated","onUserMuted","onUserUnmuted","onUserBanned","onUserUnbanned","onUserLeft","onChannelFrozen","onChannelUnfrozen","onOperatorUpdated","users","channelHandler","GroupChannelHandler","removeGroupChannelHandler","useSendFileMessageCallback","sendMessage","useCallback","file","quoteMessage","createParamsDefault","isReplyToChannel","sendFileMessage","onPending","pendingMessage","URL","createObjectURL","requestState","onFailed","localUrl","onSucceeded","publish","useUpdateMessageCallback","isMentionEnabled","mentionedUsers","mentionTemplate","mentionedMessageTemplate","updateUserMessage","fromSelector","useDeleteMessageCallback","Promise","resolve","reject","deleteMessage","err","warning","useGetPrevThreadsCallback","oldestMessageTimeStamp","callback","useGetNextThreadsCallback","latestMessageTimeStamp","useToggleReactionCallback","key","isReacted","deleteReaction","res","addReaction","useSendUserMessageCallback","createDefaultParams","trim","sendUserMessage","useResendMessageCallback","failedMessage","isResendable","SendingStatus","PENDING","isUserMessage","MessageType","USER","resendUserMessage","FAILED","isFileMessage","FILE","resendFileMessage","ThreadContext","React","createContext","ThreadProvider","children","onHeaderActionClick","onMoveToParentMessage","disableUserProfile","renderUserProfile","onUserProfileMessage","globalStore","useSendbirdStateContext","stores","config","sdkStore","userStore","initialized","useReducer","threadReducer","threadInitialState","threadStore","fetchPrevThreads","fetchNextThreads","toggleReaction","resendMessage","updateMessage","useMemo","useThreadContext","useContext"],"mappings":"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"}