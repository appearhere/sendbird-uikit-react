{"version":3,"file":"context.js","sources":["../../src/smart-components/CreateOpenChannel/context/CreateOpenChannelProvider.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { OpenChannel, OpenChannelCreateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { Logger } from '../../../lib/SendbirdState';\n\nexport interface CreateNewOpenChannelCallbackProps {\n  name: string;\n  coverUrlOrImage?: string;\n}\nexport interface CreateOpenChannelContextInterface extends CreateOpenChannelProviderProps {\n  sdk: SendbirdOpenChat;\n  sdkInitialized: boolean;\n  logger: Logger;\n  createNewOpenChannel: (props: CreateNewOpenChannelCallbackProps) => void;\n}\n\nconst CreateOpenChannelContext = React.createContext<CreateOpenChannelContextInterface>({\n  sdk: null,\n  sdkInitialized: false,\n  logger: null,\n  createNewOpenChannel: null,\n});\n\nexport interface CreateOpenChannelProviderProps {\n  className?: string;\n  children?: React.ReactElement;\n  onCreateChannel?: (channel: OpenChannel) => void;\n  onBeforeCreateChannel?: (params: OpenChannelCreateParams) => OpenChannelCreateParams;\n}\n\nexport const CreateOpenChannelProvider: React.FC<CreateOpenChannelProviderProps> = ({\n  className,\n  children,\n  onCreateChannel,\n  onBeforeCreateChannel,\n}: CreateOpenChannelProviderProps): React.ReactElement => {\n  const { stores, config } = useSendbirdStateContext();\n  const { logger } = config;\n  const sdk = stores?.sdkStore?.sdk || null;\n  const sdkInitialized = stores?.sdkStore?.initialized || false;\n\n  const createNewOpenChannel = useCallback((params: CreateNewOpenChannelCallbackProps): void => {\n    const { name, coverUrlOrImage } = params;\n    if (sdkInitialized) {\n      const params = {} as OpenChannelCreateParams;\n      params.operatorUserIds = [sdk?.currentUser?.userId];\n      params.name = name;\n      params.coverUrlOrImage = coverUrlOrImage;\n      sdk.openChannel.createChannel(onBeforeCreateChannel?.(params) || params)\n        .then((openChannel) => {\n          logger.info('CreateOpenChannel: Succeeded creating openChannel', openChannel);\n          onCreateChannel(openChannel);\n        })\n        .catch((err) => {\n          logger.warning('CreateOpenChannel: Failed creating openChannel', err);\n        });\n    }\n  }, [sdkInitialized, onBeforeCreateChannel, onCreateChannel]);\n\n  return (\n    <CreateOpenChannelContext.Provider\n      value={{\n        // interface\n        sdk: sdk,\n        sdkInitialized: sdkInitialized,\n        logger: logger,\n        createNewOpenChannel: createNewOpenChannel,\n      }}\n    >\n      <div className={`sendbird-create-open-channel ${className}`}>\n        {children}\n      </div>\n    </CreateOpenChannelContext.Provider>\n  );\n}\n\nexport const useCreateOpenChannelContext = (): CreateOpenChannelContextInterface => (\n  React.useContext(CreateOpenChannelContext)\n);\n"],"names":["CreateOpenChannelContext","React","createContext","sdk","sdkInitialized","logger","createNewOpenChannel","CreateOpenChannelProvider","_a","className","children","onCreateChannel","onBeforeCreateChannel","_d","useSendbirdStateContext","stores","config","_b","sdkStore","_c","initialized","useCallback","params","name","coverUrlOrImage","params_1","operatorUserIds","currentUser","userId","openChannel","createChannel","then","info","catch","err","warning","concat","useCreateOpenChannelContext","useContext"],"mappings":"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"}