{"version":3,"file":"index-88678962.js","sources":["../src/smart-components/OpenChannelSettings/components/ParticipantUI/ParticipantsModal.tsx","../src/smart-components/OpenChannelSettings/components/ParticipantUI/ParticipantItem.tsx","../src/smart-components/OpenChannelSettings/components/ParticipantUI/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport type { User } from '@sendbird/chat';\nimport type { ParticipantListQuery } from '@sendbird/chat/openChannel';\n\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { noop } from '../../../../utils/utils';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function ParticipantsModal({\n  onCancel,\n}: Props): ReactElement {\n  const state = useSendbirdStateContext();\n  const { channel } = useOpenChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<User> | null>([]);\n  const [participantListQuery, setParticipantListQuery] = useState<ParticipantListQuery | null>(null);\n  const userId = state?.config?.userId;\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const isOperatorView = channel?.isOperator(userId);\n  useEffect(() => {\n    if (!channel || !channel?.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({});\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next().then((participantList) => {\n      setParticipants(participantList);\n    });\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        isFullScreenOnMobile\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = participantListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              participantListQuery.next().then((fetchedParticipants) => {\n                setParticipants([\n                  ...participants,\n                  ...fetchedParticipants,\n                ])\n              });\n            }\n          }}\n        >\n          {\n            participants.map((p) => {\n              const isOperator = channel?.isOperator(p.userId);\n              return (\n                <UserListItem\n                  user={p}\n                  key={p.userId}\n                  currentUser={sdk?.currentUser?.userId}\n                  action={\n                    (userId !== p.userId && isOperatorView)\n                      ? ({ actionRef, parentRef }) => (\n                        <ContextMenu\n                          menuTrigger={(toggleDropdown) => (\n                            <IconButton\n                              className=\"sendbird-user-message__more__menu\"\n                              width=\"32px\"\n                              height=\"32px\"\n                              onClick={toggleDropdown}\n                            >\n                              <Icon\n                                width=\"24px\"\n                                height=\"24px\"\n                                type={IconTypes.MORE}\n                                fillColor={IconColors.CONTENT_INVERSE}\n                              />\n                            </IconButton>\n                          )}\n                          menuItems={(closeDropdown) => (\n                            <MenuItems\n                              parentContainRef={parentRef}\n                              parentRef={actionRef}\n                              closeDropdown={closeDropdown}\n                              openLeft\n                            >\n                              <MenuItem\n                                onClick={() => {\n                                  if (isOperator) {\n                                    channel?.removeOperators([p.userId]).then(() => {\n                                      closeDropdown();\n                                    });\n                                  } else {\n                                    channel?.addOperators([p.userId]).then(() => {\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                {\n                                  isOperator\n                                    ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                                    : stringSet.OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                                }\n                              </MenuItem>\n                              <MenuItem\n                                onClick={() => {\n                                  channel?.muteUser(p).then(() => {\n                                    closeDropdown();\n                                  });\n                                }}\n                              >\n                                {stringSet.OPEN_CHANNEL_SETTING__MODERATION__MUTE}\n                              </MenuItem>\n                              <MenuItem\n                                onClick={() => {\n                                  channel?.banUser(p).then(() => {\n                                    closeDropdown();\n                                  });\n                                }}\n                              >\n                                {stringSet.OPEN_CHANNEL_SETTING__MODERATION__BAN}\n                              </MenuItem>\n                            </MenuItems>\n                          )}\n                        />\n                      )\n                      : null\n                  }\n                />\n              )\n            })\n          }\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport type { User } from '@sendbird/chat';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nimport { UserProfileContext } from '../../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport Accordion from '../../../../ui/Accordion';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Avatar from '../../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport ParticipantsModal from './ParticipantsModal';\nimport UserProfile from '../../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../../ui/ContextMenu';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nconst SHOWN_MEMBER_MAX = 10;\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n}\ninterface UserListItemProps {\n  user: User;\n  currentUser?: string;\n  isOperator?: boolean;\n  action?(props: ActionProps): ReactElement;\n}\n\nexport const UserListItem: React.FC<UserListItemProps> = ({\n  user,\n  currentUser,\n  isOperator,\n  action,\n}: UserListItemProps) => {\n  const avatarRef = useRef(null);\n  const actionRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-participants-accordion__member\">\n      <div className=\"sendbird-participants-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={user.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: '0px', paddingBottom: '0px' }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: user,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      disableMessaging\n                      user={user}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label\n        className=\"sendbird-participants-accordion__member__title\"\n        type={LabelTypography.SUBTITLE_2}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            stringSet.OPEN_CHANNEL_SETTINGS__MEMBERS__YOU\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-participants-accordion__member__title user-id\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        isOperator && (\n          <Label\n            className={\n              `sendbird-participants-accordion__member__title\n                ${user?.userId !== currentUser ? 'operator' : ''}\n                ${user?.userId === currentUser ? 'self-operator' : ''}\n              `\n            }\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR}\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-participants-accordion__member__action\"\n            ref={actionRef}\n          >\n            { action({ actionRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport interface ParticipantsAccordionProps {\n  maxMembers?: number;\n}\n\nexport default function ParticipantsAccordion(props: ParticipantsAccordionProps): ReactElement {\n  const maxMembers = props?.maxMembers || SHOWN_MEMBER_MAX;\n  const { channel } = useOpenChannelSettingsContext();\n  const globalState = useSendbirdStateContext();\n  const currentUser = globalState?.config?.userId;\n  const [participants, setParticipants] = useState([]);\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel || !channel?.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({});\n    participantListQuery.next().then((participantList) => {\n      setParticipants(participantList);\n    });\n  }, [channel]);\n\n  return (\n    <Accordion\n      className=\"sendbird-participants-accordion\"\n      id=\"participants\"\n      renderTitle={() => (\n        <>\n          <Icon\n            type={IconTypes.MEMBERS}\n            fillColor={IconColors.PRIMARY}\n            width={24}\n            height={24}\n            className=\"sendbird-openchannel-settings__accordion-icon\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE}\n          </Label>\n        </>\n      )}\n      renderContent={() => (\n        <div className=\"\">\n          <div className=\"sendbird-participants-accordion__list\">\n            {\n              participants.slice(0, maxMembers).map((p) => (\n                <UserListItem\n                  user={p}\n                  currentUser={currentUser}\n                  key={p.userId}\n                />\n              ))\n            }\n            {\n              (participants && participants.length === 0)\n                ? (\n                    <Label\n                      className=\"sendbird-channel-settings__empty-list\"\n                      type={LabelTypography.SUBTITLE_2}\n                      color={LabelColors.ONBACKGROUND_3}\n                    >\n                      {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n                    </Label>\n                ): null\n            }\n          </div>\n          {\n            participants.length >= maxMembers && (\n              <div className=\"sendbird-participants-accordion__footer\">\n                <Button\n                  className=\"sendbird-participants-accordion__footer__all-participants\"\n                  type={ButtonTypes.SECONDARY}\n                  size={ButtonSizes.SMALL}\n                  onClick={() => setShowMoreModal(true)}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__SEE_ALL}\n                </Button>\n                {\n                  showMoreModal && (\n                    <ParticipantsModal\n                      onCancel={() => {\n                        setShowMoreModal(false);\n                      }}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n      )}\n    />\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport type { User } from '@sendbird/chat';\nimport type { ParticipantListQuery } from '@sendbird/chat/openChannel';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport IconButton from '../../../../ui/IconButton';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\n\nimport { UserListItem } from './ParticipantItem';\nimport ParticipantsModal from './ParticipantsModal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface ParticipantListProps {\n  isOperatorView?: boolean;\n}\n\nexport default function ParticipantList({\n  isOperatorView = false,\n}: ParticipantListProps): ReactElement {\n  const globalState = useSendbirdStateContext();\n  const currentUserId = globalState?.config?.userId;\n  const { channel } = useOpenChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<User> | null>(null);\n  const [participantListQuery, setParticipantListQuery] = useState<ParticipantListQuery | null>(null);\n  const [showParticipantsModal, setShowParticipantsModal] = useState<boolean>(false);\n  useEffect(() => {\n    if (!channel || !channel?.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({ limit: 10 });\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next().then((participants) => {\n      setParticipants(participants);\n    });\n  }, [channel]);\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setParticipants([]);\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({ limit: 10 });\n    participantListQuery.next().then((participants) => {\n      setParticipants(participants);\n    });\n  }, [channel]);\n  return (\n    <div\n      className=\"sendbird-openchannel-settings__participant-list\"\n      onScroll={(e) => {\n        const { hasNext } = participantListQuery;\n        const target = e.target as HTMLTextAreaElement;\n        const fetchMore = (\n          target.clientHeight + target.scrollTop === target.scrollHeight\n        );\n\n        if (hasNext && fetchMore) {\n          participantListQuery.next().then((fetchedParticipants) => {\n            setParticipants([\n              ...participants,\n              ...fetchedParticipants,\n            ])\n          });\n        }\n      }}\n    >\n      <div>\n        {\n          participants?.map((p: User) => {\n            const isOperator = channel?.isOperator(p.userId);\n            return (\n              <UserListItem\n                user={p}\n                currentUser={currentUserId}\n                key={p.userId}\n                isOperator={isOperator}\n                action={({ actionRef }) => (\n                  (isOperatorView && currentUserId !== p?.userId)\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-openchannel-participant-list__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                if (isOperator) {\n                                  channel?.removeOperators([p.userId]).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.addOperators([p.userId]).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  })\n                                }\n                              }}\n                            >\n                              {\n                                isOperator\n                                  ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                                  : stringSet.OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                              }\n                            </MenuItem>\n                            <MenuItem\n                              onClick={() => {\n                                channel?.muteUser(p).then(() => {\n                                  refreshList();\n                                  closeDropdown();\n                                });\n                              }}\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__MUTE}\n                            </MenuItem>\n                            <MenuItem\n                              onClick={() => {\n                                channel?.banUser(p).then(() => {\n                                  refreshList();\n                                  closeDropdown();\n                                });\n                              }}\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__BAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    )\n                    : null\n                )}\n              />\n            );\n          })\n        }\n        {\n          (participants && participants.length === 0)\n            ? (\n              <Label\n                className=\"sendbird-channel-settings__empty-list\"\n                type={LabelTypography.SUBTITLE_2}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n              </Label>\n            ) : null\n        }\n        <div className=\"sendbird-openchannel-participant-list__footer\">\n          {\n            participantListQuery?.hasNext && (\n              <Button\n                type={ButtonTypes.SECONDARY}\n                size={ButtonSizes.SMALL}\n                onClick={() => setShowParticipantsModal(true)}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE}\n              </Button>\n            )\n          }\n        </div>\n        {\n          showParticipantsModal && (\n            <ParticipantsModal\n              onCancel={() => {\n                setShowParticipantsModal(false);\n                refreshList();\n              }}\n            />\n          )\n        }\n      </div>\n    </div>\n  )\n}\n"],"names":["ParticipantsModal","_a","onCancel","state","useSendbirdStateContext","channel","useOpenChannelSettingsContext","stringSet","useContext","LocalizationContext","_e","useState","participants","setParticipants","_f","participantListQuery","setParticipantListQuery","userId","_b","config","sdk","_d","_c","stores","sdkStore","isOperatorView","isOperator","useEffect","createParticipantListQuery","next","then","participantList","React","noop","OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","fetchedParticipants","__spreadArray","map","p","UserListItem","currentUser","actionRef","parentRef","toggleDropdown","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","removeOperators","addOperators","OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR","muteUser","OPEN_CHANNEL_SETTING__MODERATION__MUTE","banUser","OPEN_CHANNEL_SETTING__MODERATION__BAN","user","action","avatarRef","useRef","UserProfileContext","disableUserProfile","renderUserProfile","profileUrl","paddingTop","paddingBottom","currentUserId","close","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","nickname","NO_NAME","OPEN_CHANNEL_SETTINGS__MEMBERS__YOU","CAPTION_3","ONBACKGROUND_2","concat","OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR","ParticipantList","globalState","showParticipantsModal","setShowParticipantsModal","limit","refreshList","useCallback","length","ONBACKGROUND_3","OPEN_CHANNEL_SETTINGS__EMPTY_LIST","ButtonTypes","SECONDARY","ButtonSizes","SMALL"],"mappings":"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"}