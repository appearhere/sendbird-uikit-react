{"version":3,"file":"OpenChannel.js","sources":["../src/smart-components/OpenchannelConversation/utils.ts","../src/smart-components/OpenchannelConversation/components/MessageInpuetWrapper.tsx","../src/smart-components/OpenchannelConversation/components/FrozenNotification.tsx","../src/ui/OpenchannelConversationHeader/index.tsx","../src/ui/OpenchannelUserMessage/utils.ts","../src/utils/openChannelUtils.ts","../src/ui/OpenchannelUserMessage/index.tsx","../src/ui/OpenChannelAdminMessage/index.tsx","../src/ui/OpenchannelOGMessage/utils.ts","../src/ui/OpenchannelOGMessage/index.tsx","../src/ui/OpenchannelThumbnailMessage/utils.ts","../src/ui/OpenchannelThumbnailMessage/index.tsx","../src/ui/OpenchannelFileMessage/utils.ts","../src/ui/OpenchannelFileMessage/index.tsx","../src/smart-components/OpenchannelConversation/components/RemoveMessageModal.tsx","../src/ui/FileViewer/types.js","../src/smart-components/OpenchannelConversation/components/types.ts","../src/smart-components/OpenchannelConversation/components/MessageHOC.tsx","../src/smart-components/OpenchannelConversation/components/OpenchannelConversationScroll.tsx","../src/smart-components/OpenchannelConversation/dux/actionTypes.ts","../src/smart-components/OpenchannelConversation/dux/reducers.ts","../src/smart-components/OpenchannelConversation/dux/initialState.ts","../src/smart-components/OpenchannelConversation/hooks/useSetChannel.ts","../src/smart-components/OpenchannelConversation/hooks/useHandleChannelEvents.ts","../src/smart-components/OpenchannelConversation/hooks/useInitialMessagesFetch.ts","../src/smart-components/OpenchannelConversation/hooks/useScrollCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useCheckScrollBottom.ts","../src/smart-components/OpenchannelConversation/hooks/useSendMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useFileUploadCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useUpdateMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useDeleteMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useResendMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useTrimMessageList.ts","../src/smart-components/OpenchannelConversation/index.tsx"],"sourcesContent":["import format from 'date-fns/format';\nimport Sendbird from 'sendbird';\nimport SendbirdUIKit from '../../index';\n\nexport const getMessageCreatedAt = (message: SendbirdUIKit.EveryMessage): string => format(message.createdAt, 'p');\n\nexport const shouldFetchMore = (messageLength: number, maxMessages: number): boolean => {\n  if (typeof maxMessages !== 'number') {\n    return true;\n  }\n\n  if (typeof maxMessages === 'number'\n    && maxMessages > messageLength\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport const scrollIntoLast = (intialTry = 0): void => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-openchannel-conversation-scroll');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const isSameGroup = (\n  message: SendbirdUIKit.EveryMessage,\n  comparingMessage: SendbirdUIKit.EveryMessage,\n): boolean => {\n  if (!(\n    message\n    && comparingMessage\n    && message?.messageType !== 'admin'\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false\n  }\n\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage: SendbirdUIKit.EveryMessage,\n  currMessage: SendbirdUIKit.EveryMessage,\n  nextMessage: SendbirdUIKit.EveryMessage,\n): [boolean, boolean] => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const kFormatter = (num: number): string => {\n  if (Math.abs(num) > 999999) {\n    return `${(Math.abs(num) / 1000000).toFixed(1)}M`;\n  }\n\n  if (Math.abs(num) > 999) {\n    return `${(Math.abs(num) / 1000).toFixed(1)}K`;\n  }\n\n  return `${num}`;\n};\n\nexport const isOperator = (openChannel: Sendbird.OpenChannel, userId: string): boolean => {\n  const { operators } = openChannel;\n  if (operators.map(operator => operator.userId).indexOf(userId) < 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const isDisabledBecauseFrozen = (openChannel: Sendbird.OpenChannel, userId: string): boolean => {\n  const { isFrozen } = openChannel;\n  return isFrozen && !isOperator(openChannel, userId);\n};\n\nexport const isDisabledBecauseMuted = (mutedParticipantIds: Array<string>, userId: string): boolean => {\n  return mutedParticipantIds.indexOf(userId) < 0;\n};\n\nexport const fetchWithListQuery = (\n  listQuery: SendbirdUIKit.UserListQuery,\n  logger: SendbirdUIKit.Logger,\n  eachQueryNextCallback: (users: Array<Sendbird.User>) => void,\n): void => {\n  const fetchList = (query) => {\n    const { hasNext } = query;\n    if (hasNext) {\n      query.next((error, users) => {\n        if (!error) {\n          eachQueryNextCallback(users);\n          fetchList(query);\n        } else {\n          logger.warning('OpenChannel | FetchUserList failed', error);\n        }\n      });\n    } else {\n      logger.info('OpenChannel | FetchUserList finished');\n    }\n  };\n  logger.info('OpenChannel | FetchUserList start', listQuery);\n  fetchList(listQuery);\n};\n\nexport const pxToNumber = (px: string | number): number | void => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n","import React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\nimport { RenderOpenChannelMessageInputProps } from '../../../index';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageInput from '../../../ui/MessageInput';\n\ninterface Props {\n  channel: Sendbird.OpenChannel;\n  user: Sendbird.User;\n  disabled: boolean;\n  onSendMessage(): void;\n  onFileUpload(file_: File): void;\n  renderMessageInput?(renderProps: RenderOpenChannelMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  disabled,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  if (!channel) {\n    return;\n  }\n\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  return (\n    <div className=\"sendbird-openchannel-footer\">\n      <MessageInput\n        ref={ref}\n        disabled={disabled}\n        onSendMessage={onSendMessage}\n        onFileUpload={onFileUpload}\n        placeholder={(\n          disabled\n          && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED\n          // add disabled because of muted state\n        )}\n      />\n    </div>\n  );\n};\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport './frozen-notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-frozen-channel-notification\">\n      <Label\n        className=\"sendbird-frozen-channel-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useContext } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  coverImage?: string;\n  title?: string;\n  subTitle?: string;\n  amIOperator?: boolean;\n  onActionClick?(): void;\n}\n\nexport default function OpenchannelConversationHeader({\n  coverImage,\n  title,\n  subTitle,\n  amIOperator,\n  onActionClick,\n}: Props): JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className=\"sendbird-openchannel-conversation-header\">\n      <div className=\"sendbird-openchannel-conversation-header__left\">\n        {\n          coverImage ? (\n            <Avatar\n              className=\"sendbird-openchannel-conversation-header__left__cover-image\"\n              src={coverImage}\n              alt=\"channel cover image\"\n              width=\"32px\"\n              height=\"32px\"\n            />\n          ) : (\n            <div\n              className=\"sendbird-openchannel-conversation-header__left__cover-image--icon\"\n              style={{ width: 32, height: 32 }}\n            >\n              <Icon\n                type={IconTypes.CHANNELS}\n                fillColor={IconColors.CONTENT}\n                width=\"18px\"\n                height=\"18px\"\n              />\n            </div>\n          )\n        }\n        <Label\n          className=\"sendbird-openchannel-conversation-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || stringSet.NO_TITLE}\n        </Label>\n        <Label\n          className=\"sendbird-openchannel-conversation-header__left__sub-title\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle || stringSet.NO_TITLE}\n        </Label>\n      </div>\n      <div className=\"sendbird-openchannel-conversation-header__right\">\n        <IconButton\n          className=\"sendbird-openchannel-conversation-header__right__trigger\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={(\n              amIOperator\n              ? IconTypes.INFO\n              : IconTypes.MEMBERS\n            )}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","export const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default { copyToClipboard };\n","import Sendbird from 'sendbird';\nimport { ClientUserMessage, ClientFileMessage } from '../index';\n\nconst OpenChannelMessageStatusTypes = {\n  NONE: 'none',\n  PENDING: 'pending',\n  FAILED: 'failed',\n  CANCELED: 'canceled',\n  SUCCEEDED: 'succeeded'\n};\n\nexport const getSenderFromMessage = (message: ClientUserMessage | ClientFileMessage): Sendbird.User => {\n  return message.sender || message._sender;\n};\n\nexport const checkIsSent = (status: string): boolean => (status === OpenChannelMessageStatusTypes.SUCCEEDED);\nexport const checkIsPending = (status: string): boolean => (status === OpenChannelMessageStatusTypes.PENDING);\nexport const checkIsFailed = (status: string): boolean => (status === OpenChannelMessageStatusTypes.FAILED);\n\nexport const checkIsByMe = (message: ClientFileMessage | ClientUserMessage, userId: string): boolean => (getSenderFromMessage(message).userId === userId);\n\ninterface isFineCopyParams {\n  message: ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineCopy = ({ message }: isFineCopyParams): boolean => {\n  return (message.messageType === 'user' && message.message.length > 0);\n};\n\ninterface isFineResendParams {\n  message: ClientFileMessage | ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineResend = ({ message, status, userId }: isFineResendParams): boolean => {\n  return checkIsByMe(message, userId)\n    && checkIsFailed(status)\n    && message.isResendable\n    && message.isResendable();\n};\n\ninterface isFineEditParams {\n  message: ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineEdit = ({ message, status, userId }: isFineEditParams): boolean => {\n  return checkIsByMe(message, userId) && checkIsSent(status);\n};\n\ninterface isFineDeleteParams {\n  message: ClientFileMessage | ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineDelete = ({ message, userId }: isFineDeleteParams): boolean => {\n  return checkIsByMe(message, userId);\n};\n\ninterface showMenuTriggerParams {\n  message: ClientUserMessage | ClientFileMessage;\n  status: string;\n  userId: string;\n}\nexport const showMenuTrigger = (props: showMenuTriggerParams): boolean => {\n  const { message, status, userId } = props;\n  if (message.messageType === 'user') {\n    return (\n      isFineDelete({ message, status, userId })\n      || isFineEdit({ message, status, userId })\n      || isFineCopy({ message, status, userId })\n      || isFineResend({ message, status, userId })\n    );\n  } else {\n    return (\n      isFineDelete({ message, status, userId })\n      || isFineResend({ message, status, userId })\n    );\n  }\n};\n","import React, {\n  useMemo,\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: ClientUserMessage;\n  userId: string;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n}\n\nexport default function OpenchannelUserMessage({\n  className,\n  message,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n  status,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n\n  // consts\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const splitMessage = message.message.split(/\\r/);\n    const matchedMessage = splitMessage.map((word) => (word !== '' ? word : <br />));\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n          calssName=\"sendbird-openchannel-user-message-word\"\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-user-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                    ? (\n                      renderUserProfile({\n                        user: sender,\n                        close: closeDropdown,\n                      })\n                    )\n                    : (\n                      <UserProfile\n                        user={sender}\n                        onSuccess={closeDropdown}\n                        disableMessaging\n                      />\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {format(message.createdAt, 'p', { locale: dateLocale })}\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-user-message__right__bottom\">\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {MemoizedMessageText()}\n          </Label>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-user-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        <div\n          className=\"sendbird-openchannel-user-message__context-menu\"\n          ref={contextMenuRef}\n          style={contextStyle}\n        >\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              showMenuTrigger({ message: message, userId: userId, status: status}) && (\n                <IconButton\n                  className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                </IconButton>\n              )\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={contextMenuRef}\n                parentContainRef={contextMenuRef}\n                closeDropdown={closeDropdown}\n                openLeft\n              >\n                {\n                  isFineCopy({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                      onClick={() => {\n                        copyToClipboard(message.message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineEdit({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showEdit(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineResend({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                      onClick={() => {\n                        resendMessage(message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineDelete({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  )\n                }\n              </MenuItems>\n            )}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { ClientAdminMessage } from '../../index';\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: ClientAdminMessage;\n}\n\nexport default function OpenChannelAdminMessage({\n  className,\n  message,\n}: Props): ReactElement {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-openchannel-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message || ''}\n      </Label>\n    </div>\n  );\n}\n","import Sendbird from 'sendbird';\n\nexport const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const createUrlTester = (regexp: RegExp) => (text: string): boolean => regexp.test(text);\nexport const checkOGIsEnalbed = (message: Sendbird.UserMessage): boolean => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n","import React, { useState, useContext, useMemo, useRef, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport LinkLabel from '../LinkLabel';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport uuidv4 from '../../utils/uuid';\nimport { copyToClipboard } from '../OpenchannelUserMessage/utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { checkOGIsEnalbed, createUrlTester, URL_REG } from './utils';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientUserMessage;\n  className?: string | Array<string>;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n  userId: string;\n}\n\nexport default function OpenchannelOGMessage({\n  message,\n  className,\n  disabled,\n  showEdit,\n  showRemove,\n  resendMessage,\n  chainTop,\n  status,\n  userId,\n}: Props): JSX.Element {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  const { ogMetaData } = message;\n  const { defaultImage } = ogMetaData;\n\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const [contextStyle, setContextStyle] = useState({});\n  const messageComponentRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const isUrl = createUrlTester(URL_REG);\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const wordClassName = 'sendbird-openchannel-og-message--word';\n    const splitMessage = message.message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={[\n                wordClassName,\n                'sendbird-openchannel-og-message--word--link'\n              ]}\n              src={word}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.PRIMARY}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={wordClassName}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {word}\n            </Label>\n          )\n      ));\n\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={wordClassName}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  // place conxt menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageComponentRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-og-message',\n      ].join(' ')}\n      ref={messageComponentRef}\n    >\n      <div\n        className=\"sendbird-openchannel-og-message__top\"\n      >\n        <div className=\"sendbird-openchannel-og-message__top__left\">\n          {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    className=\"sendbird-openchannel-og-message__top__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? (\n                          renderUserProfile({\n                            user: sender,\n                            close: closeDropdown,\n                          })\n                        )\n                        : (\n                          <UserProfile\n                            user={sender}\n                            onSuccess={closeDropdown}\n                            disableMessaging\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className=\"sendbird-openchannel-og-message__top__right\">\n          {\n            !chainTop && (\n              <div className=\"sendbird-openchannel-og-message__top__right__title\">\n                <Label\n                  className=\"sendbird-openchannel-og-message__top__right__title__sender-name\"\n                  type={LabelTypography.CAPTION_2}\n                  color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n                >\n                  {\n                    sender && (\n                      sender.friendName\n                      || sender.nickname\n                      || sender.userId\n                    )\n                  }\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-og-message__top__right__title__sent-at\"\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_3}\n                >\n                  {format(message.createdAt, 'p', { locale: dateLocale })}\n                </Label>\n              </div>\n            )\n          }\n          <div className=\"sendbird-openchannel-og-message__top__right__description\">\n            <Label\n              className=\"sendbird-openchannel-og-message__top__right__description__message\"\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {MemoizedMessageText()}\n            </Label>\n          </div>\n        </div>\n        {\n          <div\n            className=\"sendbird-openchannel-og-message__top__context-menu\"\n            ref={contextMenuRef}\n            style={contextStyle}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message: message, userId: userId, status: status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-og-message__top__context-menu--icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={() => {\n                      toggleDropdown();\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.MORE}\n                      fillColor={IconColors.CONTENT_INVERSE}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineCopy({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__copy\"\n                        onClick={() => {\n                          copyToClipboard(message.message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineEdit({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__edit\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineResend({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__resend\"\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__delete\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          </div>\n        }\n      </div>\n      <div className=\"sendbird-openchannel-og-message__bottom\">\n        <div className=\"sendbird-openchannel-og-message__bottom__og-tag\">\n          {\n            ogMetaData.url && (\n              <Label\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__url\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {ogMetaData.url}\n              </Label>\n            )\n          }\n          {\n            ogMetaData.title && (\n              <LinkLabel\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__title\"\n                src={ogMetaData.url}\n                type={LabelTypography.SUBTITLE_2}\n                color={LabelColors.PRIMARY}\n              >\n                {\n                  ogMetaData.title\n                }\n              </LinkLabel>\n            )\n          }\n          {\n            ogMetaData.description && (\n              <Label\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__description\"\n                type={LabelTypography.BODY_2}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {ogMetaData.description}\n              </Label>\n            )\n          }\n          {\n            ogMetaData.url && (\n              <div\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail\"\n                role=\"button\"\n                onClick={openLink}\n                onKeyDown={openLink}\n                tabIndex={0}\n              >\n                {\n                  defaultImage && (\n                    <ImageRenderer\n                      className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image\"\n                      url={defaultImage.url || ''}\n                      alt={defaultImage.alt || ''}\n                      height=\"189px\"\n                      defaultComponent={(\n                        <div className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image--placeholder\">\n                          <Icon\n                            type={IconTypes.THUMBNAIL_NONE}\n                            width=\"56px\"\n                            height=\"56px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-og-message__top__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-og-message__top__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-og-message__top__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n","export const SUPPORTING_TYPES = {\n  IMAGE: 'IMAGE',\n  VIDEO: 'VIDEO',\n  UNSUPPORTED: 'UNSUPPORTED',\n};\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const getSupportingFileType = (type: string): string => {\n  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.IMAGE;\n  }\n  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.VIDEO;\n  }\n  return SUPPORTING_TYPES.UNSUPPORTED;\n}\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\nimport { SUPPORTING_TYPES, getSupportingFileType } from './utils';\nimport { ClientFileMessage } from '../../index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport {\n  checkIsByMe,\n  checkIsSent,\n  checkIsPending,\n  checkIsFailed,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: ClientFileMessage;\n  disabled: boolean;\n  userId: string;\n  status: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n  onClick(bool: boolean): void,\n  showRemove(bool: boolean): void,\n  resendMessage(message: ClientFileMessage): void;\n}\n\nexport default function OpenchannelThumbnailMessage({\n  className,\n  message,\n  disabled,\n  userId,\n  status,\n  chainTop,\n  onClick,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const [messageWidth, setMessageWidth] = useState(360);\n  const messageRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const memorizedThumbnailPlaceHolder = useMemo(() => (type) => ({ style }) => ( // eslint-disable-line\n    <div style={style}>\n      <Icon\n        type={type}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"56px\"\n        height=\"56px\"\n        />\n    </div>\n  ), []);\n\n  const isByMe = checkIsByMe(message, userId);\n  const isMessageSent = checkIsSent(status);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  useEffect(() => {\n    const thumbnailWidth = messageRef?.current?.clientWidth - 80;\n    setMessageWidth(thumbnailWidth > 360 ? 360 : thumbnailWidth);\n  }, []);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-thumbnail-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-thumbnail-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-thumbnail-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-thumbnail-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {format(message.createdAt, 'p', { locale: dateLocale })}\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-thumbnail-message__right__body\">\n          <div\n            className=\"sendbird-openchannel-thumbnail-message__right__body__wrap\"\n            role=\"button\"\n            onClick={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            onKeyDown={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            tabIndex={0}\n          >\n            <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__overlay\" />\n            {\n              {\n                [SUPPORTING_TYPES.VIDEO]: (\n                  (url || localUrl)\n                    ? (\n                      <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\" >\n                        {\n                          (thumbnailUrl)\n                            ? (\n                              <ImageRenderer\n                                className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\"\n                                url={thumbnailUrl}\n                                width={messageWidth}\n                                height=\"270px\"\n                                alt=\"image\"\n                                placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PLAY)}\n                              />\n                            )\n                            : (\n                              <video className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__video\">\n                                <source src={url || localUrl} type={type} />\n                              </video>\n                            )\n                        }\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon\"\n                          type={IconTypes.PLAY}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                        width=\"56px\"\n                        height=\"56px\"\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.IMAGE]: (\n                  (url || localUrl)\n                    ? (\n                      <ImageRenderer\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image\"\n                        url={thumbnailUrl || url || localUrl}\n                        alt=\"image\"\n                        width={messageWidth}\n                        height=\"270px\"\n                        placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PHOTO)}\n                      />\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                        width=\"56px\"\n                        height=\"56px\"\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.UNSUPPORTED]: (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__unknown\"\n                    type={IconTypes.PHOTO}\n                    fillColor={IconColors.ON_BACKGROUND_2}\n                    width=\"56px\"\n                    height=\"56px\"\n                  />\n                ),\n              }[getSupportingFileType(type)]\n            }\n          </div>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-thumbnail-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      <div\n        className=\"sendbird-openchannel-thumbnail-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            showMenuTrigger({ message, userId, status }) && (\n              <IconButton\n                className=\"sendbird-openchannel-thumbnail-message__context-menu--icon\"\n                width=\"32px\"\n                height=\"32px\"\n                onClick={toggleDropdown}\n              >\n                <Icon\n                  type={IconTypes.MORE}\n                  fillColor={IconColors.CONTENT_INVERSE}\n                  width=\"24px\"\n                  height=\"24px\"\n                />\n              </IconButton>\n            )\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              parentRef={contextMenuRef}\n              parentContainRef={contextMenuRef}\n              closeDropdown={closeDropdown}\n              openLeft\n            >\n              {\n                isFineResend({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      resendMessage(message);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                  </MenuItem>\n                )\n              }\n              {\n                isFineDelete({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) {\n                        return;\n                      }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","import { IconTypes } from '../Icon';\n\nexport const checkFileType = (fileUrl: string): string => {\n  const audioFile = /(\\.mp3)$/i;\n  const gifFile = /(\\.gif)$/i;\n  if (audioFile.test(fileUrl)) {\n    return IconTypes.FILE_AUDIO;\n  }\n  if (gifFile.test(fileUrl)) {\n    return IconTypes.GIF\n  }\n  return IconTypes.FILE_DOCUMENT;\n}\n\nexport const truncate = (fullStr:string, strLen: number): string => {\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n","import React, { useContext, useRef } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { checkFileType, truncate } from './utils';\nimport { ClientFileMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineDelete,\n  isFineResend,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: ClientFileMessage;\n  userId: string;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientFileMessage): void;\n}\n\nexport default function OpenchannelFileMessage({\n  className,\n  message,\n  userId,\n  disabled,\n  chainTop,\n  status,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n\n  const openFileUrl = () => { window.open(message.url); };\n\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-file-message',\n      ].join(' ')}\n    >\n      <div className=\"sendbird-openchannel-file-message__left\">\n        {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    className=\"sendbird-openchannel-file-message__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n      </div>\n      <div className=\"sendbird-openchannel-file-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-file-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-file-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-file-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {format(message.createdAt, 'p', { locale: dateLocale })}\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-file-message__right__body\">\n          {\n            checkFileType(message.url) && (\n              <Icon\n                className=\"sendbird-openchannel-file-message__right__body__icon\"\n                type={checkFileType(message.url)}\n                fillColor={IconColors.PRIMARY}\n                width=\"48px\"\n                height=\"48px\"\n              />\n            )\n          }\n          <TextButton\n            className=\"sendbird-openchannel-file-message__right__body__file-name\"\n            onClick={openFileUrl}\n          >\n            <Label\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {truncate(message.name || message.url, 40)}\n            </Label>\n          </TextButton>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-file-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-file-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-file-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      <div\n        className=\"sendbird-openchannel-file-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        {\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message, userId, status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-file-message__context-menu__icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={toggleDropdown}\n                  >\n                    <Icon\n                      type={IconTypes.MORE}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineResend({ message, userId, status }) && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message, userId, status }) && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n        }\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react'\nimport { ClientFileMessage, ClientUserMessage } from '../../..'\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  onCloseModal(): void;\n  onDeleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n}\n\nexport default function RemoveMessageModal({\n  onCloseModal,\n  onDeleteMessage,\n}: Props): JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const isImage = (type) => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type) => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type) => type === 'image/gif';\nexport const unSupported = (type) => !(isImage(type) || isVideo(type));\n\nexport default SUPPORTED_MIMES;\n","import { EveryMessage } from '../../..';\nimport { isImage, isVideo } from '../../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message: EveryMessage): string => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if (message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return MessageTypes.UNKNOWN;\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import React, {\n  useState,\n  useRef,\n  ReactElement,\n  useMemo,\n  useContext,\n} from 'react';\n\nimport format from 'date-fns/format';\nimport * as types from '../../../index';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport OpenChannelUserMessage from '../../../ui/OpenchannelUserMessage';\nimport OpenChannelAdminMessage from '../../../ui/OpenChannelAdminMessage';\nimport OpenChannelOGMessage from '../../../ui/OpenchannelOGMessage';\nimport OpenChannelThumbnailMessage from '../../../ui/OpenchannelThumbnailMessage';\nimport OpenChannelFileMessage from '../../../ui/OpenchannelFileMessage';\n// import UnknownMessage from '../../../ui/UnknownMessage';\n\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\n\nimport RemoveMessageModal from './RemoveMessageModal';\nimport {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n} from './types';\nimport { OpenChannel } from 'sendbird';\n\ninterface Props {\n  message: types.EveryMessage;\n  userId: string;\n  disabled: boolean;\n  editDisabled: boolean;\n  hasSeparator: boolean;\n  channel: OpenChannel;\n  renderCustomMessage?: types.RenderCustomMessage,\n  deleteMessage(message: types.ClientUserMessage | types.ClientFileMessage, callback?: () => void): void;\n  updateMessage(messageId: number, text: string, callback?: () => void): void;\n  resendMessage(failedMessage: types.ClientUserMessage | types.ClientFileMessage): void;\n  status?: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n}\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  channel,\n  renderCustomMessage,\n  deleteMessage,\n  updateMessage,\n  resendMessage,\n  status,\n  chainTop,\n  chainBottom,\n}: Props): ReactElement {\n  let sender: SendBird.User = null;\n  if (message.messageType !== 'admin') {\n    sender = message.sender;\n  }\n\n  const { dateLocale } = useContext(LocalizationContext);\n\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, channel, chainTop, chainBottom);\n    }\n    return null;\n  }, [message, renderCustomMessage]);\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  let isByMe = false;\n\n  if (sender && message.messageType !== 'admin') {\n    // pending and failed messages are by me\n    isByMe = (userId === sender.userId)\n      || (message.requestState === SendingMessageStatus.PENDING)\n      || (message.requestState === SendingMessageStatus.FAILED);\n  }\n\n  if(RenderedMessage) {\n    return (\n      <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (message.messageType === 'user' && showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: (() => {\n            if (message.messageType === 'admin') {\n              return (\n                <OpenChannelAdminMessage message={message} />\n              )\n            }\n          })(),\n          [MessageTypes.FILE]: (() => {\n            if (message.messageType === 'file') {\n              return (\n                <OpenChannelFileMessage\n                  message={message}\n                  disabled={disabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.OG]: (() => {\n            if (message.messageType === 'user') {\n              return (\n                <OpenChannelOGMessage\n                  message={message}\n                  status={status}\n                  userId={userId}\n                  showEdit={setShowEdit}\n                  disabled={disabled}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.THUMBNAIL]: (() => {\n            if (message.messageType === 'file') {\n              return (\n                <OpenChannelThumbnailMessage\n                  message={message}\n                  disabled={disabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  onClick={setShowFileViewer}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.USER]: (() => {\n            if (message.messageType === 'user') {\n              return (\n                <OpenChannelUserMessage\n                  message={message}\n                  userId={userId}\n                  disabled={disabled}\n                  showEdit={setShowEdit}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.UNKNOWN]: (() => {\n            return;\n            // return (\n            //   <OpenChannelUnknownMessage message={message} />\n            // );\n          })(),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              if (message.messageType !== 'admin') {\n                deleteMessage(message);\n              }\n            }}\n          />\n        )\n      }\n      {\n        (showFileViewer && message.messageType === 'file') && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => deleteMessage(message)}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {/* {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      } */}\n    </div>\n  );\n}\n","import React, { ReactElement, useRef, useState, useMemo } from 'react';\nimport isSameDay from 'date-fns/isSameDay';\nimport {\n  ClientFileMessage,\n  ClientUserMessage,\n  EveryMessage,\n  RenderCustomMessage,\n} from '../../../index';\nimport MessageHoc from './MessageHOC';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport './openchannel-conversation-scroll.scss';\nimport { compareMessagesForGrouping } from '../utils';\n\ninterface Props {\n  openchannel: SendBird.OpenChannel;\n  user: SendBird.User;\n  allMessages: Array<EveryMessage>;\n  useMessageGrouping: boolean;\n  isOnline: boolean;\n  hasMore: boolean;\n  renderCustomMessage?: RenderCustomMessage;\n  onScroll(callback?: () => void): void;\n  updateMessage(messageId: number, text: string, callback?: () => void): void;\n  deleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n  resendMessage(failedMessage: ClientUserMessage | ClientFileMessage): void;\n}\n\nfunction OpenchannelConversationScroll(\n  {\n    useMessageGrouping = true,\n    openchannel,\n    user,\n    allMessages,\n    isOnline = true,\n    hasMore,\n    onScroll,\n    renderCustomMessage,\n    updateMessage,\n    deleteMessage,\n    resendMessage,\n  }: Props,\n  ref: React.RefObject<HTMLDivElement>,\n): ReactElement {\n  const scrollRef = ref || useRef(null);\n  const [showScrollDownButton, setShowScrollDownButton] = useState(false);\n\n  const handleOnScroll = (e) => {\n    const element = e.target;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight,\n    } = element;\n    if (\n      (scrollHeight > scrollTop + clientHeight)\n      && (window.navigator.userAgent.indexOf('MSIE ') < 0) // don't show button in IE\n    ) {\n      setShowScrollDownButton(true);\n    } else {\n      setShowScrollDownButton(false);\n    }\n\n    if (!hasMore) {\n      return;\n    }\n    if (scrollTop === 0) {\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(() => {\n        try {\n          first.scrollIntoView();\n        } catch (error) { }\n      });\n    }\n  };\n\n  const scrollToBottom = () => {\n    if (scrollRef && scrollRef.current) {\n      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\n      setShowScrollDownButton(false);\n    }\n  };\n\n  const hasMessage = useMemo(() => {\n    return allMessages.length > 0;\n  }, [allMessages.length]);\n\n  return (\n    <div\n      className=\"sendbird-openchannel-conversation-scroll\"\n      onScroll={handleOnScroll}\n      ref={scrollRef}\n    >\n      <div className=\"sendbird-openchannel-conversation-scroll__container\">\n        <div className=\"sendbird-openchannel-conversation-scroll__container__padding\" />\n        <div className={`sendbird-openchannel-conversation-scroll__container__item-container${hasMessage ? '' : '--no-messages'}`}>\n          {\n            hasMessage\n              ? (\n                allMessages.map((message, index) => {\n                  let status: string;\n\n                  if (message.messageType !== 'admin') {\n                    status = message.sendingStatus;\n                  }\n\n                  const previousMessage = allMessages[index - 1];\n                  const nextMessage = allMessages[index - 1];\n\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = message.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, message, nextMessage)\n                    : [false, false];\n                  return (\n                    <MessageHoc\n                      renderCustomMessage={renderCustomMessage}\n                      channel={openchannel}\n                      key={message.messageId}\n                      message={message}\n                      status={status}\n                      userId={user.userId}\n                      disabled={!isOnline}\n                      editDisabled={openchannel.isFrozen}\n                      hasSeparator={hasSeparator}\n                      chainTop={chainTop}\n                      chainBottom={chainBottom}\n                      deleteMessage={deleteMessage}\n                      updateMessage={updateMessage}\n                      resendMessage={resendMessage}\n                    />\n                  )\n                })\n              )\n              : (\n                <PlaceHolder\n                  className=\"sendbird-openchannel-conversation-scroll__container__place-holder\"\n                  type={PlaceHolderTypes.NO_MESSAGES}\n                />\n              )\n          }\n        </div>\n        {\n          showScrollDownButton && (\n            <div\n              className=\"sendbird-openchannel-conversation-scroll__container__scroll-bottom-button\"\n              onClick={scrollToBottom}\n              onKeyDown={scrollToBottom}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.CONTENT}\n              />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default React.forwardRef(OpenchannelConversationScroll);\n","export const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAIL = 'GET_PREV_MESSAGES_FAIL';\nexport const SENDING_MESSAGE_FAILED = 'SENDING_MESSAGE_FAILED';\nexport const SENDING_MESSAGE_SUCCEEDED = 'SENDING_MESSAGE_SUCCEEDED';\nexport const SENDING_MESSAGE_START = 'SENDING_MESSAGE_START';\nexport const RESENDING_MESSAGE_START = 'RESENDING_MESSAGE_START';\nexport const FETCH_PARTICIPANT_LIST = 'FETCH_PARTICIPANT_LIST';\nexport const FETCH_BANNED_USER_LIST = 'FETCH_BANNED_USER_LIST';\nexport const FETCH_MUTED_USER_LIST= 'FETCH_MUTED_USER_LIST';\nexport const TRIM_MESSAGE_LIST= 'TRIM_MESSAGE_LIST';\n\n// event handlers\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\nexport const ON_OPERATOR_UPDATED = 'ON_OPERATOR_UPDATED';\nexport const ON_USER_ENTERED = 'ON_USER_ENTERED';\nexport const ON_USER_EXITED = 'ON_USER_EXITED';\nexport const ON_USER_MUTED = 'ON_USER_MUTED';\nexport const ON_USER_UNMUTED = 'ON_USER_UNMUTED';\nexport const ON_USER_BANNED = 'ON_USER_BANNED';\nexport const ON_USER_UNBANNED = 'ON_USER_UNBANNED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_META_DATA_CREATED = 'ON_META_DATA_CREATED';\nexport const ON_META_DATA_UPDATED = 'ON_META_DATA_UPDATED';\nexport const ON_META_DATA_DELETED = 'ON_META_DATA_DELETED';\nexport const ON_META_COUNTERS_CREATED = 'ON_META_COUNTERS_CREATED';\nexport const ON_META_COUNTERS_UPDATED = 'ON_META_COUNTERS_UPDATED';\nexport const ON_META_COUNTERS_DELETED = 'ON_META_COUNTERS_DELETED';\nexport const ON_MENTION_RECEIVED = 'ON_MENTION_RECEIVED';\n","import { State as initialStateInterface } from './initialState';\nimport * as actionTypes from './actionTypes';\n\nimport compareIds from '../../../utils/compareIds.js';\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\n// @ts-ignore: Unreachable code error\ninterface ActionInterface {\n  type: string;\n  payload?: any;\n}\n\nexport default function reducer(\n  state: initialStateInterface,\n  action: ActionInterface,\n): initialStateInterface {\n  switch (action.type) {\n    case actionTypes.RESET_MESSAGES: {\n      return {\n        ...state,\n        allMessages: [],\n      };\n    }\n\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      const gottenChannel = action.payload;\n      const operators = gottenChannel.operators;\n      if (\n        !state.isInvalid\n        && state.currentOpenChannel\n        && state.currentOpenChannel.url\n        && (state.currentOpenChannel.url === gottenChannel.url)\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: gottenChannel,\n        isInvalid: false,\n        operators: operators,\n        participants: operators,\n        bannedParticipantIds: [],\n        mutedParticipantIds: [],\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_SUCESS:\n    case actionTypes.GET_PREV_MESSAGES_FAIL: {\n      const isFailed = (action.type === actionTypes.GET_PREV_MESSAGES_FAIL);\n      const {\n        currentOpenChannel = {},\n        messages = [],\n        hasMore,\n        lastMessageTimestamp,\n      } = action.payload;\n      const actionChannelUrl = currentOpenChannel.url;\n      const receivedMessages = isFailed ? [] : messages;\n      const _hasMore = isFailed ? false : hasMore;\n      const _lastMessageTimestamp = isFailed ? 0 : lastMessageTimestamp;\n\n      const stateChannel = state.currentOpenChannel;\n      const stateChannelUrl = stateChannel.url;\n\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      const filteredAllMessages = state.allMessages.filter((message) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, message.messageId)))\n      ));\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: _hasMore,\n        lastMessageTimestamp: _lastMessageTimestamp,\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_START: {\n      const {\n        message,\n        channel,\n      } = action.payload;\n      if (channel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...message },\n        ],\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_SUCCEEDED: {\n      const sentMessage = action.payload;\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, sentMessage.reqId) ? sentMessage : m\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_FAILED: {\n      const sentMessage = action.payload;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, sentMessage.reqId) ? sentMessage : m\n        )),\n      };\n    }\n    case actionTypes.TRIM_MESSAGE_LIST: {\n      const { allMessages } = state;\n      const experimentalMessageLimit = action.payload?.experimentalMessageLimit;\n      if (experimentalMessageLimit\n        && experimentalMessageLimit > 0\n        && allMessages?.length > experimentalMessageLimit\n      ) {\n        const sliceAt = allMessages.length - experimentalMessageLimit;\n        return {\n          ...state,\n          allMessages: allMessages.slice(sliceAt),\n        }\n      }\n      return state;\n    }\n    case actionTypes.RESENDING_MESSAGE_START: {\n      const eventedChannel = action.payload.channel;\n      const resentMessage = action.payload.message;\n      if (eventedChannel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, resentMessage.reqId) ? resentMessage : m\n        )),\n      };\n    }\n    case actionTypes.FETCH_PARTICIPANT_LIST: {\n      const eventedChannel = action.payload.channel;\n      const fetchedParticipantList = action.payload.users;\n      if (eventedChannel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: [... state.participants, ...fetchedParticipantList],\n        // Should check duplication\n      };\n    }\n    case actionTypes.FETCH_BANNED_USER_LIST: {\n      const eventedChannel = action.payload.channel;\n      const fetchedBannedUserList = action.payload.users;\n      if (\n        (eventedChannel.url !== state.currentOpenChannel.url)\n        || !(fetchedBannedUserList.every(user => typeof user.userId === 'string'))\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        bannedParticipantIds: [\n          ... state.bannedParticipantIds,\n          ...fetchedBannedUserList.map(user => user.userId),\n        ],\n        // Should check duplication\n      };\n    }\n    case actionTypes.FETCH_MUTED_USER_LIST: {\n      const eventedChannel = action.payload.channel;\n      const fetchedMutedUserList = action.payload.users;\n      if (\n        (eventedChannel.url !== state.currentOpenChannel.url)\n        || !(fetchedMutedUserList.every(user => typeof user.userId === 'string'))\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        mutedParticipantIds: [\n          ... state.bannedParticipantIds,\n          ...fetchedMutedUserList.map(user => user.userId),\n        ],\n        // Should check duplication\n      };\n    }\n    // events\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const eventedChannel = action.payload.channel;\n      const receivedMessage = action.payload.message;\n\n      const {\n        currentOpenChannel\n      } = state;\n\n      if (\n        !compareIds(eventedChannel.url, currentOpenChannel.url)\n        || (\n          !(state.allMessages.map(\n            (message) => message.messageId).indexOf(receivedMessage.messageId) < 0\n        ))\n      ) {\n        return state;\n      }\n\n      return {\n        ...state,\n        allMessages: [...state.allMessages, receivedMessage],\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const eventedChannel = action.payload.channel;\n      const updatedMessage = action.payload.message;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((message) => (\n          message.isIdentical(updatedMessage)\n            ? updatedMessage\n            : message\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED: {\n      const eventedChannel = action.payload.channel;\n      const deletedMessageId = action.payload.messageId;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((message) => (\n          !compareIds(message.messageId, deletedMessageId)\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID: {\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    }\n    case actionTypes.ON_OPERATOR_UPDATED: {\n      const eventedChannel = action.payload.channel;\n      const updatedOperators = action.payload.operators;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: {\n          ...state.currentOpenChannel,\n          operators: updatedOperators,\n        },\n        operators: updatedOperators,\n      };\n    }\n    case actionTypes.ON_USER_ENTERED: {\n      const eventedChannel = action.payload.channel;\n      const enteredUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: [...state.participants, enteredUser],\n      };\n    }\n    case actionTypes.ON_USER_EXITED: {\n      const eventedChannel = action.payload.channel;\n      const exitedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: state.participants.filter((participant) => (\n          !compareIds(participant.userId, exitedUser.userId)\n        )),\n      };\n    }\n    case actionTypes.ON_USER_MUTED: {\n      const eventedChannel = action.payload.channel;\n      const mutedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.mutedParticipantIds.indexOf(mutedUser.userId) >= 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        mutedParticipantIds: [...state.mutedParticipantIds, mutedUser.userId],\n      };\n    }\n    case actionTypes.ON_USER_UNMUTED: {\n      const eventedChannel = action.payload.channel;\n      const unmutedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.mutedParticipantIds.indexOf(unmutedUser.userId) < 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        mutedParticipantIds: state.mutedParticipantIds.filter(userId => userId !== unmutedUser.userId),\n      };\n    }\n    case actionTypes.ON_USER_BANNED: {\n      const eventedChannel = action.payload.channel;\n      const bannedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.bannedParticipantIds.indexOf(bannedUser.userId) >= 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        bannedParticipantIds: [...state.bannedParticipantIds, bannedUser.userId],\n      };\n    }\n    case actionTypes.ON_USER_UNBANNED: {\n      const eventedChannel = action.payload.channel;\n      const unbannedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.bannedParticipantIds.indexOf(unbannedUser.userId) < 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        bannedParticipantIds: state.bannedParticipantIds.filter(userId => userId !== unbannedUser.userId),\n      };\n    }\n    case actionTypes.ON_CHANNEL_FROZEN: {\n      const frozenChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== frozenChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        frozen: true,\n      };\n    }\n    case actionTypes.ON_CHANNEL_UNFROZEN: {\n      const unfrozenChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== unfrozenChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        frozen: false,\n      };\n    }\n    case actionTypes.ON_CHANNEL_CHANGED: {\n      const changedChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== changedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: changedChannel,\n      };\n    }\n    case actionTypes.ON_META_DATA_CREATED: {\n      // const eventedChannel = action.payload.channel;\n      // const createdMetaData = action.payload.metaData;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_DATA_UPDATED: {\n      // const eventedChannel = action.payload.channel;\n      // const updatedMetaData = action.payload.metaData;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_DATA_DELETED: {\n      // const eventedChannel = action.payload.channel;\n      // const deletedMetaDataKeys = action.payload.metaDataKeys;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_CREATED: {\n      // const eventedChannel = action.payload.channel;\n      // const createdMetaCounter = action.payload.metaCounter;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_UPDATED: {\n      // const eventedChannel = action.payload.channel;\n      // const updatedMetaCounter = action.payload.metaCounter;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_DELETED: {\n      // const eventedChannel = action.payload.channel;\n      // const deletedMetaCounterKeys = action.payload.metaCounterKeys;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_MENTION_RECEIVED: {\n      // const eventedChannel = action.payload.channel;\n      // const mentionedMessage = action.payload.message;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n","import Sendbird from 'sendbird';\nimport { EveryMessage } from '../../../index';\n\nexport interface State {\n  allMessages: Array<EveryMessage>;\n  loading: boolean;\n  initialized: boolean;\n  currentOpenChannel: Sendbird.OpenChannel;\n  isInvalid: boolean;\n  hasMore: boolean;\n  lastMessageTimestamp: number;\n  frozen: boolean;\n  operators: Array<Sendbird.User>;\n  participants: Array<Sendbird.User>;\n  bannedParticipantIds: Array<string | number>;\n  mutedParticipantIds: Array<string | number>;\n}\n\nconst initialState: State = {\n  allMessages: [],\n  loading: false,\n  initialized: false,\n  currentOpenChannel: null,\n  isInvalid: false,\n  hasMore: false,\n  lastMessageTimestamp: 0,\n  frozen: false,\n  operators: [],\n  participants: [],\n  bannedParticipantIds: [],\n  mutedParticipantIds: [],\n};\n\nexport default initialState;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\ninterface DynamicParams {\n  channelUrl: string;\n  sdkInit: boolean;\n  fetchingParticipants: boolean;\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useSetChannel(\n  { channelUrl, sdkInit, fetchingParticipants }: DynamicParams,\n  { sdk, logger, messagesDispatcher }: StaticParams,\n): void {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.OpenChannel) {\n      logger.info('OpenChannel | useSetChannel fetching channel', channelUrl);\n      sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useSetChannel fetched channel', openChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: openChannel,\n          });\n          openChannel.enter((_, error) => {\n            if (error) {\n              logger.warning('OpenChannel | useSetChannel enter channel failed', { channelUrl, error });\n              messagesDispatcher({\n                type: messageActionTypes.SET_CHANNEL_INVALID,\n                payload: null,\n              });\n            }\n            if (fetchingParticipants) {\n              // fetch participants, banned participantIds, muted participantIds\n              const participantListQuery = openChannel.createParticipantListQuery();\n              const bannedParticipantListQuery = openChannel.createBannedUserListQuery();\n              const mutedParticipantListQuery = openChannel.createMutedUserListQuery();\n              utils.fetchWithListQuery(\n                participantListQuery,\n                logger,\n                (users) => {\n                  messagesDispatcher({\n                    type: messageActionTypes.FETCH_PARTICIPANT_LIST,\n                    payload: {\n                      channel: openChannel,\n                      users,\n                    },\n                  });\n                },\n              );\n              utils.fetchWithListQuery(\n                bannedParticipantListQuery,\n                logger,\n                (users) => {\n                  messagesDispatcher({\n                    type: messageActionTypes.FETCH_BANNED_USER_LIST,\n                    payload: {\n                      channel: openChannel,\n                      users,\n                    },\n                  });\n                },\n              );\n              utils.fetchWithListQuery(\n                mutedParticipantListQuery,\n                logger,\n                (users) => {\n                  messagesDispatcher({\n                    type: messageActionTypes.FETCH_MUTED_USER_LIST,\n                    payload: {\n                      channel: openChannel,\n                      users,\n                    },\n                  });\n                },\n              );\n            }\n          });\n        } else {\n          logger.warning('OpenChannel | useSetChannel fetching channel failed', { channelUrl, error });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n            payload: null,\n          });\n        }\n      });\n      // .then((openChannel) => {\n      //   logger.info('OpenChannel | useSetChannel fetched channel', openChannel);\n      //   messagesDispatcher({\n      //     type: messageActionTypes.SET_CURRENT_CHANNEL,\n      //     payload: openChannel,\n      //   });\n      //   openChannel.enter((_, error) => {\n      //     if (error) {\n      //       logger.warning('OpenChannel | useSetChannel enter channel failed', { channelUrl, error });\n      //       messagesDispatcher({\n      //         type: messageActionTypes.SET_CHANNEL_INVALID,\n      //       });\n      //     }\n      //     if (fetchingParticipants) {\n      //       // fetch participants, banned participantIds, muted participantIds\n      //       const participantListQuery = openChannel.createParticipantListQuery();\n      //       const bannedParticipantListQuery = openChannel.createBannedUserListQuery();\n      //       const mutedParticipantListQuery = openChannel.createMutedUserListQuery();\n      //       utils.fetchWithListQuery(\n      //         participantListQuery,\n      //         logger,\n      //         (users) => {\n      //           messagesDispatcher({\n      //             type: messageActionTypes.FETCH_PARTICIPANT_LIST,\n      //             payload: {\n      //               channel: openChannel,\n      //               users,\n      //             },\n      //           });\n      //         },\n      //       );\n      //       utils.fetchWithListQuery(\n      //         bannedParticipantListQuery,\n      //         logger,\n      //         (users) => {\n      //           messagesDispatcher({\n      //             type: messageActionTypes.FETCH_BANNED_USER_LIST,\n      //             payload: {\n      //               channel: openChannel,\n      //               users,\n      //             },\n      //           });\n      //         },\n      //       );\n      //       utils.fetchWithListQuery(\n      //         mutedParticipantListQuery,\n      //         logger,\n      //         (users) => {\n      //           messagesDispatcher({\n      //             type: messageActionTypes.FETCH_MUTED_USER_LIST,\n      //             payload: {\n      //               channel: openChannel,\n      //               users,\n      //             },\n      //           });\n      //         },\n      //       );\n      //     }\n      //   });\n      // })\n      // .catch((error) => {\n      //   logger.warning('OpenChannel | useSetChannel fetching channel failed', { channelUrl, error });\n      //   messagesDispatcher({\n      //     type: messageActionTypes.SET_CHANNEL_INVALID,\n      //   });\n      // });\n    }\n  }, [channelUrl, sdkInit, fetchingParticipants]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport uuidv4 from '../../../utils/uuid';\nimport { scrollIntoLast } from '../utils';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  checkScrollBottom: () => boolean;\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useHandleChannelEvents(\n  { currentOpenChannel, checkScrollBottom }: DynamicParams,\n  { sdk, logger, messagesDispatcher }: StaticParams,\n): void {\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (currentOpenChannel && currentOpenChannel.url && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('OpenChannel | useHandleChannelEvents: Setup evnet handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        const scrollToEnd = checkScrollBottom();\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageReceived', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_RECEIVED,\n          payload: { channel, message },\n        });\n        if (scrollToEnd) {\n          try {\n            setTimeout(() => {\n              scrollIntoLast();\n            });\n          } catch (error) {\n            logger.warning('OpenChannel | onMessageReceived | scroll to end failed');\n          }\n        }\n      };\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageUpdated', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n      ChannelHandler.onMessageDeleted = (channel, messageId) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageDeleted', { channelUrl, messageId });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: { channel, messageId },\n        });\n      };\n      ChannelHandler.onOperatorUpdated = (channel, operators) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onOperatorUpdated', { channelUrl, operators });\n        messagesDispatcher({\n          type: messageActionTypes.ON_OPERATOR_UPDATED,\n          payload: { channel, operators },\n        });\n      };\n      ChannelHandler.onUserEntered = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserEntered', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_ENTERED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserExited = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserExited', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_EXITED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserMuted = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserMuted', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_MUTED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserUnmuted = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserUnmuted', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_UNMUTED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserBanned = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserBanned', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_BANNED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserUnbanned = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserUnbanned', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_UNBANNED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onChannelFrozen = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelFrozen', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_FROZEN,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onChannelUnfrozen = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelUnfrozen', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_UNFROZEN,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onChannelChanged = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelChanged', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_CHANGED,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onMetaDataCreated = (channel, metaData) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataCreated', { channelUrl, metaData });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_CREATED,\n          payload: { channel, metaData },\n        });\n      };\n      ChannelHandler.onMetaDataUpdated = (channel, metaData) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataUpdated', { channelUrl, metaData });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_UPDATED,\n          payload: { channel, metaData },\n        });\n      };\n      ChannelHandler.onMetaDataDeleted = (channel, metaDataKeys) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataDeleted', { channelUrl, metaDataKeys });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_DELETED,\n          payload: { channel, metaDataKeys },\n        });\n      };\n      ChannelHandler.onMetaCountersCreated = (channel, metaCounter) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersCreated', { channelUrl, metaCounter });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_CREATED,\n          payload: { channel, metaCounter },\n        });\n      };\n      ChannelHandler.onMetaCountersUpdated = (channel, metaCounter) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersUpdated', { channelUrl, metaCounter });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_UPDATED,\n          payload: { channel, metaCounter },\n        });\n      };\n      ChannelHandler.onMetaCountersDeleted = (channel, metaCounterKeys) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersDeleted', { channelUrl, metaCounterKeys });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_DELETED,\n          payload: { channel, metaCounterKeys },\n        });\n      };\n      ChannelHandler.onMentionReceived = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMentionReceived', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MENTION_RECEIVED,\n          payload: { channel, message },\n        });\n      };\n\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('OpenChannel | useHandleChannelEvents: Removing message receiver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    }\n  }, [currentOpenChannel]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { scrollIntoLast } from '../utils';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  /* eslint-disable @typescript-eslint/no-explicit-any*/\n  userFilledMessageListParams?: Record<string, any>;\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useInitialMessagesFetch(\n  { currentOpenChannel, userFilledMessageListParams }: DynamicParams,\n  { sdk, logger, messagesDispatcher }: StaticParams,\n): void {\n  useEffect(() => {\n    logger.info('OpenChannel | useInitialMessagesFetch: Setup started', currentOpenChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n      payload: null,\n    });\n\n    if (sdk && sdk.MessageListParams && currentOpenChannel && currentOpenChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReactions = false;\n      if (userFilledMessageListParams) {\n        Object.keys(userFilledMessageListParams).forEach((key) => {\n          messageListParams[key] = userFilledMessageListParams[key];\n        });\n        logger.info('OpenChannel | useInitialMessagesFetch: Used customizedMessageListParams');\n      }\n\n      logger.info('OpenChannel | useInitialMessagesFetch: Fetching messages', { currentOpenChannel, messageListParams });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n        payload: null,\n      });\n      currentOpenChannel.getMessagesByTimestamp(new Date().getTime(), messageListParams, (messages, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useInitialMessagesFetch: Fetching messages succeeded', messages);\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimestamp = hasMore ? messages[0].createdAt : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              currentOpenChannel,\n              messages,\n              hasMore,\n              lastMessageTimestamp,\n            },\n          });\n          setTimeout(() => { scrollIntoLast(); });\n        } else {\n          logger.error('OpenChannel | useInitialMessagesFetch: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n            payload: {\n              currentOpenChannel,\n              messages: [],\n              hasMore: false,\n              lastMessageTimestamp: 0,\n            },\n          });\n        }\n      });\n    }\n  }, [currentOpenChannel, userFilledMessageListParams]);\n}\n\nexport default useInitialMessagesFetch;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  lastMessageTimestamp: number;\n  fetchMore?: boolean;\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  hasMore: boolean;\n  /* eslint-disable @typescript-eslint/no-explicit-any*/\n  userFilledMessageListParams?: Record<string, any>;\n}\ntype CallbackReturn = (callback: () => void) => void;\n\nfunction useScrollCallback(\n  { currentOpenChannel, lastMessageTimestamp, fetchMore }: DynamicParams,\n  { sdk, logger, messagesDispatcher, hasMore, userFilledMessageListParams }: StaticParams,\n): CallbackReturn {\n  return useCallback((callback) => {\n    if (fetchMore && hasMore && sdk && sdk.MessageListParams) {\n      logger.info('OpenChannel | useScrollCallback: start');\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReactions = false;\n\n      if (userFilledMessageListParams) {\n        Object.keys(userFilledMessageListParams).forEach((key) => {\n          messageListParams[key] = userFilledMessageListParams[key];\n        });\n        logger.info('OpenChannel | useScrollCallback: Used userFilledMessageListParams', userFilledMessageListParams);\n      }\n\n      logger.info('OpenChannel | useScrollCallback: Fetching messages', { currentOpenChannel, messageListParams });\n\n      currentOpenChannel.getMessagesByTimestamp(lastMessageTimestamp || new Date().getTime(), messageListParams, (messages, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useScrollCallback: Fetching messages succeeded', messages);\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimestamp = hasMore ? messages[0].createdAt : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              currentOpenChannel,\n              messages,\n              hasMore,\n              lastMessageTimestamp,\n            }\n          });\n          setTimeout(() => {\n            callback();\n          });\n        } else {\n          logger.error('OpenChannel | useScrollCallback: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n            payload: {\n              currentOpenChannel,\n              messages: [],\n              hasMore: false,\n              lastMessageTimestamp: 0,\n            }\n          });\n        }\n      });\n    }\n  }, [currentOpenChannel, lastMessageTimestamp, fetchMore]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\ninterface DynamicParams {\n  conversationScrollRef: React.RefObject<HTMLDivElement>;\n}\ninterface StaticParams {\n  logger: SendbirdUIKit.Logger;\n}\n\nfunction useCheckScrollBottom(\n  { conversationScrollRef }: DynamicParams,\n  { logger }: StaticParams,\n): () => boolean {\n  return useCallback(() => {\n    let isBottom = true;\n    if (conversationScrollRef) {\n      try {\n        const conversationScroll = conversationScrollRef.current;\n        isBottom = conversationScroll.scrollHeight <= conversationScroll.scrollTop + conversationScroll.clientHeight;\n      } catch(error) {\n        logger.error('OpenChannel | useCheckScrollBottom', error);\n      }\n    }\n    return isBottom;\n  }, [conversationScrollRef])\n}\n\nexport default useCheckScrollBottom;\n","import Sendbird from 'sendbird';\nimport { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  onBeforeSendUserMessage: (text: string) => Sendbird.UserMessageParams;\n  checkScrollBottom: () => boolean;\n  messageInputRef: React.RefObject<HTMLInputElement>;\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useSendMessageCallback(\n  { currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef }: DynamicParams,\n  { sdk, logger, messagesDispatcher }: StaticParams,\n): () => void {\n  return useCallback(() => {\n    if (sdk && sdk.UserMessageParams) {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt: string | number): Sendbird.UserMessageParams => {\n        const message = typeof txt === 'string' ? txt.trim() : txt.toString(10).trim();\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      }\n      const createCustomParams = onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function';\n      if (createCustomParams) {\n        logger.info('OpenChannel | useSendMessageCallback: Creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n      const params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text) : createParamsDefault(text);\n      logger.info('OpenChannel | useSendMessageCallback: Sending message has started', params);\n\n      const isBottom = checkScrollBottom();\n      const pendingMessage = currentOpenChannel.sendUserMessage(params, (message, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useSendMessageCallback: Sending message succeeded', message);\n          messagesDispatcher({\n            type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n            payload: message,\n          });\n          if (isBottom) {\n            setTimeout(() => {\n              utils.scrollIntoLast();\n            });\n          }\n        } else {\n          logger.warning('OpenChannel | useSendMessageCallback: Sending message failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.SENDING_MESSAGE_FAILED,\n            payload: messageActionTypes,\n          });\n        }\n      });\n      messagesDispatcher({\n        type: messageActionTypes.SENDING_MESSAGE_START,\n        payload: {\n          message: pendingMessage,\n          channel: currentOpenChannel,\n        }\n      });\n    }\n  }, [currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef]);\n}\n\nexport default useSendMessageCallback;\n","import Sendbird from 'sendbird';\nimport { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  onBeforeSendFileMessage: (file: File) => Sendbird.FileMessageParams;\n  checkScrollBottom: () => boolean;\n  imageCompression?: {\n    compressionRate?: number,\n    resizingWidth?: number | string,\n    resizingHeight?: number | string,\n  };\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\ntype CallbackReturn = (file: File) => void;\n\nfunction useFileUploadCallback(\n  {\n    currentOpenChannel,\n    checkScrollBottom,\n    imageCompression = {},\n    onBeforeSendFileMessage,\n  }: DynamicParams,\n  { sdk, logger, messagesDispatcher }: StaticParams,\n): CallbackReturn {\n  return useCallback((file) => {\n    if (sdk && sdk.FileMessageParams) {\n      const {\n        compressionRate,\n        resizingWidth,\n        resizingHeight,\n      } = imageCompression;\n      const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n      const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n      const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n      // pxToNumber returns null if values are invalid\n      const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n        || utils.pxToNumber(resizingHeight);\n\n      const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n      const createParamsDefault = (file_): Sendbird.FileMessageParams => {\n        const params = new sdk.FileMessageParams();\n        params.file = file_;\n        return params;\n      };\n\n      if (canCompressImage) { // Using image compression\n        try {\n          const image: HTMLImageElement = document.createElement('img');\n          image.src = URL.createObjectURL(file);\n          image.onload = () => {\n            URL.revokeObjectURL(image.src);\n            const canvas = document.createElement('canvas');\n            const imageWidth = image.naturalWidth || image.width;\n            const imageHeight = image.naturalHeight || image.height;\n            let targetWidth = utils.pxToNumber(resizingWidth) || imageWidth;\n            let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n            // In canvas.toBlob(callback, mimeType, qualityArgument)\n            // qualityArgument doesnt work\n            // so in case compressibleDiamensions are not present, we use ratio\n            if (file.type === 'image/png' && !compressibleDiamensions) {\n              targetWidth *= compressionRate;\n              targetHeight *= compressionRate;\n            }\n\n            canvas.width = targetWidth;\n            canvas.height = targetHeight;\n            const context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0, targetWidth, targetHeight);\n            context.canvas.toBlob(\n              (newImageBlob) => {\n                const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n                if (createCustomParams) {\n                  logger.info('OpenChannel | useFileUploadCallback: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n                }\n                const params = onBeforeSendFileMessage ? onBeforeSendFileMessage(compressedFile) : createParamsDefault(compressedFile);\n                logger.info('OpenChannel | useFileUploadCallback: Uploading file message start', params);\n\n                const isBottom = checkScrollBottom();\n                const pendingMessage = currentOpenChannel.sendFileMessage(\n                  params,\n                  (message: SendbirdUIKit.ClientFileMessage, error) => {\n                    if (!error) {\n                      logger.info('OpenChannel | useFileUploadCallback: Sending message succeeded', message);\n                      messagesDispatcher({\n                        type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n                        payload: message,\n                      });\n                      if (isBottom) {\n                        setTimeout(() => {\n                          utils.scrollIntoLast();\n                        });\n                      }\n                    } else {\n                      logger.error('OpenChannel | useFileUploadCallback: Sending file message failed', { message, error });\n                      message.localUrl = URL.createObjectURL(file);\n                      message.file = file;\n                      messagesDispatcher({\n                        type: messageActionTypes.SENDING_MESSAGE_FAILED,\n                        payload: message,\n                      });\n                    }\n                  },\n                );\n\n                messagesDispatcher({\n                  type: messageActionTypes.SENDING_MESSAGE_START,\n                  payload: {\n                    message: {\n                      ...pendingMessage,\n                      url: URL.createObjectURL(file),\n                      // pending thumbnail message seems to be failed\n                      requestState: 'pending',\n                    },\n                    channel: currentOpenChannel,\n                  }\n                });\n              },\n              file.type,\n              compressionRate,\n            );\n          }\n        } catch (error) {\n          logger.warning('OpenChannel | useFileUploadCallback: Sending file message with image compression failed', error);\n        }\n      } else { // Not using image compression\n        if (createCustomParams) {\n          logger.info('OpenChannel | useFileUploadCallback: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n        }\n        const params = onBeforeSendFileMessage ? onBeforeSendFileMessage(file) : createParamsDefault(file);\n        logger.info('OpenChannel | useFileUploadCallback: Uploading file message start', params);\n\n        const isBottom = checkScrollBottom();\n        const pendingMessage = currentOpenChannel.sendFileMessage(\n          params,\n          (message: SendbirdUIKit.ClientFileMessage, error) => {\n            if (!error) {\n              logger.info('OpenChannel | useFileUploadCallback: Sending message succeeded', message);\n              messagesDispatcher({\n                type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n                payload: message,\n              });\n              if (isBottom) {\n                setTimeout(() => {\n                  utils.scrollIntoLast();\n                });\n              }\n            } else {\n              logger.error('OpenChannel | useFileUploadCallback: Sending file message failed', { message, error });\n              message.localUrl = URL.createObjectURL(file);\n              message.file = file;\n              messagesDispatcher({\n                type: messageActionTypes.SENDING_MESSAGE_FAILED,\n                payload: message,\n              });\n            }\n          }\n        );\n\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_START,\n          payload: {\n            message: {\n              ...pendingMessage,\n              url: URL.createObjectURL(file),\n              // pending thumbnail message seems to be failed\n              requestState: 'pending',\n            },\n            channel: currentOpenChannel,\n          }\n        });\n      }\n    }\n  }, [currentOpenChannel, onBeforeSendFileMessage, checkScrollBottom, imageCompression]);\n}\n\nexport default useFileUploadCallback;\n","import Sendbird from 'sendbird';\nimport { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  onBeforeSendUserMessage?: (text) => Sendbird.UserMessageParams;\n}\ninterface StaticParams {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload :any }) => void;\n}\ntype CallbackReturn = (messageId, text, callback) => void;\n\nfunction useUpdateMessageCallback(\n  { currentOpenChannel, onBeforeSendUserMessage }: DynamicParams,\n  { sdk, logger, messagesDispatcher }: StaticParams,\n): CallbackReturn {\n  return useCallback((messageId, text, callback) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    if (onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function') {\n      logger.info('OpenChannel | useUpdateMessageCallback: Creating params using onBeforeUpdateUserMessage');\n    }\n    const params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text) : createParamsDefault(text);\n    currentOpenChannel.updateUserMessage(messageId, params, (message, error) => {\n      if (callback) {\n        callback();\n      }\n      if (!error) {\n        logger.info('OpenChannel | useUpdateMessageCallback: Updating message succeeded', { message, params });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentOpenChannel,\n            message,\n          },\n        });\n      } else {\n        logger.warning('OpenChannel | useUpdateMessageCallback: Updating message failed', error);\n      }\n    });\n  }, [currentOpenChannel, onBeforeSendUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n}\ninterface StaticParams {\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\ntype CallbackReturn = (\n  message: SendbirdUIKit.ClientUserMessage | SendbirdUIKit.ClientFileMessage,\n  callback?: () => void,\n) => void;\n\nfunction useDeleteMessageCallback(\n  { currentOpenChannel }: DynamicParams,\n  { logger, messagesDispatcher }: StaticParams,\n): CallbackReturn {\n  return useCallback((message, callback) => {\n    logger.info('OpenChannel | useDeleteMessageCallback: Deleting message', message);\n    const { sendingStatus } = message;\n    logger.info('OpenChannel | useDeleteMessageCallback: Deleting message requestState', sendingStatus);\n\n    if (sendingStatus === 'failed' || sendingStatus === 'pending') {\n      logger.info('OpenChannel | useDeleteMessageCallback: Deleted message from local', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (callback) {\n        callback();\n      }\n    } else {\n      if (!(message.messageType ==='file' || message.messageType === 'user')) {\n        return;\n      }\n      const messageToDelete = message as SendBird.UserMessage;\n      currentOpenChannel.deleteMessage(messageToDelete, (error) => {\n        logger.info('OpenChannel | useDeleteMessageCallback: Deleting message on server', sendingStatus);\n        if (callback) {\n          callback();\n        }\n        if (!error) {\n          logger.info('OpenChannel | useDeleteMessageCallback: Deleting message succeeded', message);\n          messagesDispatcher({\n            type: messageActionTypes.ON_MESSAGE_DELETED,\n            payload: {\n              channel: currentOpenChannel,\n              messageId: message.messageId,\n            },\n          });\n        } else {\n          logger.warning('OpenChannel | useDeleteMessageCallback: Deleting message failed', error);\n        }\n      });\n    }\n  }, [currentOpenChannel]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n}\ninterface StaticParams {\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\ntype CallbackReturn = (failedMessage: SendbirdUIKit.ClientUserMessage | SendbirdUIKit.ClientFileMessage) => void;\n\nfunction useResendMessageCallback(\n  { currentOpenChannel }: DynamicParams,\n  { logger, messagesDispatcher }: StaticParams,\n): CallbackReturn {\n  return useCallback((failedMessage) => {\n    logger.info('OpenChannel | useResendMessageCallback: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function' && failedMessage.isResendable()) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESENDING_MESSAGE_START,\n        payload: {\n          channel: currentOpenChannel,\n          message: failedMessage,\n        },\n      });\n\n      // userMessage\n      if (messageType === 'user' && failedMessage.messageType === 'user') {\n        currentOpenChannel.resendUserMessage(failedMessage, (message, error) => {\n          if (!error) {\n            logger.info('OpenChannel | useResendMessageCallback: Reseding message succeeded', message);\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n              payload: message,\n            });\n          } else {\n            logger.warning('OpenChannel | useResendMessageCallback: Resending message failed', error);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_FAILED,\n              payload: failedMessage,\n            });\n          }\n        });\n        return;\n      }\n\n      // fileMessage\n      if (messageType === 'file' && failedMessage.messageType === 'file') {\n        currentOpenChannel.resendFileMessage(failedMessage, file, (message, error) => {\n          if (!error) {\n            logger.info('OpenChannel | useResendMessageCallback: Resending file message succeeded', message);\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n              payload: message,\n            });\n          } else {\n            logger.warning('OpenChannel | useResendMessageCallback: Resending file message failed', error);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_FAILED,\n              payload: failedMessage,\n            });\n          }\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('OpenChannel | useResendMessageCallback: Message is not resendable');\n      logger.warning('OpenChannel | useResendMessageCallback: Message is not resendable', failedMessage);\n    }\n  }, [currentOpenChannel]);\n}\n\nexport default useResendMessageCallback;\n","import { useEffect, useState } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  messagesLength: number;\n  experimentalMessageLimit: number;\n}\n\ninterface StaticParams {\n  messagesDispatcher: ({\n    type: string,\n    payload: { experimentalMessageLimit: number }\n  }) => void;\n  logger: SendbirdUIKit.Logger;\n}\n\nconst THROTTLE_TIMER = 5000;\n\n// to trim message list so that we wont keep thousands of messages in memory\n// We are throttling here; not debouncing\n// it will be called once very 5 sec if messagesLength, experimentalMessageLimit changes\n// we check if messagesLength > experimentalMessageLimit before dispatching action\nfunction useTrimMessageList(\n  { messagesLength, experimentalMessageLimit }: DynamicParams,\n  { messagesDispatcher, logger }: StaticParams,\n): void {\n  const [inProgress, setInProgress] = useState(false);\n  useEffect(() => {\n    if (inProgress) {\n      return;\n    }\n    if (typeof messagesLength === 'number' && messagesLength > experimentalMessageLimit) {\n      logger.info('Trimming MessageList');\n      messagesDispatcher({\n        type: messageActionTypes.TRIM_MESSAGE_LIST,\n        payload: { experimentalMessageLimit },\n      });\n    }\n    setInProgress(true);\n    setTimeout(() => { setInProgress(false); }, THROTTLE_TIMER);\n  }, [messagesLength, experimentalMessageLimit]);\n}\n\nexport default useTrimMessageList;\n","import React, {\n  useRef,\n  useEffect,\n  useReducer,\n  useContext,\n  useMemo,\n} from 'react';\nimport * as utils from './utils';\nimport './index.scss';\n\nimport MessageInputWrapper from './components/MessageInpuetWrapper';\nimport FrozenChannelNotification from './components/FrozenNotification';\nimport OpenchannelConversationHeader from '../../ui/OpenchannelConversationHeader';\nimport OpenchannelConversationScroll from './components/OpenchannelConversationScroll';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport { OpenChannelProps } from '../../index';\nimport messagesReducer from './dux/reducers';\nimport messagesInitialState from './dux/initialState';\nimport * as messageActionTypes from './dux/actionTypes';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext.jsx';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { scrollIntoLast } from './utils';\nimport * as topics from '../../lib/pubSub/topics';\n\n// hooks\nimport useSetChannel from './hooks/useSetChannel';\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useCheckScrollBottom from './hooks/useCheckScrollBottom';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useFileUploadCallback from './hooks/useFileUploadCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useTrimMessageList from './hooks/useTrimMessageList';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-openchannel-conversation';\n\ninterface Props extends OpenChannelProps {\n  stores: {\n    sdkStore?: SendbirdUIKit.SdkStore,\n    userStore?: SendbirdUIKit.UserStore,\n  };\n  config: {\n    userId: string,\n    isOnline: boolean,\n    logger?: SendbirdUIKit.Logger,\n    theme?: string,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    pubSub: any,\n    disableUserProfile?: boolean,\n    renderUserProfile?(): JSX.Element,\n    imageCompression?: {\n      compressionRate?: number,\n      resizingWidth?: number | string,\n      resizingHeight?: number | string,\n    },\n  };\n}\n\nexport const OpenchannelConversation = (props: Props): JSX.Element => {\n  const {\n    // internal props\n    stores,\n    config,\n    // normal props\n    useMessageGrouping,\n    channelUrl,\n    queries = {},\n    disableUserProfile,\n    fetchingParticipants = false, // We didn't decide to support fetching participant list\n    renderCustomMessage,\n    renderUserProfile,\n    renderChannelTitle,\n    renderMessageInput,\n    onBeforeSendUserMessage,\n    experimentalMessageLimit,\n    onBeforeSendFileMessage,\n    onChatHeaderActionClick\n  } = props;\n\n  const {\n    sdkStore,\n    userStore,\n  } = stores;\n  const {\n    userId,\n    isOnline,\n    logger,\n    pubSub,\n    imageCompression,\n  } = config;\n\n  const {\n    sdk\n  } = sdkStore;\n  const {\n    user\n  } = userStore;\n\n  // hook variables\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const {\n    allMessages,\n    loading,\n    initialized,\n    currentOpenChannel,\n    isInvalid,\n    hasMore,\n    lastMessageTimestamp,\n    operators,\n    bannedParticipantIds,\n    mutedParticipantIds,\n  } = messagesStore;\n  // ref\n  const messageInputRef = useRef(null); // useSendMessageCallback\n  const conversationScrollRef = useRef(null); // useScrollAfterSendMessageCallback\n  const { stringSet } = useContext(LocalizationContext);\n\n  // const\n  const sdkInit = sdkStore.initialized;\n  const userFilledMessageListParams = queries ? queries.messageListParams: null;\n  const disabled = !initialized\n    || !isOnline\n    || utils.isDisabledBecauseFrozen(currentOpenChannel, userId);\n  // || utils.isDisabledBecauseMuted(mutedParticipantIds, userId)\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  // useMemo\n  const amIBanned = useMemo(() => {\n    return bannedParticipantIds.indexOf(user.userId) >= 0;\n  }, [channelUrl, bannedParticipantIds, user]);\n  const amIMuted = useMemo(() => {\n    return mutedParticipantIds.indexOf(user.userId) >= 0;\n  }, [channelUrl, mutedParticipantIds, user]);\n  const amIOperator = useMemo(() => {\n    return operators.map(operator => operator.userId).indexOf(user.userId) >= 0;\n  }, [channelUrl, operators, user]);\n\n  // use hooks\n  useSetChannel(\n    { channelUrl, sdkInit, fetchingParticipants },\n    { sdk, logger, messagesDispatcher },\n  );\n\n  useEffect(() => {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  const checkScrollBottom = useCheckScrollBottom(\n    { conversationScrollRef },\n    { logger },\n  );\n  useHandleChannelEvents(\n    { currentOpenChannel, checkScrollBottom },\n    { sdk, logger, messagesDispatcher },\n  );\n  useInitialMessagesFetch(\n    { currentOpenChannel, userFilledMessageListParams },\n    { sdk, logger, messagesDispatcher },\n  );\n\n  // donot fetch more for streaming\n  const fetchMore = utils.shouldFetchMore(allMessages?.length, experimentalMessageLimit);\n  const onScroll = useScrollCallback(\n    { currentOpenChannel, lastMessageTimestamp, fetchMore },\n    { sdk, logger, messagesDispatcher, hasMore, userFilledMessageListParams },\n  );\n  const handleSendMessage = useSendMessageCallback(\n    { currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef },\n    { sdk, logger, messagesDispatcher },\n  );\n  const handleFileUpload = useFileUploadCallback(\n    { currentOpenChannel, onBeforeSendFileMessage, checkScrollBottom, imageCompression },\n    { sdk, logger, messagesDispatcher },\n  );\n  const updateMessage = useUpdateMessageCallback(\n    { currentOpenChannel, onBeforeSendUserMessage },\n    { sdk, logger, messagesDispatcher },\n  );\n  const deleteMessage = useDeleteMessageCallback(\n    { currentOpenChannel },\n    { logger, messagesDispatcher },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentOpenChannel },\n    { logger, messagesDispatcher },\n  );\n\n  useTrimMessageList(\n    { messagesLength: allMessages?.length, experimentalMessageLimit },\n    { messagesDispatcher, logger }\n  );\n\n  // handle API calls from withSendbird\n  useEffect(() => {\n    const subscriber = new Map();\n    if (!pubSub || !pubSub.subscribe) {\n      return;\n    }\n    subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n      const { channel, message } = msg;\n      scrollIntoLast();\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n          payload: message,\n        });\n      }\n    }));\n    subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n      const { channel, message } = msg;\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_START,\n          payload: { message, channel },\n        });\n      }\n    }));\n    subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n      const { channel, message } = msg;\n      scrollIntoLast();\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n          payload: { message, channel },\n        });\n      }\n    }));\n    subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n      const { channel, message, fromSelector } = msg;\n      if (fromSelector && channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      }\n    }));\n    subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n      const { channel, messageId } = msg;\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      }\n    }));\n\n    return () => {\n      if (subscriber) {\n        subscriber.forEach((s) => {\n          try {\n            s.remove();\n          } catch {\n            //\n          }\n        });\n      }\n    };\n  }, [channelUrl, sdkInit]);\n\n  if (\n    !currentOpenChannel\n    || !currentOpenChannel.url\n    || amIBanned\n  ) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (loading) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n\n  return (\n    <UserProfileProvider\n      className={COMPONENT_CLASS_NAME}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChannelTitle\n          ? renderChannelTitle({\n            channel: currentOpenChannel,\n            user: user,\n          })\n          : (\n            <OpenchannelConversationHeader\n              title={currentOpenChannel.name}\n              subTitle={`${utils.kFormatter(currentOpenChannel.participantCount)} ${stringSet.OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS}`}\n              coverImage={currentOpenChannel.coverUrl}\n              onActionClick={onChatHeaderActionClick}\n              amIOperator={amIOperator}\n            />\n          )\n      }\n      {\n        currentOpenChannel.isFrozen && (\n          <FrozenChannelNotification />\n        )\n      }\n      <OpenchannelConversationScroll\n        ref={conversationScrollRef}\n        renderCustomMessage={renderCustomMessage}\n        openchannel={currentOpenChannel}\n        user={user}\n        useMessageGrouping={useMessageGrouping}\n        isOnline={isOnline}\n        allMessages={allMessages}\n        onScroll={onScroll}\n        hasMore={hasMore}\n        updateMessage={updateMessage}\n        deleteMessage={deleteMessage}\n        resendMessage={resendMessage}\n      />\n      {\n        renderMessageInput\n          ? (\n            <div className=\"sendbird-openchannel-footer\">\n              {\n                renderMessageInput({\n                  channel: currentOpenChannel,\n                  user: user,\n                  disabled: disabled,\n                })\n              }\n            </div>\n          )\n          : (\n            <MessageInputWrapper\n              channel={currentOpenChannel}\n              user={user}\n              ref={messageInputRef}\n              disabled={disabled || amIMuted}\n              onSendMessage={handleSendMessage}\n              onFileUpload={handleFileUpload}\n              renderMessageInput={renderMessageInput}\n            />\n          )\n      }\n    </UserProfileProvider>\n  );\n};\n\nexport default withSendbirdContext(OpenchannelConversation);\n"],"names":["getMessageCreatedAt","message","format","createdAt","shouldFetchMore","messageLength","maxMessages","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","isSameGroup","comparingMessage","messageType","sender","_a","userId","_b","sendingStatus","_c","_d","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","kFormatter","num","Math","abs","toFixed","concat","isOperator","openChannel","operators","map","operator","indexOf","isDisabledBecauseFrozen","isFrozen","fetchWithListQuery","listQuery","logger","eachQueryNextCallback","fetchList","query","hasNext","next","users","warning","info","pxToNumber","px","parsed","Number","parseFloat","isNaN","MessageInputWrapper","ref","channel","user","disabled","onSendMessage","onFileUpload","renderMessageInput","stringSet","useContext","LocalizationContext","React","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","forwardRef","FrozenNotification","LabelTypography","CAPTION_2","CHANNEL_FROZEN","OpenchannelConversationHeader","coverImage","title","subTitle","amIOperator","onActionClick","width","height","IconTypes","CHANNELS","IconColors","CONTENT","H_2","LabelColors","ONBACKGROUND_1","NO_TITLE","BODY_2","ONBACKGROUND_2","INFO","MEMBERS","PRIMARY","copyToClipboard","text","window","clipboardData","setData","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","OpenChannelMessageStatusTypes","NONE","PENDING","FAILED","CANCELED","SUCCEEDED","getSenderFromMessage","_sender","checkIsSent","status","checkIsPending","checkIsFailed","checkIsByMe","isFineCopy","length","isFineResend","isResendable","isFineEdit","isFineDelete","showMenuTrigger","props","OpenchannelUserMessage","className","resendMessage","showEdit","showRemove","chainTop","dateLocale","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","useState","contextStyle","setContextStyle","isByMe","isPending","isFailed","MemoizedMessageText","useMemo","splitMessage","split","matchedMessage","word","updatedAt","push","uuidv4","BODY_1","MESSAGE_EDITED","useEffect","current","clientHeight","top","innerWidth","__spreadArray","Array","isArray","join","toggleDropdown","profileUrl","closeDropdown","paddingTop","paddingBottom","close","UserProfile","SECONDARY_3","friendName","nickname","CAPTION_3","ONBACKGROUND_3","locale","SPINNER","ERROR","MORE","CONTENT_INVERSE","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelAdminMessage","URL_REG","createUrlTester","regexp","test","checkOGIsEnalbed","ogMetaData","url","OpenchannelOGMessage","defaultImage","messageComponentRef","isUrl","wordClassName","openLink","open","SUBTITLE_2","description","alt","THUMBNAIL_NONE","SUPPORTING_TYPES","IMAGE","VIDEO","UNSUPPORTED","SUPPORTED_MIMES","getSupportingFileType","type","OpenchannelThumbnailMessage","onClick","localUrl","thumbnails","thumbnailUrl","_e","messageWidth","setMessageWidth","memorizedThumbnailPlaceHolder","ON_BACKGROUND_2","isMessageSent","thumbnailWidth","clientWidth","PLAY","PHOTO","checkFileType","fileUrl","audioFile","gifFile","FILE_AUDIO","GIF","FILE_DOCUMENT","truncate","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","ceil","backChars","floor","substr","OpenchannelFileMessage","openFileUrl","name","RemoveMessageModal","onCloseModal","onDeleteMessage","MODAL__DELETE_MESSAGE__TITLE","isImage","isVideo","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","UNKNOWN","SendingMessageStatus","getMessageType","isUserMessage","isAdminMessage","MessageHoc","editDisabled","hasSeparator","renderCustomMessage","deleteMessage","updateMessage","chainBottom","RenderedMessage","setShowEdit","setShowRemove","showFileViewer","setShowFileViewer","editMessageInputRef","requestState","messageId","OpenChannelFileMessage","OpenChannelOGMessage","OpenChannelThumbnailMessage","OpenChannelUserMessage","OpenchannelConversationScroll","useMessageGrouping","openchannel","allMessages","isOnline","hasMore","onScroll","scrollRef","showScrollDownButton","setShowScrollDownButton","handleOnScroll","e","element","target","navigator","userAgent","nodes","querySelectorAll","first_1","scrollIntoView","scrollToBottom","scrollTo","hasMessage","index","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","PlaceHolderTypes","NO_MESSAGES","CHEVRON_DOWN","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","RESET_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_PREV_MESSAGES_FAIL","SENDING_MESSAGE_FAILED","SENDING_MESSAGE_SUCCEEDED","SENDING_MESSAGE_START","RESENDING_MESSAGE_START","FETCH_PARTICIPANT_LIST","FETCH_BANNED_USER_LIST","FETCH_MUTED_USER_LIST","TRIM_MESSAGE_LIST","ON_MESSAGE_RECEIVED","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","ON_OPERATOR_UPDATED","ON_USER_ENTERED","ON_USER_EXITED","ON_USER_MUTED","ON_USER_UNMUTED","ON_USER_BANNED","ON_USER_UNBANNED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_CHANNEL_CHANGED","ON_META_DATA_CREATED","ON_META_DATA_UPDATED","ON_META_DATA_DELETED","ON_META_COUNTERS_CREATED","ON_META_COUNTERS_UPDATED","ON_META_COUNTERS_DELETED","ON_MENTION_RECEIVED","reducer","state","action","actionTypes","__assign","gottenChannel","payload","isInvalid","currentOpenChannel","participants","bannedParticipantIds","mutedParticipantIds","loading","messages","lastMessageTimestamp","actionChannelUrl","receivedMessages_1","_hasMore","_lastMessageTimestamp","stateChannel","stateChannelUrl","filteredAllMessages","filter","find","compareIds","initialized","sentMessage_1","newMessages","m","reqId","sentMessage_2","experimentalMessageLimit","sliceAt","slice","eventedChannel","resentMessage_1","fetchedParticipantList","fetchedBannedUserList","every","fetchedMutedUserList","receivedMessage","updatedMessage_1","currentChannel","isIdentical","deletedMessageId_1","updatedOperators","enteredUser","exitedUser_1","participant","mutedUser","unmutedUser_1","bannedUser","unbannedUser_1","frozenChannel","frozen","unfrozenChannel","changedChannel","initialState","useSetChannel","channelUrl","sdkInit","fetchingParticipants","sdk","messagesDispatcher","OpenChannel","getChannel","messageActionTypes","enter","_","participantListQuery","createParticipantListQuery","bannedParticipantListQuery","createBannedUserListQuery","mutedParticipantListQuery","createMutedUserListQuery","utils","useHandleChannelEvents","checkScrollBottom","messageReceiverId","ChannelHandler","onMessageReceived","scrollToEnd","onMessageUpdated","onMessageDeleted","onOperatorUpdated","onUserEntered","onUserExited","onUserMuted","onUserUnmuted","onUserBanned","onUserUnbanned","onChannelFrozen","onChannelUnfrozen","onChannelChanged","onMetaDataCreated","metaData","onMetaDataUpdated","onMetaDataDeleted","metaDataKeys","onMetaCountersCreated","metaCounter","onMetaCountersUpdated","onMetaCountersDeleted","metaCounterKeys","onMentionReceived","addChannelHandler","removeChannelHandler","useInitialMessagesFetch","userFilledMessageListParams","MessageListParams","getMessagesByTimestamp","messageListParams_1","prevResultSize","isInclusive","includeReplies","includeReactions","Object","keys","forEach","key","messageListParams","Date","getTime","useScrollCallback","fetchMore","useCallback","callback","hasMore_1","lastMessageTimestamp_1","useCheckScrollBottom","conversationScrollRef","isBottom","conversationScroll","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","UserMessageParams","value","createParamsDefault","txt","trim","toString","params","createCustomParams","isBottom_1","pendingMessage","sendUserMessage","useFileUploadCallback","imageCompression","onBeforeSendFileMessage","file","FileMessageParams","compressionRate_1","compressionRate","resizingWidth_1","resizingWidth","resizingHeight_1","createCustomParams_1","compressibleFileType","compressibleRatio","compressibleDiamensions_1","canCompressImage","createParamsDefault_1","file_","image_1","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWidth","naturalWidth","imageHeight","naturalHeight","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","sendFileMessage","useUpdateMessageCallback","updateUserMessage","useDeleteMessageCallback","messageToDelete","useResendMessageCallback","failedMessage","resendUserMessage","resendFileMessage","console","THROTTLE_TIMER","useTrimMessageList","messagesLength","inProgress","setInProgress","COMPONENT_CLASS_NAME","OpenchannelConversation","stores","config","queries","renderChannelTitle","onChatHeaderActionClick","sdkStore","userStore","pubSub","useReducer","messagesReducer","messagesInitialState","messagesStore","userDefinedDisableUserProfile","userDefinedRenderProfile","amIBanned","amIMuted","handleSendMessage","handleFileUpload","subscriber","Map","subscribe","set","topics","msg","fromSelector","s","remove","NO_CHANNELS","LOADING","WRONG","participantCount","OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS","coverUrl","FrozenChannelNotification","withSendbirdContext"],"mappings":"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"}