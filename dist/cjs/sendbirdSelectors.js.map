{"version":3,"file":"sendbirdSelectors.js","sources":["../../src/lib/selectors.ts"],"sourcesContent":["import * as topics from './pubSub/topics';\nimport type {\n  User,\n  UserUpdateParams,\n} from '@sendbird/chat';\n\nimport { FailedMessageHandler, MessageHandler, UserMessage, UserMessageCreateParams } from '@sendbird/chat/message';\nimport { GroupChannel, GroupChannelCreateParams, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport { OpenChannel, OpenChannelCreateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\nimport { FileMessage, FileMessageCreateParams, SendableMessage, UserMessageUpdateParams } from '@sendbird/chat/lib/__definition';\n\nimport {\n  SdkStore,\n  SendBirdState,\n  SendBirdStateConfig,\n  SendBirdStateStore,\n} from './types';\nimport { noop } from '../utils/utils';\n\n/**\n * 1. UIKit Instances\n *    a. getSdk\n *    b. getPubSub\n * 2. Chat & Connection\n *    a. getConnect\n *    b. getDisconnect\n *    c. getUpdateUserInfo\n * 3. Channel\n *    a. getCreateGroupChannel\n *    b. getCreateOpenChannel\n *    c. getGetGroupChannel\n *    d. getGetOpenChannel\n *    e. getLeaveGroupChannel\n *    f. getEnterOpenChannel\n *    g. getExitOpenChannel\n *    h. getFreezeChannel\n *    i. getUnfreezeChannel\n * 4. Message\n *    a. getSendUserMessage\n *    b. getSendFileMessage\n *    c. getUpdateUserMessage\n *    d. x - getUpdateFileMessage\n *    e. getDeleteMessage\n *    f. getResendUserMessage\n *    g. getResendFileMessage\n */\n\n/**\n * import useSendbirdStateContext from '@sendbird-uikit/useSendbirdStateContext'\n * import selectors from '@sendbird-uikit/send'\n * const state = useSendbirdStateContext();\n */\n\n// 1. UIKit Instances\n\n/**\n * const sdk = selectors.getSdk(state);\n */\nexport const getSdk = (state: SendBirdState): SendbirdGroupChat & SendbirdOpenChat => {\n  const { stores = {} } = state;\n  const { sdkStore = {} } = stores as SendBirdStateStore;\n  const { sdk } = sdkStore as SdkStore;\n  return sdk;\n};\n\n/**\n * const pubSub = selectors.getPubSub(state);\n */\nexport const getPubSub = (state: SendBirdState): any => {\n  const { config = {} } = state;\n  const { pubSub } = config as SendBirdStateConfig;\n  return pubSub;\n};\n\n// 2. Chat & Connection\n\n/**\n * const connect = selectors.getConnect(state);\n * connect('user-id-sendbirdian', 'access-token-0000')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getConnect = (state: SendBirdState) => (\n  (userId: string, accessToken?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk?.connect && typeof sdk.connect === 'function')) {\n        reject(new Error('Not found the function \"connect'));\n      }\n      if (!accessToken) {\n        sdk.connect(userId)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      } else {\n        sdk.connect(userId, accessToken)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      }\n    })\n  )\n);\n\n/**\n * const disconnect = selectors.getDisconnect(state);\n * disconnect()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getDisconnect = (state: SendBirdState) => (\n  (): Promise<void> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.disconnect && typeof sdk.disconnect === 'function')) {\n        reject(new Error('Not found the function \"disconnect'));\n      }\n      sdk.disconnect()\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n/**\n * const updateUserInfo = selectors.getUpdateUserInfo(state);\n * updateUserInfo('new-nickname', 'new-profile-url')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserInfo = (state: SendBirdState) => (\n  (nickname: string, profileUrl?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.updateCurrentUserInfo && typeof sdk.updateCurrentUserInfo === 'function')) {\n        reject(new Error('Not found the function \"updateCurrentUserInfo\"'))\n      }\n      const userParams: UserUpdateParams = { nickname };\n      if (profileUrl) {\n        userParams.profileUrl = profileUrl;\n      }\n      sdk.updateCurrentUserInfo(userParams)\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n// 3. Channel\n\n/**\n * const createGroupChannel = selectors.getCreateGroupChannel(state);\n * createGroupChannel(channelParams: GroupChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateGroupChannel = (state: SendBirdState) => (\n  (params: GroupChannelCreateParams): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'))\n      }\n      sdk.groupChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          pubSub.publish(\n            topics.CREATE_CHANNEL,\n            { channel },\n          );\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const createOpenChannel = selectors.getCreateOpenChannel(state);\n * createOpenChannel(channelParams: OpenChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateOpenChannel = (state: SendBirdState) => (\n  (params: OpenChannelCreateParams): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.createChannel && typeof sdk.openChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'))\n      }\n      sdk.openChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          // Consider pubSub process\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const getGroupChannel = selectors.getGetGroupChannel(state);\n * getGroupChannel('channel-url-1234', isSelected)\n *  .then((channel) => {\n *    // groupChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.getChannel && typeof sdk.groupChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'))\n      }\n      sdk.groupChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const getOpenChannel = selectors.getGetOpenChannel(state);\n * getOpenChannel('channel-url-12345')\n *  .then((channel) => {\n *    // openChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.getChannel && typeof sdk.openChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'))\n      }\n      sdk.openChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const leaveChannel = selectors.getLeaveGroupChannel(state);\n * leaveChannel('group-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getLeaveGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<void> => (\n    new Promise((resolve, reject) => {\n      getGetGroupChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.leave()\n            .then(() => {\n              resolve();\n              // Add pubSub process\n            })\n            .catch(reject)\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const enterChannel = selectors.getEnterOpenChannel(state);\n * enterChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getEnterOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.enter()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject)\n        })\n        .catch(reject)\n    })\n  )\n)\n\n/**\n * const exitChannel = selectors.getExitOpenChannel(state);\n * exitChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getExitOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.exit()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject)\n        })\n        .catch(reject)\n    })\n  )\n)\n\n/**\n * const freezeChannel = selectors.getFreezeChannel(currentChannel);\n * freezeChannel()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getFreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.freeze && typeof channel?.freeze === 'function')) {\n        reject(new Error('Not found the function \"freeze\"'));\n      }\n      channel.freeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _freezeGroupChannel and _freezeOpenChannel\n           */\n        })\n        .catch(reject)\n    })\n  )\n)\n\n/**\n * const unfreezeChannel = selectors.getUnfreezeChannel(currentChannel);\n * unfreezeChannel()\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getUnfreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.unfreeze && typeof channel?.unfreeze === 'function')) {\n        reject(new Error('Not found the function \"unfreeze\"'));\n      }\n      channel.unfreeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _unfreezeGroupChannel and _unfreezeOpenChannel\n           */\n        })\n        .catch(reject)\n    })\n  )\n)\n\n// 4. Message\nexport class UikitMessageHandler {\n  private _onPending: MessageHandler = noop;\n  private _onFailed: FailedMessageHandler = noop;\n  private _onSucceeded: MessageHandler = noop;\n\n  public triggerPending(message: SendableMessage): void {\n    this._onPending(message);\n  }\n  public triggerFailed(error: Error, message: SendableMessage): void {\n    this._onFailed(error, message.isResendable ? message : null);\n  }\n  public triggerSucceeded(message: SendableMessage): void {\n    this._onSucceeded(message);\n  }\n\n  public onPending(handler: MessageHandler): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onPending = handler;\n    }\n    return this;\n  }\n  public onFailed(handler: FailedMessageHandler): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onFailed = handler;\n    }\n    return this;\n  }\n  public onSucceeded(handler: MessageHandler): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onSucceeded = handler;\n    }\n    return this;\n  }\n}\n\n/**\n * const sendUserMessage = selectors.getSendUserMessage(state);\n * sendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: UserMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\n\nexport const getSendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: UserMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendUserMessage(params)\n      .onFailed((error, message) => handler.triggerFailed(error, message))\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_USER_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const sendFileMessage = selectors.getSendFileMessage(state);\n * sendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: FileMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\nexport const getSendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: FileMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendFileMessage(params)\n      .onFailed((error, message) => handler.triggerFailed(error, message))\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_FILE_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const updateUserMessage = selectors.getUpdateUserMessage(state);\n * updateUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  messageParams: UserMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, messageId: number, params: UserMessageUpdateParams): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.updateUserMessage(messageId, params)\n        .then((message) => {\n          pubSub.publish(\n            topics.UPDATE_USER_MESSAGE,\n            { message, channel, fromSelector: true },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n// TODO: We will provie this function in the future\n/**\n * const updateFileMessage = selectors.getUpdateFileMessage(state);\n * updateFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  params: FileMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\n// const getUpdateFileMessage = (state: SendBirdState) => (\n//   (channel: GroupChannel | OpenChannel, messageId: number, params: FileMessageUpdateParams) => (\n//     new Promise((resolve, reject) => {\n//       const pubSub = getPubSub(state);\n//       channel.updateFileMessage(messageId, params)\n//         .then((message) => {\n//           pubSub.publish(\n//             topics.UPDATE_USER_MESSAGE,\n//             { message, channel, fromSelector: true },\n//           );\n//           resolve(message);\n//         })\n//         .catch(reject);\n//     })\n//   )\n// );\n\n/**\n * const deleteMessage = selectors.getDeleteMessage(state);\n * deleteMessage(\n *  channel: GroupChannel | OpenChannel,\n *  message: SendableMessage,\n * )\n *  .then((deletedMessage) => {})\n *  .catch((error) => {})\n */\nexport const getDeleteMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): Promise<UserMessage | FileMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      const { messageId } = message;\n      channel.deleteMessage(message)\n        .then(() => {\n          pubSub.publish(\n            topics.DELETE_MESSAGE,\n            { messageId, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendUserMessage = selectors.getResendUserMessage(state);\n * resendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: UserMessage,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: UserMessage): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendUserMessage(failedMessage)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_USER_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendFileMessage = selectors.getResendFileMessage(state);\n * resendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: FileMessage,\n *  blob: Blob,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: FileMessage, blob: Blob): Promise<FileMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendFileMessage(failedMessage, blob)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_FILE_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\nconst sendbirdSelectors = {\n  getSdk,\n  getPubSub,\n  getConnect,\n  getDisconnect,\n  getUpdateUserInfo,\n  getCreateGroupChannel,\n  getCreateOpenChannel,\n  getGetGroupChannel,\n  getGetOpenChannel,\n  getLeaveGroupChannel,\n  getEnterOpenChannel,\n  getExitOpenChannel,\n  getFreezeChannel,\n  getUnfreezeChannel,\n  getSendUserMessage,\n  getSendFileMessage,\n  getUpdateUserMessage,\n  getDeleteMessage,\n  getResendUserMessage,\n  getResendFileMessage,\n};\n\nexport default sendbirdSelectors;\n"],"names":["getSdk","state","_a","stores","_b","sdkStore","sdk","getPubSub","config","pubSub","getConnect","userId","accessToken","Promise","resolve","reject","Error","connect","then","res","catch","err","getDisconnect","disconnect","getUpdateUserInfo","nickname","profileUrl","updateCurrentUserInfo","userParams","getCreateGroupChannel","params","groupChannel","createChannel","channel","publish","topics","getCreateOpenChannel","openChannel","getGetGroupChannel","channelUrl","getChannel","getGetOpenChannel","getLeaveGroupChannel","leave","getEnterOpenChannel","enter","getExitOpenChannel","exit","getFreezeChannel","freeze","getUnfreezeChannel","unfreeze","UikitMessageHandler","_onPending","noop","_onFailed","_onSucceeded","prototype","triggerPending","message","triggerFailed","error","isResendable","triggerSucceeded","onPending","handler","onFailed","onSucceeded","getSendUserMessage","sendUserMessage","getSendFileMessage","sendFileMessage","getUpdateUserMessage","messageId","updateUserMessage","fromSelector","getDeleteMessage","deleteMessage","getResendUserMessage","failedMessage","resendUserMessage","getResendFileMessage","blob","resendFileMessage","sendbirdSelectors"],"mappings":"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"}