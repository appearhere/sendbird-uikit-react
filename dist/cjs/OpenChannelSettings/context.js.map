{"version":3,"file":"context.js","sources":["../../../src/smart-components/OpenChannelSettings/context/OpenChannelSettingsProvider.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport { OpenChannel, OpenChannelHandler, OpenChannelUpdateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport { RenderUserProfileProps } from '../../../types';\nimport uuidv4 from '../../../utils/uuid';\n\nexport interface OpenChannelSettingsContextProps {\n  channelUrl: string;\n  children?: React.ReactElement;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n  disableUserProfile?: boolean;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n}\n\ninterface OpenChannelSettingsContextType {\n  channelUrl: string;\n  channel?: OpenChannel;\n  isChannelInitialized: boolean;\n  setChannel?: React.Dispatch<React.SetStateAction<OpenChannel>>;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n}\n\nconst OpenChannelSettingsContext = React.createContext<OpenChannelSettingsContextType | null>(undefined);\n\nconst OpenChannelSettingsProvider: React.FC<OpenChannelSettingsContextProps> = (props: OpenChannelSettingsContextProps) => {\n  const {\n    children,\n    channelUrl,\n    onCloseClick,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    onDeleteChannel,\n  } = props;\n\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const sdk = globalStore?.stores?.sdkStore?.sdk as SendbirdOpenChat;\n  const isSDKInitialized = globalStore?.stores?.sdkStore?.initialized;\n\n  const logger = globalStore?.config?.logger;\n  const currentUserId = sdk?.currentUser?.userId;\n\n  const [currentChannel, setChannel] = useState<OpenChannel | null>(null);\n  const [isChannelInitialized, setChannelInitialized] = useState(false);\n  useEffect(() => {\n    if (!channelUrl || !sdk.openChannel) {\n      setChannel(null);\n      return;\n    }\n\n    sdk.openChannel.getChannel(channelUrl)\n      .then((channel) => {\n        logger.info('open channel setting: fetched', channel);\n        // TODO: Add pending status\n        channel.enter()\n          .then(() => {\n            setChannel(channel);\n            logger.info('OpenChannelSettings | Succeeded to enter channel', channel?.url);\n            setChannelInitialized(true);\n          })\n          .catch((error) => {\n            setChannel(null);\n            logger.warning('OpenChannelSettings | Failed to enter channel', error);\n          });\n      })\n      .catch((error) => {\n        logger.error('open channel setting: error fetching', error);\n        setChannel(null);\n      });\n    return () => {\n      if (currentChannel && currentChannel.exit) {\n        currentChannel.exit()\n          .then(() => {\n            logger.info('OpenChannelSettings | Succeeded to exit channel', currentChannel?.url);\n          })\n          .catch((error) => {\n            logger.warning('OpenChannelSettings | Failed to exit channel', error);\n          });\n      }\n    }\n  }, [channelUrl, isSDKInitialized]);\n\n  useEffect(() => {\n    const channelHandlerId = uuidv4();\n    if (currentChannel !== null && sdk?.openChannel?.addOpenChannelHandler) {\n      const channelHandlerParams = new OpenChannelHandler({\n        onOperatorUpdated(channel) {\n          if (channel?.url === currentChannel?.url) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserMuted(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserUnmuted(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserBanned(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(null);\n          }\n        },\n        onUserUnbanned(channel, user) {\n          if (user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onChannelChanged(channel) {\n          if (channel?.url === currentChannel?.url) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onChannelDeleted(channelUrl) {\n          if (channelUrl === currentChannel?.url) {\n            setChannel(null);\n          }\n        },\n      });\n      sdk.openChannel.addOpenChannelHandler(channelHandlerId, channelHandlerParams);\n    }\n    return () => {\n      if (sdk?.openChannel?.removeOpenChannelHandler && channelHandlerId) {\n        logger.info('OpenChannelSettings | Removing channel handlers', channelHandlerId);\n        sdk.openChannel.removeOpenChannelHandler?.(channelHandlerId);\n      }\n    }\n  }, [channelUrl]);\n\n  return (\n    <OpenChannelSettingsContext.Provider value={{\n      channelUrl,\n      channel: currentChannel,\n      isChannelInitialized: isChannelInitialized,\n      setChannel,\n      onCloseClick,\n      onChannelModified,\n      onBeforeUpdateChannel,\n      onDeleteChannel,\n    }}>\n      <UserProfileProvider\n        isOpenChannel\n        renderUserProfile={props?.renderUserProfile}\n        disableUserProfile={props?.disableUserProfile}\n      >\n        {children}\n      </UserProfileProvider>\n    </OpenChannelSettingsContext.Provider>\n  );\n}\n\ntype useOpenChannelSettingsType = () => OpenChannelSettingsContextType;\nconst useOpenChannelSettingsContext: useOpenChannelSettingsType = () => React.useContext(OpenChannelSettingsContext);\n\nexport {\n  OpenChannelSettingsProvider,\n  useOpenChannelSettingsContext,\n};\n"],"names":["OpenChannelSettingsContext","React","createContext","undefined","OpenChannelSettingsProvider","props","children","channelUrl","onCloseClick","onChannelModified","onBeforeUpdateChannel","onDeleteChannel","globalStore","useSendbirdStateContext","sdk","_b","_a","stores","sdkStore","isSDKInitialized","_d","_c","initialized","logger","_e","config","currentUserId","_f","currentUser","userId","_g","useState","currentChannel","setChannel","_h","isChannelInitialized","setChannelInitialized","useEffect","openChannel","getChannel","then","channel","info","enter","url","catch","error","warning","exit","channelHandlerId","uuidv4","addOpenChannelHandler","channelHandlerParams","OpenChannelHandler","onOperatorUpdated","onUserMuted","user","onUserUnmuted","onUserBanned","onUserUnbanned","onChannelChanged","onChannelDeleted","removeOpenChannelHandler","call","UserProfileProvider","renderUserProfile","disableUserProfile","useOpenChannelSettingsContext","useContext"],"mappings":"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"}