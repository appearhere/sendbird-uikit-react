{"version":3,"file":"OpenchannelUserMessage.js","sources":["../../../src/ui/OpenchannelUserMessage/index.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport {\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\nimport { useMediaQueryContext } from '../../lib/MediaQueryContext';\nimport OpenChannelMobileMenu from '../OpenChannelMobileMenu';\nimport useLongPress from '../../hooks/useLongPress';\nimport { isEditedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isOperator?: boolean;\n  userId: string;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: UserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n}\n\nexport default function OpenchannelUserMessage({\n  className,\n  message,\n  isOperator,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext<UserProfileContext>(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const mobileMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n  const [contextMenu, setContextMenu] = useState(false);\n\n  // consts\n  const status = message?.sendingStatus;\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  const onLongPress = useLongPress({\n    onLongPress: () => {\n      setContextMenu(true);\n    }\n  });\n\n  const { isMobile } = useMediaQueryContext();\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-user-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: '0px', paddingBottom: '0px' }}\n                >\n                  {\n                    renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isOperator ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message?.createdAt && (\n                    format(message?.createdAt, 'p', {\n                      locale: dateLocale,\n                    })\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div\n          {...(isMobile ? { ...onLongPress } : {})}\n          className=\"sendbird-openchannel-user-message__right__bottom\" ref={mobileMenuRef}>\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message?.message}\n            {isEditedMessage(message) && (\n              <Label\n                key={uuidv4()}\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_2}\n                calssName=\"sendbird-openchannel-user-message-word\"\n              >\n                {` ${stringSet.MESSAGE_EDITED} `}\n              </Label>\n            )}\n          </Label>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-user-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    fillColor={IconColors.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        !isMobile && (\n          <div\n            className=\"sendbird-openchannel-user-message__context-menu\"\n            ref={contextMenuRef}\n            style={contextStyle}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message: message, userId: userId, status: status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={() => {\n                      toggleDropdown();\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.MORE}\n                      fillColor={IconColors.CONTENT_INVERSE}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineCopy({ message: message, userId: userId, status: status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                        onClick={() => {\n                          copyToClipboard(message.message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineEdit({ message: message, userId: userId, status: status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineResend({ message: message, userId: userId, status: status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message: message, userId: userId, status: status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          </div>\n\n        )\n      }\n      {\n        contextMenu && (\n          <OpenChannelMobileMenu\n            message={message}\n            parentRef={mobileMenuRef}\n            hideMenu={() => {\n              setContextMenu(false);\n            }}\n            showRemove={() => {\n              setContextMenu(false);\n              showRemove(true);\n            }}\n            showEdit={() => {\n              setContextMenu(false);\n              showEdit(true);\n            }}\n            copyToClipboard={() => {\n              setContextMenu(false);\n              copyToClipboard(message?.message);\n            }}\n            resendMessage={() => {\n              setContextMenu(false);\n              resendMessage(message);\n            }}\n          />\n        )\n      }\n    </div>\n  );\n}\n"],"names":["OpenchannelUserMessage","_a","className","message","isOperator","userId","resendMessage","disabled","showEdit","showRemove","chainTop","messageType","_b","useLocalization","stringSet","dateLocale","_c","useContext","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","mobileMenuRef","_d","useState","contextStyle","setContextStyle","_e","contextMenu","setContextMenu","status","sendingStatus","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","useEffect","current","clientHeight","top","window","innerWidth","onLongPress","useLongPress","isMobile","useMediaQueryContext","React","__spreadArray","Array","isArray","join","ContextMenu","toggleDropdown","Avatar","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","user","close","UserProfile","Label","LabelTypography","CAPTION_2","LabelColors","SECONDARY_3","ONBACKGROUND_2","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","__assign","BODY_1","ONBACKGROUND_1","isEditedMessage","uuidv4","concat","MESSAGE_EDITED","Loader","Icon","IconTypes","SPINNER","IconColors","PRIMARY","ERROR","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","isFineCopy","MenuItem","copyToClipboard","CONTEXT_MENU_DROPDOWN__COPY","isFineEdit","CONTEXT_MENU_DROPDOWN__EDIT","isFineResend","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelMobileMenu"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDwB,SAAAA,sBAAA,CAAuBC,EAAvB,EAUhB;MATNC,SAAS,GAAAD,EAAA,CAAAC;MACTC,OAAO,GAAAF,EAAA,CAAAE;MACPC,UAAU,GAAAH,EAAA,CAAAG;MACVC,MAAM,GAAAJ,EAAA,CAAAI;MACNC,aAAa;MACbC,QAAQ,GAAAN,EAAA,CAAAM;MACRC,QAAQ,GAAAP,EAAA,CAAAO;MACRC,UAAU,GAAAR,EAAA,CAAAQ;MACVC,QAAQ,GAAAT,EAAA,CAAAS;;EAER,IAAI,CAACP,OAAD,IAAYA,OAAO,CAACQ,WAAR,KAAwB,MAAxC,EAAgD;AAC9C,IAAA,OAAO,IAAP,CAAA;AACD,GAHK;;;EAMA,IAAAC,EAAA,GAA4BC,mCAAe,EAA3C;AAAA,MAAEC,SAAS,GAAAF,EAAA,CAAAE,SAAX;AAAA,MAAaC,UAAU,GAAAH,EAAA,CAAAG,UAAvB,CAAA;;AACA,EAAA,IAAAC,EAAA,GAA4CC,gBAAU,CAAqBC,qCAArB,CAAtD;AAAA,MAAEC,kBAAkB,GAAAH,EAAA,CAAAG,kBAApB;AAAA,MAAsBC,iBAAiB,GAAAJ,EAAA,CAAAI,iBAAvC,CAAA;;AACN,EAAA,IAAMC,UAAU,GAAGC,YAAM,CAAC,IAAD,CAAzB,CAAA;AACA,EAAA,IAAMC,SAAS,GAAGD,YAAM,CAAC,IAAD,CAAxB,CAAA;AACA,EAAA,IAAME,cAAc,GAAGF,YAAM,CAAC,IAAD,CAA7B,CAAA;AACA,EAAA,IAAMG,aAAa,GAAGH,YAAM,CAAC,IAAD,CAA5B,CAAA;;AACM,EAAA,IAAAI,EAAA,GAAkCC,cAAQ,CAAC,EAAD,CAA1C;AAAA,MAACC,YAAY,GAAAF,EAAA,CAAA,CAAA,CAAb;AAAA,MAAeG,eAAe,GAAAH,EAAA,CAAA,CAAA,CAA9B,CAAA;;AACA,EAAA,IAAAI,EAAA,GAAgCH,cAAQ,CAAC,KAAD,CAAxC;AAAA,MAACI,WAAW,GAAAD,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAcE,cAAc,GAAAF,EAAA,CAAA,CAAA,CAA5B,CAbA;;;AAgBN,EAAA,IAAMG,MAAM,GAAG9B,OAAO,KAAA,IAAP,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAE+B,aAAxB,CAAA;AACA,EAAA,IAAMC,SAAS,GAAGC,oBAAc,CAACH,MAAD,CAAhC,CAAA;AACA,EAAA,IAAMI,QAAQ,GAAGC,mBAAa,CAACL,MAAD,CAA9B,CAAA;AACA,EAAA,IAAMM,MAAM,GAAGC,0BAAoB,CAACrC,OAAD,CAAnC,CAnBM;;AAsBNsC,EAAAA,eAAS,CAAC,YAAA;;;AACR,IAAA,IAAI,CAAA,CAAAxC,EAAA,GAAAoB,UAAU,KAAA,IAAV,IAAAA,UAAU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAAA,UAAU,CAAEqB,OAAZ,MAAmB,IAAnB,IAAmBzC,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmBA,EAAA,CAAE0C,YAArB,IAAoC,EAAxC,EAA4C;AAC1Cd,MAAAA,eAAe,CAAC;AAAEe,QAAAA,GAAG,EAAE,MAAA;AAAP,OAAD,CAAf,CAAA;AACD,KAFD,MAEO;AACLf,MAAAA,eAAe,CAAC;AAAEe,QAAAA,GAAG,EAAE,KAAA;AAAP,OAAD,CAAf,CAAA;AACD,KAAA;AACF,GANQ,EAMN,CAACC,MAAM,CAACC,UAAR,CANM,CAAT,CAAA;EAQA,IAAMC,WAAW,GAAGC,yBAAY,CAAC;AAC/BD,IAAAA,WAAW,EAAE,YAAA;MACXf,cAAc,CAAC,IAAD,CAAd,CAAA;AACD,KAAA;AAH8B,GAAD,CAAhC,CAAA;AAMQ,EAAA,IAAAiB,QAAQ,GAAKC,sCAAoB,EAAA,SAAjC,CAAA;EACR,oBACEC,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAEC,uBAAA,CAAAA,uBAAA,CAAA,EAAA,EACLC,KAAK,CAACC,OAAN,CAAcpD,SAAd,CAAA,GAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,EAC8C,IAD9C,CAAA,EAC8C,CACvD,mCADuD,CAD9C,OAAA,CAAA,CAGTqD,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,GAAG,EAAElC,UAAAA;GAEL,eAAA8B,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,yCAAA;AAAf,GAAA,EAEI,CAACzC,QAAD,iBACEyC,yBAAA,CAAA,aAAA,CAACK,yBAAD,EAAA;IACE,WAAW,EAAE,UAACC,cAAD,EAAoB;AAAA,MAAA,oBAC/BN,wCAACO,oBAAD,EAAA;AACE,QAAA,SAAS,EAAC,iDADZ;AAEE,QAAA,GAAG,EAAEnB,MAAM,CAACoB,UAAP,IAAqB,EAF5B;AAGE,QAAA,GAAG,EAAEpC,SAHP;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,MAAM,EAAC,MALT;AAME,QAAA,OAAO,EAAE,YAAA;UACP,IAAI,CAACJ,kBAAL,EAAyB;YACvBsC,cAAc,EAAA,CAAA;AACf,WAAA;AACF,SAAA;OAX4B,CAAA,CAAA;KADnC;IAeE,SAAS,EAAE,UAACG,aAAD,EAAmB;AAAA,MAAA,oBAC5BT,wCAACU,wBAAD,EAAA;AACE,QAAA,SAAS,EAAEtC,SADb;AAEE,QAAA,gBAAgB,EAAEA,SAFpB;AAGE,QAAA,aAAa,EAAEqC,aAHjB;AAIE,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,aAAa,EAAE,KAAA;AAApC,SAAA;OAGL3C,EAAAA,iBAAiB,GAEbA,iBAAiB,CAAC;AAChB4C,QAAAA,IAAI,EAAEzB,MADU;AAEhB0B,QAAAA,KAAK,EAAEL,aAAAA;OAFQ,CAFJ,gBAQbT,yBAAA,CAAA,aAAA,CAACe,cAAD,EAAA;AACE,QAAA,IAAI,EAAE3B,MADR;AAEE,QAAA,SAAS,EAAEqB,aAFb;QAGE,gBAAgB,EAAA,IAAA;AAHlB,OAAA,CAfR,CAD4B,CAAA;AAwB7B,KAAA;AAvCH,GAAA,CAHN,CAPF,eAsDET,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,0CAAA;GAEX,EAAA,CAACzC,QAAD,iBACEyC,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,+CAAA;AAAf,GAAA,eACEA,wCAACgB,cAAD,EAAA;AACE,IAAA,SAAS,EAAC,4DADZ;IAEE,IAAI,EAAEC,wBAAe,CAACC,SAFxB;IAGE,KAAK,EAAEjE,UAAU,GAAGkE,oBAAW,CAACC,WAAf,GAA6BD,oBAAW,CAACE,cAAAA;AAH5D,GAAA,EAMIjC,MAAM,KACJA,MAAM,CAACkC,UAAP,IACGlC,MAAM,CAACmC,QADV,IAEGnC,MAAM,CAAClC,MAHN,CANV,CADF,eAcE8C,wCAACgB,cAAD,EAAA;AACE,IAAA,SAAS,EAAC,wDADZ;IAEE,IAAI,EAAEC,wBAAe,CAACO,SAFxB;IAGE,KAAK,EAAEL,oBAAW,CAACM,cAAAA;AAHrB,GAAA,EAMI,CAAAzE,OAAO,KAAP,IAAA,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE0E,SAAT,KACEC,cAAM,CAAC3E,OAAO,SAAP,IAAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAAA,OAAO,CAAE0E,SAAV,EAAqB,GAArB,EAA0B;AAC9BE,IAAAA,MAAM,EAAEhE,UAAAA;AADsB,GAA1B,CAPZ,CAdF,CAHN,eAiCEoC,sFACOF,QAAQ,GAAE+B,kBAAA,CAAA,EAAA,EAAMjC,WAAN,CAAF,GAAwB,EADvC,EAAA;AAEE,IAAA,SAAS,EAAC,kDAFZ;AAE+D,IAAA,GAAG,EAAEtB,aAAAA;AAFpE,GAAA,CAAA,eAGE0B,wCAACgB,cAAD,EAAA;AACE,IAAA,SAAS,EAAC,2DADZ;IAEE,IAAI,EAAEC,wBAAe,CAACa,MAFxB;IAGE,KAAK,EAAEX,oBAAW,CAACY,cAAAA;GAElB/E,EAAAA,OAAO,KAAP,IAAA,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEA,OALZ,EAMGgF,uBAAe,CAAChF,OAAD,CAAf,iBACCgD,yBAAA,CAAA,aAAA,CAACgB,cAAD,EAAA;IACE,GAAG,EAAEiB,WAAM,EADb;IAEE,IAAI,EAAEhB,wBAAe,CAACa,MAFxB;IAGE,KAAK,EAAEX,oBAAW,CAACE,cAHrB;AAIE,IAAA,SAAS,EAAC,wCAAA;AAJZ,GAAA,EAMG,IAAIa,MAAJ,CAAIvE,SAAS,CAACwE,cAAd,KAAA,CANH,CAPJ,CAHF,CAjCF,EAuDI,CAACnD,SAAS,IAAIE,QAAd,kBACEc,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gDAAA;GAEXhB,EAAAA,SAAS,iBACPgB,yBAAA,CAAA,aAAA,CAACoC,SAAD,EAAA;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAAA;AAFT,GAAA,eAIEpC,wCAACqC,kBAAD,EAAA;AACE,IAAA,SAAS,EAAC,yDADZ;IAEE,IAAI,EAAEC,iBAAS,CAACC,OAFlB;IAGE,SAAS,EAAEC,kBAAU,CAACC,OAHxB;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC,MAAA;AALT,GAAA,CAJF,CAHN,EAkBIvD,QAAQ,iBACNc,wCAACqC,kBAAD,EAAA;AACE,IAAA,SAAS,EAAC,wDADZ;IAEE,IAAI,EAAEC,iBAAS,CAACI,KAFlB;IAGE,SAAS,EAAEF,kBAAU,CAACE,KAHxB;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC,MAAA;AALT,GAAA,CAnBN,CAxDN,CAtDF,EA+II,CAAC5C,QAAD,iBACEE,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,GAAG,EAAE3B,cAFP;AAGE,IAAA,KAAK,EAAEI,YAAAA;AAHT,GAAA,eAKEuB,wCAACK,yBAAD,EAAA;IACE,WAAW,EAAE,UAACC,cAAD;AAAoB,MAAA,OAC/BqC,qBAAe,CAAC;AAAE3F,QAAAA,OAAO,EAAEA,OAAX;AAAoBE,QAAAA,MAAM,EAAEA,MAA5B;AAAoC4B,QAAAA,MAAM,EAAEA,MAAAA;OAA7C,CAAf,iBACEkB,yBAAA,CAAA,aAAA,CAAC4C,aAAD,EAAA;AACE,QAAA,SAAS,EAAC,uDADZ;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,YAAA;UACPtC,cAAc,EAAA,CAAA;AACf,SAAA;AANH,OAAA,eAQEN,wCAACqC,kBAAD,EAAA;QACE,IAAI,EAAEC,iBAAS,CAACO,IADlB;QAEE,SAAS,EAAEL,kBAAU,CAACM,eAFxB;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAAA;AAJT,OAAA,CARF,CAF6B,CAAA;KADnC;IAoBE,SAAS,EAAE,UAACrC,aAAD;AAAmB,MAAA,oBAC5BT,wCAACU,wBAAD,EAAA;AACE,QAAA,SAAS,EAAErC,cADb;AAEE,QAAA,gBAAgB,EAAEA,cAFpB;AAGE,QAAA,aAAa,EAAEoC,aAHjB;QAIE,QAAQ,EAAA,IAAA;AAJV,OAAA,EAOIsC,gBAAU,CAAC;AAAE/F,QAAAA,OAAO,EAAEA,OAAX;AAAoBE,QAAAA,MAAM,EAAEA,MAA5B;AAAoC4B,QAAAA,MAAM,EAAEA,MAAAA;OAA7C,CAAV,iBACEkB,yBAAA,CAAA,aAAA,CAACgD,uBAAD,EAAA;AACE,QAAA,SAAS,EAAC,uDADZ;AAEE,QAAA,OAAO,EAAE,YAAA;AACPC,UAAAA,qBAAe,CAACjG,OAAO,CAACA,OAAT,CAAf,CAAA;UACAyD,aAAa,EAAA,CAAA;AACd,SAAA;AALH,OAAA,EAOG9C,SAAS,CAACuF,2BAPb,CARN,EAoBIC,gBAAU,CAAC;AAAEnG,QAAAA,OAAO,EAAEA,OAAX;AAAoBE,QAAAA,MAAM,EAAEA,MAA5B;AAAoC4B,QAAAA,MAAM,EAAEA,MAAAA;OAA7C,CAAV,iBACEkB,yBAAA,CAAA,aAAA,CAACgD,uBAAD,EAAA;AACE,QAAA,SAAS,EAAC,uDADZ;AAEE,QAAA,OAAO,EAAE,YAAA;AACP,UAAA,IAAI5F,QAAJ,EAAc;AACZ,YAAA,OAAA;AACD,WAAA;;UACDC,QAAQ,CAAC,IAAD,CAAR,CAAA;UACAoD,aAAa,EAAA,CAAA;AACd,SAAA;AARH,OAAA,EAUG9C,SAAS,CAACyF,2BAVb,CArBN,EAoCIC,kBAAY,CAAC;AAAErG,QAAAA,OAAO,EAAEA,OAAX;AAAoBE,QAAAA,MAAM,EAAEA,MAA5B;AAAoC4B,QAAAA,MAAM,EAAEA,MAAAA;OAA7C,CAAZ,iBACEkB,yBAAA,CAAA,aAAA,CAACgD,uBAAD,EAAA;AACE,QAAA,SAAS,EAAC,yDADZ;AAEE,QAAA,OAAO,EAAE,YAAA;UACP7F,aAAa,CAACH,OAAD,CAAb,CAAA;UACAyD,aAAa,EAAA,CAAA;AACd,SAAA;AALH,OAAA,EAOG9C,SAAS,CAAC2F,6BAPb,CArCN,EAiDIC,kBAAY,CAAC;AAAEvG,QAAAA,OAAO,EAAEA,OAAX;AAAoBE,QAAAA,MAAM,EAAEA,MAA5B;AAAoC4B,QAAAA,MAAM,EAAEA,MAAAA;OAA7C,CAAZ,iBACEkB,yBAAA,CAAA,aAAA,CAACgD,uBAAD,EAAA;AACE,QAAA,SAAS,EAAC,yDADZ;AAEE,QAAA,OAAO,EAAE,YAAA;AACP,UAAA,IAAI5F,QAAJ,EAAc;AACZ,YAAA,OAAA;AACD,WAAA;;UACDE,UAAU,CAAC,IAAD,CAAV,CAAA;UACAmD,aAAa,EAAA,CAAA;AACd,SAAA;AARH,OAAA,EAUG9C,SAAS,CAAC6F,6BAVb,CAlDN,CAD4B,CAAA;AAkE7B,KAAA;AAtFH,GAAA,CALF,CAhJN,EAkPI5E,WAAW,iBACToB,wCAACyD,2BAAD,EAAA;AACE,IAAA,OAAO,EAAEzG,OADX;AAEE,IAAA,SAAS,EAAEsB,aAFb;AAGE,IAAA,QAAQ,EAAE,YAAA;MACRO,cAAc,CAAC,KAAD,CAAd,CAAA;KAJJ;AAME,IAAA,UAAU,EAAE,YAAA;MACVA,cAAc,CAAC,KAAD,CAAd,CAAA;MACAvB,UAAU,CAAC,IAAD,CAAV,CAAA;KARJ;AAUE,IAAA,QAAQ,EAAE,YAAA;MACRuB,cAAc,CAAC,KAAD,CAAd,CAAA;MACAxB,QAAQ,CAAC,IAAD,CAAR,CAAA;KAZJ;AAcE,IAAA,eAAe,EAAE,YAAA;MACfwB,cAAc,CAAC,KAAD,CAAd,CAAA;AACAoE,MAAAA,qBAAe,CAACjG,OAAO,KAAP,IAAA,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEA,OAAV,CAAf,CAAA;KAhBJ;AAkBE,IAAA,aAAa,EAAE,YAAA;MACb6B,cAAc,CAAC,KAAD,CAAd,CAAA;MACA1B,aAAa,CAACH,OAAD,CAAb,CAAA;AACD,KAAA;AArBH,GAAA,CAnPN,CADF,CAAA;AA+QD;;;;"}