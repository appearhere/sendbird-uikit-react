{"version":3,"file":"ChannelList.js","sources":["../../src/smart-components/ChannelList/dux/actionTypes.js","../../src/smart-components/ChannelList/dux/initialState.js","../../src/smart-components/ChannelList/dux/reducers.js","../../src/ui/ChannelPreview/utils.js","../../src/ui/ChannelPreview/index.jsx","../../src/ui/ChannelHeader/index.jsx","../../src/ui/EditUserProfile/index.tsx","../../src/smart-components/ChannelList/components/AddChannel.jsx","../../src/smart-components/ChannelList/components/ChannelPreviewAction.jsx","../../src/smart-components/ChannelList/components/Placeholder.jsx","../../src/smart-components/ChannelList/utils.js","../../src/smart-components/ChannelList/index.jsx"],"sourcesContent":["export const RESET_CHANNEL_LIST = 'RESET_CHANNEL_LIST';\nexport const CREATE_CHANNEL = 'CREATE_CHANNEL';\nexport const UNLOAD_CHANNELS = 'UNLOAD_CHANNELS';\nexport const SET_CHANNEL_LOADING = 'SET_CHANNEL_LOADING';\nexport const SET_AUTO_SELECT_CHANNEL_ITEM = 'SET_AUTO_SELECT_CHANNEL_ITEM';\nexport const LEAVE_CHANNEL_SUCCESS = 'LEAVE_CHANNEL_SUCCESS';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SHOW_CHANNEL_SETTINGS = 'SHOW_CHANNEL_SETTINGS';\nexport const HIDE_CHANNEL_SETTINGS = 'HIDE_CHANNEL_SETTINGS';\n\nexport const FETCH_CHANNELS_START = 'FETCH_CHANNELS_START';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_CHANNELS_FAILURE = 'FETCH_CHANNELS_FAILURE';\n\nexport const INIT_CHANNELS_START = 'INIT_CHANNELS_START';\nexport const INIT_CHANNELS_SUCCESS = 'INIT_CHANNELS_SUCCESS';\nexport const INIT_CHANNELS_FAILURE = 'INIT_CHANNELS_FAILURE';\n\nexport const INVITE_MEMBERS_SUCESS = 'INVITE_MEMBERS_SUCESS';\n\nexport const ON_USER_JOINED = 'ON_USER_JOINED';\nexport const ON_CHANNEL_DELETED = 'ON_CHANNEL_DELETED';\nexport const ON_LAST_MESSAGE_UPDATED = 'ON_LAST_MESSAGE_UPDATED';\nexport const ON_USER_LEFT = 'ON_USER_LEFT';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_CHANNEL_ARCHIVED = 'ON_CHANNEL_ARCHIVED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\n\nexport const ON_READ_RECEIPT_UPDATED = 'ON_READ_RECEIPT_UPDATED';\nexport const ON_DELIVERY_RECEIPT_UPDATED = 'ON_DELIVERY_RECEIPT_UPDATED';\n\nexport const CHANNEL_REPLACED_TO_TOP = 'CHANNEL_REPLACED_TO_TOP';\nexport const CHANNEL_LIST_PARAMS_UPDATED = 'CHANNEL_LIST_PARAMS_UPDATED';\n","export default {\n  // we might not need this initialized state -> should remove\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n  channelListQuery: null,\n  currentUserId: '',\n  disableAutoSelect: false,\n};\n","import { filterChannelListParams, getChannelsWithUpsertedChannel } from '../../../utils';\nimport * as actions from './actionTypes';\nimport initialState from './initialState';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.INIT_CHANNELS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.RESET_CHANNEL_LIST:\n      return initialState;\n    case actions.INIT_CHANNELS_SUCCESS: {\n      const nextChannel = (action.payload && action.payload.length && action.payload.length > 0)\n        ? action.payload[0].url\n        : null;\n      return {\n        ...state,\n        initialized: true,\n        loading: false,\n        allChannels: action.payload,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n      };\n    }\n    case actions.FETCH_CHANNELS_SUCCESS: {\n      const currentChannels = state.allChannels.map((c) => c.url);\n      const filteredChannels = action.payload.filter(\n        ({ url }) => !(currentChannels.find((c) => c === url)),\n      );\n      return {\n        ...state,\n        allChannels: [\n          ...state.allChannels,\n          ...filteredChannels,\n        ],\n      };\n    }\n    case actions.CREATE_CHANNEL: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        return {\n          ...state,\n          currentChannel: channel.url,\n        };\n      }\n      return {\n        ...state,\n        currentChannel: channel.url,\n        allChannels: [channel, ...state.allChannels.filter((ch) => ch.url !== channel.url)],\n      };\n    }\n    case actions.ON_CHANNEL_ARCHIVED: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n      }\n      const nextChannel = (channel.url === state.currentChannel)\n        ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n      };\n    }\n    case actions.LEAVE_CHANNEL_SUCCESS:\n    case actions.ON_CHANNEL_DELETED: {\n      const channelUrl = action.payload;\n      const nextChannel = (channelUrl === state.currentChannel)\n        ? state.allChannels[0].url\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: state.allChannels.filter(({ url }) => url !== channelUrl),\n      };\n    }\n    case actions.ON_USER_LEFT: {\n      const { channel, isMe } = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          const filteredChannels = getChannelsWithUpsertedChannel(state.allChannels, channel);\n          const nextChannel = (isMe && (channel.url === state.currentChannel))\n            ? filteredChannels[0].url\n            : state.currentChannel;\n          return {\n            ...state,\n            currentChannel: state.disableAutoSelect ? null : nextChannel,\n            allChannels: filteredChannels,\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[0].url\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      const filteredChannels = state.allChannels.filter((c) => !(c.url === channel.url && isMe));\n      const nextChannel = (isMe && (channel.url === state.currentChannel))\n        ? filteredChannels[0].url\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: filteredChannels,\n      };\n    }\n    case actions.ON_USER_JOINED:\n    case actions.ON_CHANNEL_CHANGED:\n    case actions.ON_READ_RECEIPT_UPDATED:\n    case actions.ON_DELIVERY_RECEIPT_UPDATED: {\n      const { allChannels = [] } = state;\n      const channel = action.payload;\n      const { unreadMessageCount } = channel;\n      if (!channel.lastMessage) return state;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(allChannels, channel),\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      // if its only an unread message count change, dont push to top\n      if (unreadMessageCount === 0) {\n        const currentChannel = allChannels.find(({ url }) => url === channel.url);\n        const currentUnreadCount = currentChannel && currentChannel.unreadMessageCount;\n        if (currentUnreadCount === 0) {\n          return {\n            ...state,\n            allChannels: state.allChannels.map((ch) => (ch.url === channel.url ? channel : ch)),\n          };\n        }\n      }\n      return {\n        ...state,\n        allChannels: [\n          channel,\n          ...state.allChannels.filter(({ url }) => url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n    case actions.SHOW_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: true,\n      };\n    case actions.HIDE_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: false,\n      };\n    case actions.ON_LAST_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => (\n          channel.url === action.payload.url ? action.payload : channel)),\n      };\n    case actions.ON_CHANNEL_FROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = true;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.ON_CHANNEL_UNFROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = false;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.CHANNEL_REPLACED_TO_TOP: {\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter((channel) => channel.url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.CHANNEL_LIST_PARAMS_UPDATED:\n      return {\n        ...state,\n        currentUserId: action.payload.currentUserId,\n        channelListQuery: action.payload.channelListQuery,\n      };\n    case actions.SET_AUTO_SELECT_CHANNEL_ITEM:\n      return {\n        ...state,\n        disableAutoSelect: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import isToday from 'date-fns/isToday';\n\nimport format from 'date-fns/format';\nimport formatRelative from 'date-fns/formatRelative';\nimport isYesterday from 'date-fns/isYesterday';\n\nimport { truncateString } from '../../utils';\nimport { LabelStringSet } from '../Label';\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n\nexport const getLastMessageCreatedAt = (channel, locale) => {\n  const createdAt = channel?.lastMessage?.createdAt;\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return formatRelative(createdAt, new Date(), optionalParam);\n  }\n  return format(createdAt, 'MMM dd', optionalParam);\n};\n\nexport const getTotalMembers = (channel) => (\n  channel && channel.memberCount\n    ? channel.memberCount\n    : 0\n);\n\nconst getPrettyLastMessage = (message = {}) => {\n  const MAXLEN = 30;\n  const { messageType, name } = message;\n  if (messageType === 'file') {\n    return truncateString(name, MAXLEN);\n  }\n  return message.message;\n};\n\nexport const getLastMessage = (channel) => (\n  channel && channel.lastMessage\n    ? getPrettyLastMessage(channel.lastMessage)\n    : ''\n);\n\nexport const getChannelUnreadMessageCount = (channel) => (\n  (channel && channel.unreadMessageCount)\n    ? channel.unreadMessageCount\n    : 0\n);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ChannelAvatar from '../ChannelAvatar/index';\nimport Badge from '../Badge';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport * as utils from './utils';\n\nexport default function ChannelPreview({\n  channel,\n  currentUser,\n  isActive,\n  ChannelAction,\n  theme,\n  onClick,\n  tabIndex,\n}) {\n  const {\n    userId,\n  } = currentUser;\n  const { isBroadcast, isFrozen } = channel;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        'sendbird-channel-preview',\n        isActive ? 'sendbird-channel-preview--active' : '',\n      ].join(' ')}\n      role=\"link\"\n      onClick={onClick}\n      onKeyPress={onClick}\n      tabIndex={tabIndex}\n    >\n      <div\n        className=\"sendbird-channel-preview__avatar\"\n      >\n        <ChannelAvatar\n          channel={channel}\n          userId={userId}\n          theme={theme}\n        />\n      </div>\n      <div className=\"sendbird-channel-preview__content\">\n        <div className=\"sendbird-channel-preview__content__upper\">\n          <div className=\"sendbird-channel-preview__content__upper__header\">\n            {\n              isBroadcast\n              && (\n                <div className=\"sendbird-channel-preview__content__upper__header__broadcast-icon\">\n                  <Icon\n                    type={IconTypes.BROADCAST}\n                    fillColor={IconColors.SECONDARY}\n                    height=\"16px\"\n                    width=\"16px\"\n                  />\n                </div>\n              )\n            }\n            <Label\n              className=\"sendbird-channel-preview__content__upper__header__channel-name\"\n              type={LabelTypography.SUBTITLE_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {utils.getChannelTitle(channel, userId, stringSet)}\n            </Label>\n            <Label\n              className=\"sendbird-channel-preview__content__upper__header__total-members\"\n              type={LabelTypography.CAPTION_2}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {utils.getTotalMembers(channel)}\n            </Label>\n            {\n              isFrozen\n              && (\n                <div title=\"Frozen\" className=\"sendbird-channel-preview__content__upper__header__frozen-icon\">\n                  <Icon\n                    type={IconTypes.FREEZE}\n                    fillColor={IconColors.PRIMARY}\n                    height={12}\n                    width={12}\n                  />\n                </div>\n              )\n            }\n          </div>\n          <Label\n            className=\"sendbird-channel-preview__content__upper__last-message-at\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {utils.getLastMessageCreatedAt(channel, dateLocale)}\n          </Label>\n        </div>\n        <div className=\"sendbird-channel-preview__content__lower\">\n          <Label\n            className=\"sendbird-channel-preview__content__lower__last-message\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {utils.getLastMessage(channel)}\n          </Label>\n          <div className=\"sendbird-channel-preview__content__lower__unread-message-count\">\n            {\n              utils.getChannelUnreadMessageCount(channel) // return number\n                ? <Badge count={utils.getChannelUnreadMessageCount(channel)} />\n                : null\n            }\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"sendbird-channel-preview__action\"\n      >\n        {ChannelAction}\n      </div>\n    </div>\n  );\n}\n\nChannelPreview.propTypes = {\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n    isBroadcast: PropTypes.bool,\n    isFrozen: PropTypes.bool,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  isActive: PropTypes.bool,\n  ChannelAction: PropTypes.element.isRequired,\n  theme: PropTypes.string,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n};\n\nChannelPreview.defaultProps = {\n  channel: {},\n  currentUser: {},\n  isActive: false,\n  theme: 'light',\n  onClick: () => { },\n  tabIndex: 0,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport IconButton from '../IconButton';\n\nimport './index.scss';\nimport Avatar from '../Avatar/index';\n\nexport default function ChannelHeader({\n  user,\n  renderHeader,\n  iconButton,\n  onEdit,\n  allowProfileEdit,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        'sendbird-channel-header',\n        allowProfileEdit ? 'sendbird-channel-header--allow-edit' : '',\n      ].join(' ')}\n    >\n      {\n        renderHeader\n          ? renderHeader()\n          : (\n            <div\n              className=\"sendbird-channel-header__title\"\n              role=\"button\"\n              onClick={onEdit}\n              onKeyDown={onEdit}\n              tabIndex=\"0\"\n            >\n              <div className=\"sendbird-channel-header__title__left\">\n                <Avatar\n                  width=\"32px\"\n                  height=\"32px\"\n                  src={user.profileUrl}\n                  alt={user.nickname}\n                />\n              </div>\n              <div className=\"sendbird-channel-header__title__right\">\n                <Label\n                  className=\"sendbird-channel-header__title__right__name\"\n                  type={LabelTypography.SUBTITLE_2}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {user.nickname || stringSet.NO_NAME}\n                </Label>\n                <Label\n                  className=\"sendbird-channel-header__title__right__user-id\"\n                  type={LabelTypography.BODY_2}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {user.userId}\n                </Label>\n              </div>\n            </div>\n          )\n      }\n      <div className=\"sendbird-channel-header__right-icon\">\n        {iconButton}\n      </div>\n    </div>\n  );\n}\n\nChannelHeader.propTypes = {\n  user: PropTypes.shape({\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n    userId: PropTypes.string,\n  }),\n  renderHeader: PropTypes.func,\n  iconButton: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.instanceOf(IconButton),\n  ]),\n  onEdit: PropTypes.func.isRequired,\n  allowProfileEdit: PropTypes.bool,\n};\n\nChannelHeader.defaultProps = {\n  user: {},\n  renderHeader: null,\n  iconButton: null,\n  allowProfileEdit: false,\n};\n","import React, {\n  ReactElement,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport './index.scss';\n\nimport Modal from '../Modal';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Input, { InputLabel } from '../Input';\nimport Avatar from '../Avatar';\nimport Icon, { IconTypes } from '../Icon';\nimport { Type as ButtonType } from '../Button/type';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport TextButton from '../TextButton';\nimport { SendbirdTypes } from '../../types';\nimport { noop } from '../../utils/utils';\n\ninterface Props {\n  user: SendbirdTypes['User'];\n  theme?: string;\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  changeTheme?(theme: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nexport function EditUserProfile({\n  user,\n  theme = 'light',\n  onCancel,\n  onSubmit,\n  changeTheme = noop,\n  onThemeChange = null,\n}: Props): ReactElement {\n  const hiddenInputRef = useRef(null);\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n\n  return (\n    <Modal\n      titleText={stringSet.EDIT_PROFILE__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      type={ButtonType.PRIMARY}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (user.nickname !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(inputRef.current.value, newFile);\n        onCancel();\n      }}\n    >\n      <form\n        className=\"sendbird-edit-user-profile\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <section className=\"sendbird-edit-user-profile__img\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__IMAGE_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__img__avatar\">\n            <Avatar\n              width=\"80px\"\n              height=\"80px\"\n              src={currentImg || user.profileUrl}\n            />\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"sendbird-edit-user-profile__img__avatar-button\"\n            notUnderline\n            onClick={() => hiddenInputRef.current.click()}\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.EDIT_PROFILE__IMAGE_UPLOAD}\n            </Label>\n          </TextButton>\n        </section>\n        <section className=\"sendbird-edit-user-profile__name\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__NICKNAME_LABEL}\n          </InputLabel>\n          <Input\n            required={user.nickname !== ''}\n            name=\"sendbird-edit-user-profile__name__input\"\n            ref={inputRef}\n            value={user.nickname}\n            placeHolder={stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__userid\">\n          <InputLabel>\n            {/*  userID */}\n            {stringSet.EDIT_PROFILE__USERID_LABEL}\n          </InputLabel>\n          <Input\n            disabled\n            name=\"sendbird-edit-user-profile__userid__input\"\n            value={user.userId}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__theme\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__THEME_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__theme__theme-icon\">\n            {\n              theme === 'dark'\n                ? (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('light');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('light');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_ON}\n                    width={44}\n                    height={24}\n                  />\n                )\n                : (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('dark');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('dark');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_OFF}\n                    width={44}\n                    height={24}\n                  />\n                )\n            }\n          </div>\n        </section>\n      </form>\n    </Modal>\n  );\n}\n\nconst mapStoreToProps = (store) => {\n  return {\n    theme: store.config.theme,\n    changeTheme: store.config.setCurrenttheme,\n  };\n};\n\ninterface ConnectedEditUserProfileProps {\n  user: SendbirdTypes['User'];\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nconst ConnectedEditUserProfile: (\n  props: ConnectedEditUserProfileProps\n) => React.Component = withSendbirdContext(EditUserProfile, mapStoreToProps);\n\nexport default ConnectedEditUserProfile;\n","import './add-channel.scss';\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport IconButton from '../../../ui/IconButton';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport InviteMembers from '../../InviteMembers';\n\nimport {\n  createChannel,\n  createDefaultUserListQuery,\n  isBroadcastChannelEnabled,\n  isSuperGroupChannelEnabled,\n} from './utils';\nimport { CREATE_CHANNEL } from '../dux/actionTypes';\nimport Modal from '../../../ui/Modal';\n\nexport default function AddChannel({\n  sdk,\n  disabled,\n  channelListDispatcher,\n  onBeforeCreateChannel,\n  userId,\n  userFilledApplicationUserListQuery,\n  userListQuery,\n}) {\n  const [showModal, setShowModal] = useState(false);\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState('group');\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (!sdk || !sdk.createApplicationUserListQuery) {\n    return null;\n  }\n\n  const isBroadcastAvailable = isBroadcastChannelEnabled(sdk);\n  const isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);\n\n  return (\n    <>\n      <IconButton\n        height=\"32px\"\n        width=\"32px\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n        disabled={disabled}\n      >\n        <Icon\n          type={IconTypes.CREATE}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </IconButton>\n      {\n        showModal && step === 0 && (\n          <Modal\n            titleText={stringSet.MODAL__CHOOSE_CHANNEL_TYPE__TITLE}\n            hideFooter\n            onCancel={() => { setShowModal(false); }}\n            onSubmit={() => { }}\n          >\n            <div className=\"sendbird-add-channel__rectangle-wrap\">\n              <div\n                className=\"sendbird-add-channel__rectangle\"\n                onClick={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n              >\n                <Icon\n                  className=\"sendbird-add-channel__rectangle__chat-icon\"\n                  type={IconTypes.CHAT}\n                  fillColor={IconColors.PRIMARY}\n                  width=\"28px\"\n                  height=\"28px\"\n                />\n                <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                  {stringSet.MODAL__CHOOSE_CHANNEL_TYPE__GROUP}\n                </Label>\n              </div>\n              {\n                isSupergroupAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      className=\"sendbird-add-channel__rectangle__supergroup-icon\"\n                      type={IconTypes.SUPERGROUP}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet.MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP}\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                isBroadcastAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      className=\"sendbird-add-channel__rectangle__broadcast-icon\"\n                      type={IconTypes.BROADCAST}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet.MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST}\n                    </Label>\n                  </div>\n                )\n              }\n            </div>\n          </Modal>\n        )\n      }\n      {\n        showModal && step === 1 && (\n          <InviteMembers\n            swapParams={\n              sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n            }\n            titleText={stringSet.MODAL__CREATE_CHANNEL__TITLE}\n            submitText={stringSet.BUTTON__CREATE}\n            closeModal={() => {\n              setStep(0);\n              setShowModal(false);\n            }}\n            idsToFilter={[userId]}\n            userQueryCreator={() => ((userListQuery && typeof userListQuery === 'function')\n              ? userListQuery()\n              : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n            )}\n            onSubmit={(selectedUsers) => createChannel(\n              sdk,\n              selectedUsers,\n              onBeforeCreateChannel,\n              userId,\n              type,\n            ).then((channel) => {\n              // maybe - do this in event listener\n              channelListDispatcher({\n                type: CREATE_CHANNEL,\n                payload: channel,\n              });\n            })}\n          />\n        )\n      }\n    </>\n  );\n}\n\nAddChannel.propTypes = {\n  sdk: PropTypes.shape({\n    getErrorFirstCallback: PropTypes.func,\n    createApplicationUserListQuery: PropTypes.func,\n  }).isRequired,\n  disabled: PropTypes.bool,\n  channelListDispatcher: PropTypes.func.isRequired,\n  userFilledApplicationUserListQuery: PropTypes.shape({}),\n  onBeforeCreateChannel: PropTypes.func,\n  userId: PropTypes.string.isRequired,\n  userListQuery: PropTypes.func,\n};\n\nAddChannel.defaultProps = {\n  disabled: false,\n  userFilledApplicationUserListQuery: {},\n  onBeforeCreateChannel: null,\n  userListQuery: null,\n};\n","import React, {\n  useState,\n  useRef,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../ui/ContextMenu';\nimport IconButton from '../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport LeaveChannelModal from '../../ChannelSettings/components/LeaveChannel';\n\nexport default function ChannelPreviewAction({ disabled, onLeaveChannel }) {\n  const parentRef = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div\n      role=\"button\"\n      style={{ display: 'inline-block' }}\n      onKeyDown={(e) => { e.stopPropagation(); }}\n      tabIndex={0}\n      onClick={(e) => { e.stopPropagation(); }}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <IconButton\n            ref={parentRef}\n            onClick={toggleDropdown}\n            height=\"32px\"\n            width=\"32px\"\n          >\n            <Icon\n              type={IconTypes.MORE}\n              fillColor={IconColors.PRIMARY}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            parentRef={parentRef}\n            parentContainRef={parentRef}\n            closeDropdown={closeDropdown}\n          >\n            <MenuItem\n              onClick={() => {\n                if (disabled) { return; }\n                setShowModal(true);\n                closeDropdown();\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n            </MenuItem>\n          </MenuItems>\n        )}\n      />\n      {\n        showModal && (\n          <LeaveChannelModal\n            onCloseModal={() => setShowModal(false)}\n            onLeaveChannel={onLeaveChannel}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nChannelPreviewAction.propTypes = {\n  disabled: PropTypes.bool,\n  onLeaveChannel: PropTypes.func.isRequired,\n};\n\nChannelPreviewAction.defaultProps = {\n  disabled: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Placeholder from '../../../ui/PlaceHolder';\n\nexport default function ChannelsPlaceholder({\n  type,\n}) {\n  return (\n    <div className=\"sendbird-channel-list\">\n      <Placeholder type={type} />\n    </div>\n  );\n}\n\nChannelsPlaceholder.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nconst DELIVERY_RECIPT = 'delivery_receipt';\nconst createEventHandler = ({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  logger,\n}) => {\n  const ChannelHandler = new sdk.ChannelHandler();\n\n  ChannelHandler.onChannelChanged = (channel) => {\n    logger.info('ChannelList: onChannelChanged', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_CHANGED,\n      payload: channel,\n    });\n  };\n  ChannelHandler.onChannelDeleted = (channelUrl) => {\n    logger.info('ChannelList: onChannelDeleted', channelUrl);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_DELETED,\n      payload: channelUrl,\n    });\n  };\n  ChannelHandler.onUserJoined = (channel) => {\n    logger.info('ChannelList: onUserJoined', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_JOINED,\n        payload: channel,\n      });\n    }\n  };\n  ChannelHandler.onUserBanned = (channel, user) => {\n    const { currentUser } = sdk;\n    logger.info('Channel | useHandleChannelEvents: onUserBanned', channel);\n    if (user.userId === currentUser.userId) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: true,\n        },\n      });\n    } else {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: false,\n        },\n      });\n    }\n  };\n  ChannelHandler.onUserLeft = (channel, leftUser) => {\n    const { currentUser } = sdk;\n    const isMe = (currentUser.userId === leftUser.userId);\n    logger.info('ChannelList: onUserLeft', channel);\n    channelListDispatcher({\n      type: channelActions.ON_USER_LEFT,\n      payload: {\n        channel,\n        isMe,\n      },\n    });\n  };\n\n  ChannelHandler.onReadStatus = (channel) => {\n    logger.info('ChannelList: onReadStatus', channel);\n    channelListDispatcher({\n      type: channelActions.ON_READ_RECEIPT_UPDATED,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n    logger.info('ChannelList: onDeliveryReceiptUpdated', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_DELIVERY_RECEIPT_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onMessageUpdated = (channel, message) => {\n    if (channel.lastMessage.isEqual(message)) {\n      logger.info('ChannelList: onMessageUpdated', channel);\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onChannelHidden = (channel) => {\n    logger.info('ChannelList: onChannelHidden', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_ARCHIVED,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onChannelFrozen = (channel) => {\n    logger.info('ChannelList: onChannelFrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_FROZEN,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onChannelUnfrozen = (channel) => {\n    logger.info('ChannelList: onChannelUnfrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_UNFROZEN,\n      payload: channel,\n    });\n  };\n\n  logger.info('ChannelList: Added channelHandler');\n  sdk.addChannelHandler(sdkChannelHandlerId, ChannelHandler);\n};\n\nconst createChannelListQuery = ({ sdk, userFilledChannelListQuery = {} }) => {\n  const channelListQuery = sdk.GroupChannel.createMyGroupChannelListQuery();\n  channelListQuery.includeEmpty = false;\n  channelListQuery.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n  channelListQuery.limit = 20; // The value of pagination limit could be set up to 100.\n\n  if (userFilledChannelListQuery) {\n    Object.keys(userFilledChannelListQuery).forEach((key) => {\n      channelListQuery[key] = userFilledChannelListQuery[key];\n    });\n  }\n\n  return channelListQuery;\n};\n\n/**\n * Setup event listener\n * create channel source query\n * addloading screen\n */\nfunction setupChannelList({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  setChannelSource,\n  onChannelSelect,\n  userFilledChannelListQuery,\n  logger,\n  sortChannelList,\n  disableAutoSelect,\n}) {\n  if (sdk && sdk.ChannelHandler) {\n    createEventHandler({\n      sdk,\n      channelListDispatcher,\n      sdkChannelHandlerId,\n      logger,\n    });\n  } else {\n    logger.console.warning('ChannelList - createEventHandler: sdk or sdk.ChannelHandler does not exist', sdk);\n  }\n\n  logger.info('ChannelList - creating query', { userFilledChannelListQuery });\n  const channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });\n  logger.info('ChannelList - created query', channelListQuery);\n\n  setChannelSource(channelListQuery);\n\n  channelListDispatcher({\n    type: channelActions.INIT_CHANNELS_START,\n  });\n\n  if (userFilledChannelListQuery) {\n    logger.info('ChannelList - setting up channelListQuery', channelListQuery);\n    channelListDispatcher({\n      type: channelActions.CHANNEL_LIST_PARAMS_UPDATED,\n      payload: {\n        channelListQuery,\n        currentUserId: sdk && sdk.currentUser && sdk.currentUser.userId,\n      },\n    });\n  }\n\n  logger.info('ChannelList - fetching channels');\n  if (channelListQuery.hasNext) {\n    channelListQuery.next((response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let channelList = response;\n      let err = error;\n      if (swapParams) {\n        channelList = error;\n        err = response;\n      }\n      logger.info('ChannelList - fetched channels', channelList);\n      if (err) {\n        logger.error('ChannelList - couldnt fetch channels', err);\n        channelListDispatcher({\n          type: channelActions.INIT_CHANNELS_FAILURE,\n        });\n        return;\n      }\n      // select first channel\n      logger.info('ChannelList - highlight channel', channelList[0]);\n      let sorted = channelList;\n      if (sortChannelList && typeof sortChannelList === 'function') {\n        sorted = sortChannelList(channelList);\n        logger.info('ChannelList - channel list sorted', sorted);\n      }\n      if (!disableAutoSelect) {\n        onChannelSelect(sorted[0]);\n      }\n      channelListDispatcher({\n        type: channelActions.INIT_CHANNELS_SUCCESS,\n        payload: sorted,\n      });\n      const canSetMarkAsDelivered = sdk?.appInfo?.premiumFeatureList\n        ?.find((feature) => (feature === DELIVERY_RECIPT));\n      if (canSetMarkAsDelivered) {\n        logger.info('ChannelList: Marking all channels as read');\n        // eslint-disable-next-line no-unused-expressions\n        channelList?.forEach((channel, idx) => {\n          // Plan-based rate limits - minimum limit is 5 requests per second\n          setTimeout(() => {\n            // eslint-disable-next-line no-unused-expressions\n            channel?.markAsDelivered();\n          }, 500 * idx);\n        });\n      }\n    });\n  } else {\n    logger.warning('ChannelList - there are no more channels');\n  }\n}\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (pubSub, channelListDispatcher) => {\n  const subScriber = new Map();\n  if (!pubSub) return subScriber;\n  subScriber.set(topics.CREATE_CHANNEL, pubSub.subscribe(topics.CREATE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: 'CREATE_CHANNEL',\n      payload: channel,\n    });\n  }));\n\n  subScriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    const updatedChannel = channel;\n    if (updatedChannel?.lastMessage?.messageId === message.messageId) {\n      updatedChannel.lastMessage = message;\n    }\n    if (channel) {\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: updatedChannel,\n      });\n    }\n  }));\n\n  subScriber.set(topics.LEAVE_CHANNEL, pubSub.subscribe(topics.LEAVE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.LEAVE_CHANNEL_SUCCESS,\n      payload: channel.url,\n    });\n  }));\n\n  subScriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.CHANNEL_REPLACED_TO_TOP,\n      payload: channel,\n    });\n  }));\n\n  return subScriber;\n};\n\nexport default setupChannelList;\n","import React, { useEffect, useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as userActions from '../../lib/dux/user/actionTypes';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport * as channelListActions from './dux/actionTypes';\nimport channelListInitialState from './dux/initialState';\nimport channelListReducers from './dux/reducers';\n\nimport ChannelPreview from '../../ui/ChannelPreview';\nimport ChannelHeader from '../../ui/ChannelHeader';\nimport EditUserProfile from '../../ui/EditUserProfile';\nimport PlaceholderTypes from '../../ui/PlaceHolder/type';\n\nimport AddChannel from './components/AddChannel';\nimport ChannelPreviewAction from './components/ChannelPreviewAction';\nimport PlaceHolder from './components/Placeholder';\n\nimport setupChannelList, {\n  pubSubHandler,\n  pubSubHandleRemover,\n} from './utils';\nimport { uuidv4 } from '../../utils/uuid';\n\nimport './index.scss';\n\nconst noop = () => { };\nconst DELIVERY_RECIPT = 'delivery_receipt';\n\nfunction ChannelList(props) {\n  const {\n    stores: { sdkStore = {}, userStore = {} },\n    config: {\n      userId,\n      isOnline,\n      userListQuery,\n      logger,\n      pubSub,\n      theme,\n    },\n    dispatchers: {\n      userDispatcher,\n    },\n    queries = {},\n    renderChannelPreview,\n    renderHeader,\n    renderUserProfile,\n    disableUserProfile,\n    allowProfileEdit,\n    sortChannelList,\n    onProfileEditSuccess,\n    onThemeChange,\n    onBeforeCreateChannel,\n    onChannelSelect,\n    disableAutoSelect,\n  } = props;\n  const { config = {} } = props;\n  // enable if it is true atleast once(both are flase by default)\n  const enableEditProfile = allowProfileEdit || config.allowProfileEdit;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const { sdk = {} } = sdkStore;\n  const userFilledChannelListQuery = queries.channelListQuery;\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n\n  const sdkError = sdkStore.error;\n  const sdkIntialized = sdkStore.initialized;\n\n  const [channelListStore, channelListDispatcher] = useReducer(\n    channelListReducers,\n    channelListInitialState,\n  );\n  const [user, setUser] = useState({});\n  const [channelSource, setChannelSource] = useState({});\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n  const [sdkChannelHandlerId, setSdkChannelHandlerId] = useState(null);\n\n  const { loading, currentChannel } = channelListStore;\n\n  useEffect(() => {\n    setUser(userStore.user);\n  }, [userStore.user]);\n\n  useEffect(() => {\n    const subscriber = pubSubHandler(pubSub, channelListDispatcher);\n    return () => {\n      pubSubHandleRemover(subscriber);\n    };\n  }, [sdkIntialized]);\n\n  useEffect(() => {\n    setSdkChannelHandlerId(uuidv4);\n    if (sdkIntialized) {\n      logger.info('ChannelList: Setup channelHandlers');\n      setupChannelList({\n        sdk,\n        sdkChannelHandlerId,\n        channelListDispatcher,\n        setChannelSource,\n        onChannelSelect,\n        userFilledChannelListQuery,\n        logger,\n        sortChannelList,\n        disableAutoSelect,\n      });\n    } else {\n      logger.info('ChannelList: Removing channelHandlers');\n      // remove previous channelHandlers\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n      // remove channelSource\n      setChannelSource({});\n      // cleanup\n      channelListDispatcher({\n        type: channelListActions.RESET_CHANNEL_LIST,\n      });\n    }\n    return () => {\n      logger.info('ChannelList: Removing channelHandlers');\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n    };\n  }, [sdkIntialized, userFilledChannelListQuery, sortChannelList]);\n\n  const { allChannels } = channelListStore;\n  const sortedChannels = (sortChannelList && typeof sortChannelList === 'function')\n    ? sortChannelList(allChannels)\n    : allChannels;\n\n  if (sortedChannels.length !== allChannels.length) {\n    const warning = `ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems`;\n    // eslint-disable-next-line no-console\n    console.warn(warning, { before: allChannels, after: sortedChannels });\n    logger.warning(warning, { before: allChannels, after: sortedChannels });\n  }\n\n  useEffect(() => {\n    channelListDispatcher({\n      type: channelListActions.SET_AUTO_SELECT_CHANNEL_ITEM,\n      payload: disableAutoSelect,\n    });\n  }, [disableAutoSelect]);\n\n  useEffect(() => {\n    if (!sdk || !sdk.GroupChannel || !currentChannel) { return; }\n    sdk.GroupChannel.getChannel(currentChannel, (groupChannel) => {\n      if (groupChannel) {\n        onChannelSelect(groupChannel);\n      } else {\n        onChannelSelect(null);\n      }\n    });\n  }, [currentChannel]);\n\n  return (\n    <UserProfileProvider\n      className=\"sendbird-channel-list\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-list__header\">\n        <ChannelHeader\n          renderHeader={renderHeader}\n          user={user}\n          onEdit={() => {\n            if (enableEditProfile) {\n              setShowProfileEdit(true);\n            }\n          }}\n          allowProfileEdit={enableEditProfile}\n          iconButton={(\n            <AddChannel\n              disabled={!isOnline}\n              userListQuery={userListQuery}\n              sdk={sdk}\n              channelListDispatcher={channelListDispatcher}\n              userId={userId}\n              userFilledApplicationUserListQuery={userFilledApplicationUserListQuery}\n              onBeforeCreateChannel={onBeforeCreateChannel}\n            />\n          )}\n        />\n      </div>\n      {\n        showProfileEdit && (\n          <EditUserProfile\n            onThemeChange={onThemeChange}\n            user={user}\n            onCancel={() => { setShowProfileEdit(false); }}\n            onSubmit={(newName, newFile) => {\n              sdk.updateCurrentUserInfoWithProfileImage(newName, newFile, (updatedUser) => {\n                userDispatcher({ type: userActions.UPDATE_USER_INFO, payload: updatedUser });\n                if (onProfileEditSuccess && typeof onProfileEditSuccess === 'function') {\n                  onProfileEditSuccess(updatedUser);\n                }\n              });\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-channel-list__body\"\n        onScroll={(e) => {\n          const fetchMore = Math.abs(\n            e.target.scrollHeight - e.target.clientHeight - e.target.scrollTop,\n          ) < 5;\n          if (fetchMore && channelSource.hasNext) {\n            logger.info('ChannelList: Fetching more channels');\n            channelListDispatcher({\n              type: channelListActions.FETCH_CHANNELS_START,\n            });\n            channelSource.next((response, error) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let channelList = response;\n              let err = error;\n              if (swapParams) {\n                channelList = error;\n                err = response;\n              }\n              if (err) {\n                logger.info('ChannelList: Fetching channels failed', err);\n                channelListDispatcher({\n                  type: channelListActions.FETCH_CHANNELS_FAILURE,\n                  payload: channelList,\n                });\n                return;\n              }\n              logger.info('ChannelList: Fetching channels successful', channelList);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_SUCCESS,\n                payload: channelList,\n              });\n\n              const canSetMarkAsDelivered = sdk?.appInfo?.premiumFeatureList\n                ?.find((feature) => (feature === DELIVERY_RECIPT));\n\n              if (canSetMarkAsDelivered) {\n                logger.info('ChannelList: Marking all channels as read');\n                // eslint-disable-next-line no-unused-expressions\n                channelList?.forEach((channel, idx) => {\n                  // Plan-based rate limits - minimum limit is 5 requests per second\n                  setTimeout(() => {\n                    // eslint-disable-next-line no-unused-expressions\n                    channel?.markAsDelivered();\n                  }, 500 * idx);\n                });\n              }\n            });\n          }\n        }}\n      >\n        {\n          (sdkError) && (\n            <PlaceHolder type={PlaceholderTypes.WRONG} />\n          )\n        }\n        {/*\n          To do: Implement windowing\n          Implement windowing if you are dealing with large number of messages/channels\n          https://github.com/bvaughn/react-window -> recommendation\n          We hesitate to bring one more dependency to our library,\n          we are planning to implement it inside the library\n        */}\n        <div>\n          {\n            sortedChannels && sortedChannels.map((channel, idx) => {\n              const onLeaveChannel = (c, cb) => {\n                logger.info('ChannelList: Leaving channel', c);\n                c.leave()\n                  .then((res) => {\n                    logger.info('ChannelList: Leaving channel success', res);\n                    if (cb && typeof cb === 'function') {\n                      cb(res, null);\n                    }\n                    channelListDispatcher({\n                      type: channelListActions.LEAVE_CHANNEL_SUCCESS,\n                      payload: channel.url,\n                    });\n                  })\n                  .catch((err) => {\n                    logger.error('ChannelList: Leaving channel failed', err);\n                    if (cb && typeof cb === 'function') {\n                      cb(null, err);\n                    }\n                  });\n              };\n\n              const onClick = () => {\n                if (!isOnline) { return; }\n                logger.info('ChannelList: Clicked on channel:', channel);\n                channelListDispatcher({\n                  type: channelListActions.SET_CURRENT_CHANNEL,\n                  payload: channel.url,\n                });\n              };\n\n              return (\n                (renderChannelPreview)\n                  ? (\n                    // eslint-disable-next-line\n                    <div key={channel.url} onClick={onClick}>\n                      {renderChannelPreview({ channel, onLeaveChannel })}\n                    </div>\n                  )\n                  : (\n                    <ChannelPreview\n                      key={channel.url}\n                      tabIndex={idx}\n                      onClick={onClick}\n                      channel={channel}\n                      currentUser={user}\n                      theme={theme}\n                      isActive={channel.url === currentChannel}\n                      // todo - potential performance hit refactor\n                      ChannelAction={(\n                        <ChannelPreviewAction\n                          disabled={!isOnline}\n                          onLeaveChannel={() => onLeaveChannel(channel)}\n                        />\n                      )}\n                    />\n                  )\n              );\n            })\n          }\n        </div>\n        {\n          (!sdkIntialized || loading) && (\n            <PlaceHolder type={PlaceholderTypes.LOADING} />\n          )\n        }\n        {\n          //  placeholder\n          (!allChannels || allChannels.length === 0) && (\n            <PlaceHolder type={PlaceholderTypes.NO_CHANNELS} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelList.propTypes = {\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    userDispatcher: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string.isRequired,\n    userListQuery: PropTypes.func,\n    theme: PropTypes.string,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    channelListQuery: PropTypes.shape({\n      channelNameContainsFilter: PropTypes.string,\n      channelUrlsFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypesFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypeStartsWithFilter: PropTypes.string,\n      hiddenChannelFilter: PropTypes.string,\n      includeEmpty: PropTypes.bool,\n      limit: PropTypes.number,\n      memberStateFilter: PropTypes.string,\n      metadataOrderKeyFilter: PropTypes.string,\n      nicknameContainsFilter: PropTypes.string,\n      order: PropTypes.string,\n      publicChannelFilter: PropTypes.string,\n      superChannelFilter: PropTypes.string,\n      unreadChannelFilter: PropTypes.string,\n      userIdsExactFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilterQueryType: PropTypes.string,\n    }),\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  onBeforeCreateChannel: PropTypes.func,\n  renderChannelPreview: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  allowProfileEdit: PropTypes.bool,\n  sortChannelList: PropTypes.func,\n  onThemeChange: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  renderHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  onChannelSelect: PropTypes.func,\n  disableAutoSelect: PropTypes.bool,\n};\n\nChannelList.defaultProps = {\n  onBeforeCreateChannel: null,\n  renderChannelPreview: null,\n  renderHeader: null,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  allowProfileEdit: false,\n  onThemeChange: null,\n  sortChannelList: null,\n  onProfileEditSuccess: null,\n  queries: {},\n  onChannelSelect: noop,\n  disableAutoSelect: false,\n};\n\nexport default withSendbirdContext(ChannelList);\n"],"names":["RESET_CHANNEL_LIST","CREATE_CHANNEL","SET_AUTO_SELECT_CHANNEL_ITEM","LEAVE_CHANNEL_SUCCESS","SET_CURRENT_CHANNEL","SHOW_CHANNEL_SETTINGS","HIDE_CHANNEL_SETTINGS","FETCH_CHANNELS_START","FETCH_CHANNELS_SUCCESS","FETCH_CHANNELS_FAILURE","INIT_CHANNELS_START","INIT_CHANNELS_SUCCESS","INIT_CHANNELS_FAILURE","ON_USER_JOINED","ON_CHANNEL_DELETED","ON_LAST_MESSAGE_UPDATED","ON_USER_LEFT","ON_CHANNEL_CHANGED","ON_CHANNEL_ARCHIVED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_READ_RECEIPT_UPDATED","ON_DELIVERY_RECEIPT_UPDATED","CHANNEL_REPLACED_TO_TOP","CHANNEL_LIST_PARAMS_UPDATED","initialized","loading","allChannels","currentChannel","showSettings","channelListQuery","currentUserId","disableAutoSelect","reducer","state","action","type","actions","_objectSpread","initialState","nextChannel","payload","length","url","currentChannels","map","c","filteredChannels","filter","find","channel","filterChannelListParams","getChannelsWithUpsertedChannel","ch","channelUrl","isMe","unreadMessageCount","lastMessage","currentUnreadCount","isFrozen","getChannelTitle","stringSet","LabelStringSet","name","members","NO_TITLE","NO_MEMBERS","userId","nickname","NO_NAME","join","getLastMessageCreatedAt","locale","createdAt","optionalParam","isToday","format","isYesterday","formatRelative","Date","getTotalMembers","memberCount","getPrettyLastMessage","message","MAXLEN","messageType","truncateString","getLastMessage","getChannelUnreadMessageCount","ChannelPreview","currentUser","isActive","ChannelAction","theme","onClick","tabIndex","isBroadcast","dateLocale","useContext","LocalizationContext","React","ChannelAvatar","Icon","IconTypes","BROADCAST","IconColors","SECONDARY","Label","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","utils","CAPTION_2","ONBACKGROUND_2","FREEZE","PRIMARY","CAPTION_3","BODY_2","ONBACKGROUND_3","Badge","propTypes","PropTypes","shape","arrayOf","coverUrl","string","bool","element","isRequired","func","number","defaultProps","ChannelHeader","user","renderHeader","iconButton","onEdit","allowProfileEdit","Avatar","profileUrl","oneOfType","instanceOf","IconButton","EditUserProfile","_a","_b","onCancel","onSubmit","_c","changeTheme","noop","_d","onThemeChange","hiddenInputRef","useRef","inputRef","formRef","_e","useState","currentImg","setCurrentImg","_f","newFile","setNewFile","Modal","EDIT_PROFILE__TITLE","BUTTON__SAVE","ButtonType","current","value","reportValidity","e","preventDefault","InputLabel","EDIT_PROFILE__IMAGE_LABEL","display","URL","createObjectURL","target","files","TextButton","click","BUTTON_1","EDIT_PROFILE__IMAGE_UPLOAD","EDIT_PROFILE__NICKNAME_LABEL","Input","EDIT_PROFILE__NICKNAME_PLACEHOLDER","EDIT_PROFILE__USERID_LABEL","EDIT_PROFILE__THEME_LABEL","TOGGLE_ON","TOGGLE_OFF","mapStoreToProps","store","config","setCurrenttheme","ConnectedEditUserProfile","withSendbirdContext","AddChannel","sdk","disabled","channelListDispatcher","onBeforeCreateChannel","userFilledApplicationUserListQuery","userListQuery","showModal","setShowModal","step","setStep","setType","createApplicationUserListQuery","isBroadcastAvailable","isBroadcastChannelEnabled","isSupergroupAvailable","isSuperGroupChannelEnabled","CREATE","MODAL__CHOOSE_CHANNEL_TYPE__TITLE","CHAT","SUBTITLE_1","MODAL__CHOOSE_CHANNEL_TYPE__GROUP","SUPERGROUP","MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP","MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST","InviteMembers","getErrorFirstCallback","MODAL__CREATE_CHANNEL__TITLE","BUTTON__CREATE","createDefaultUserListQuery","selectedUsers","createChannel","then","ChannelPreviewAction","onLeaveChannel","parentRef","stopPropagation","ContextMenu","toggleDropdown","MORE","closeDropdown","MenuItems","MenuItem","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","ChannelsPlaceholder","Placeholder","DELIVERY_RECIPT","createEventHandler","sdkChannelHandlerId","logger","ChannelHandler","onChannelChanged","info","channelActions","onChannelDeleted","onUserJoined","onUserBanned","onUserLeft","leftUser","onReadStatus","onDeliveryReceiptUpdated","onMessageUpdated","isEqual","onChannelHidden","onChannelFrozen","onChannelUnfrozen","addChannelHandler","createChannelListQuery","userFilledChannelListQuery","GroupChannel","createMyGroupChannelListQuery","includeEmpty","order","limit","Object","keys","forEach","key","setupChannelList","setChannelSource","onChannelSelect","sortChannelList","console","warning","hasNext","next","response","error","swapParams","channelList","err","sorted","canSetMarkAsDelivered","appInfo","premiumFeatureList","feature","idx","setTimeout","markAsDelivered","pubSubHandleRemover","subscriber","s","remove","pubSubHandler","pubSub","subScriber","Map","set","topics","subscribe","msg","updatedChannel","messageId","ChannelList","props","stores","sdkStore","userStore","isOnline","dispatchers","userDispatcher","queries","renderChannelPreview","renderUserProfile","disableUserProfile","onProfileEditSuccess","enableEditProfile","userDefinedDisableUserProfile","userDefinedRenderProfile","applicationUserListQuery","sdkError","sdkIntialized","channelListStore","useReducer","channelListReducers","channelListInitialState","setUser","channelSource","showProfileEdit","setShowProfileEdit","setSdkChannelHandlerId","useEffect","uuidv4","removeChannelHandler","channelListActions","sortedChannels","warn","before","after","getChannel","groupChannel","UserProfileProvider","newName","updateCurrentUserInfoWithProfileImage","updatedUser","userActions","fetchMore","Math","abs","scrollHeight","clientHeight","scrollTop","PlaceHolder","PlaceholderTypes","WRONG","cb","leave","res","catch","LOADING","NO_CHANNELS","publish","channelNameContainsFilter","channelUrlsFilter","customTypesFilter","customTypeStartsWithFilter","hiddenChannelFilter","memberStateFilter","metadataOrderKeyFilter","nicknameContainsFilter","publicChannelFilter","superChannelFilter","unreadChannelFilter","userIdsExactFilter","userIdsIncludeFilter","userIdsIncludeFilterQueryType","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter"],"mappings":"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"}