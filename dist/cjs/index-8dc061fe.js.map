{"version":3,"file":"index-8dc061fe.js","sources":["../../src/ui/ChannelAvatar/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.GroupChannel;\n  userId: string;\n  theme: string;\n  width?: number,\n  height?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  width = 56,\n  height = 56,\n}: Props): JSX.Element{\n  const { isBroadcast } = channel;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.useDefaultAvatar(channel)\n          ? (\n            <div\n              className=\"sendbird-chat-header--default-avatar\"\n              style={{\n                width,\n                height,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.CONTENT}\n                width={width * 0.575}\n                height={height * 0.575}\n              />\n            </div>\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header--avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header--avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel.name}\n        />\n      )\n  ),[channel.members, channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n"],"names":["ChannelAvatar","_a","channel","userId","theme","_b","width","_c","height","isBroadcast","memoizedAvatar","useMemo","utils","React","display","justifyContent","alignItems","Icon","IconTypes","BROADCAST","IconColors","CONTENT","Avatar","name","concat","members","coverUrl"],"mappings":";;;;;;;;;;AAgBA,SAASA,aAAT,CAAuBC,EAAvB,EAMQ;MALNC,OAAO,GAAAD,EAAA,CAAAC;MACPC,MAAM,GAAAF,EAAA,CAAAE;MACNC,KAAK,GAAAH,EAAA,CAAAG;MACLC,EAAU,GAAAJ,EAAA,CAAAK;MAAVA,KAAK,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA;MACRE,EAAA,GAAAN,EAAA,CAAAO;MAAAA,MAAM,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAKA;AAEH,EAAA,IAAAE,WAAW,GAAKP,OAAO,CAAAO,WAAvB,CAAA;AACR,EAAA,IAAMC,cAAc,GAAGC,aAAO,CAAC,YAAM;AAAA,IAAA,OACnCF,WAAW,GAEPG,sBAAA,CAAuBV,OAAvB,CAEI,gBAAAW,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,KAAK,EAAE;AACLP,QAAAA,KAAK,EAAAA,KADA;AAELE,QAAAA,MAAM,EAAAA,MAFD;AAGLM,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,cAAc,EAAE,QAJX;AAKLC,QAAAA,UAAU,EAAE,QAAA;AALP,OAAA;AAFT,KAAA,eAUEH,wCAACI,UAAD,EAAA;MACE,IAAI,EAAEC,eAAS,CAACC,SADlB;MAEE,SAAS,EAAEC,gBAAU,CAACC,OAFxB;MAGE,KAAK,EAAEf,KAAK,GAAG,KAHjB;MAIE,MAAM,EAAEE,MAAM,GAAG,KAAA;KAdrB,CAAA,CAFJ,gBAqBIK,yBAAA,CAAA,aAAA,CAACS,YAAD,EAAA;AACE,MAAA,SAAS,EAAC,iDADZ;MAEE,GAAG,EAAEV,4BAAA,CAA6BV,OAA7B,EAAsCC,MAAtC,CAFP;AAGE,MAAA,KAAK,EAAEG,KAHT;AAIE,MAAA,MAAM,EAAEE,MAJV;MAKE,GAAG,EAAEN,OAAO,CAACqB,IAAAA;KA5BZ,CAAA,gBAiCPV,wCAACS,YAAD,EAAA;AACE,MAAA,SAAS,EAAC,6CADZ;MAEE,GAAG,EAAEV,4BAAA,CAA6BV,OAA7B,EAAsCC,MAAtC,CAFP;AAGE,MAAA,KAAK,EAAE,EAAAqB,CAAAA,MAAA,CAAGlB,KAAH,EAAQ,IAAR,CAHT;AAIE,MAAA,MAAM,EAAE,EAAGkB,CAAAA,MAAH,CAAGhB,MAAH,EAAa,IAAb,CAJV;MAKE,GAAG,EAAEN,OAAO,CAACqB,IAAAA;KAvCgB,CAAA,CAAA;AA0CpC,GA1C6B,EA0C5B,CAACrB,OAAO,CAACuB,OAAT,EAAkBvB,OAAO,CAACwB,QAA1B,EAAoCtB,KAApC,CA1C4B,CAA9B,CAAA;EA2CA,oBACES,yBAAA,CAAA,aAAA,CAAAA,yBAAA,CAAA,QAAA,EAAA,IAAA,EAAIH,cAAJ,CADF,CAAA;AAGD;;;;"}