{"version":3,"file":"MemberList-8ba5ffba.js","sources":["../../src/smart-components/ChannelSettings/components/ModerationPanel/MembersModal.tsx","../../src/smart-components/ChannelSettings/components/ModerationPanel/InviteUsersModal.tsx","../../src/smart-components/ChannelSettings/components/ModerationPanel/MemberList.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { Member } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MembersModal({ onCancel }: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          {\n            members.map((member: Member) => (\n              <UserListItem\n                user={member}\n                key={member.userId}\n                currentUser={currentUser}\n                action={({ parentRef, actionRef }) => (\n                  <>\n                    {channel?.myRole === 'operator' && (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentContainRef={parentRef}\n                            parentRef={actionRef} // for catching location(x, y) of MenuItems\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              disable={currentUser === member.userId}\n                              onClick={() => {\n                                if ((member.role !== 'operator')) {\n                                  channel?.addOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: 'operator',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.removeOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: '',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              {\n                                member.role !== 'operator'\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                                  : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                              }\n                            </MenuItem>\n                            {\n                              // No muted members in broadcast channel\n                              !channel?.isBroadcast && (\n                                <MenuItem\n                                  onClick={() => {\n                                    if (member.isMuted) {\n                                      channel?.unmuteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: false,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      })\n                                    } else {\n                                      channel?.muteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: true,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    }\n                                  }}\n                                >\n                                  {\n                                    member.isMuted\n                                      ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                      : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                                  }\n                                </MenuItem>\n                              )\n                            }\n                            <MenuItem\n                              onClick={() => {\n                                channel?.banUser(member, -1, '').then(() => {\n                                  setMembers(members.filter(({ userId }) => {\n                                    return userId !== member.userId;\n                                  }));\n                                });\n                              }}\n                            >\n                              {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    )}\n                  </>\n                )}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nconst isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n\nexport default function InviteUsers({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  const state = useSendbirdStateContext();\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const globalUserListQuery = state?.config?.userListQuery;\n\n  const { channel, overrideInviteUser } = useChannelSettingsContext();\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const userListQuery = globalUserListQuery ? globalUserListQuery() : sdk?.createApplicationUserListQuery();\n    if (userListQuery?.next) {\n      userListQuery.next().then((members) => {\n        setMembers(members);\n      });\n      setUserQuery(userListQuery);\n    }\n  }, [sdk]);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText={stringSet.BUTTON__INVITE}\n        type={ButtonTypes.PRIMARY}\n        onCancel={() => onCancel()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          if(typeof overrideInviteUser === 'function') {\n            overrideInviteUser({\n              users: members,\n              onClose: onCancel,\n              channel,\n            });\n            return;\n          }\n          channel?.inviteWithUserIds(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 20);\n            if (hasNext && fetchMore) {\n              userQuery.next().then((users) => {\n                setMembers([\n                  ...members,\n                  ...users,\n                ])\n              });\n            }\n          }}\n        >\n          <div className=\"sendbird-more-members__popup-scroll__inner\">\n            { members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteUsers from './InviteUsersModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport const MemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteUsers, setShowInviteUsers] = useState(false);\n\n  const state = useSendbirdStateContext();\n  const {\n    channel,\n    setChannelUpdateId,\n  } = useChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n      setChannelUpdateId(uuidv4());\n    });\n  }, [channel]);\n\n  return (\n    <div className=\"sendbird-channel-settings-member-list sendbird-accordion\">\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (channel?.myRole === 'operator' && userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel?.addOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel?.removeOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {\n                            member.role !== 'operator'\n                              ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                              : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                          }\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel?.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel?.unmuteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel?.muteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              {\n                                member.isMuted\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                  : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                              }\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(member, -1, '').then(() => {\n                              refreshList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteUsers(true)}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            onCancel={() => {\n              setShowAllMembers(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteUsers && (\n          <InviteUsers\n            onSubmit={() => {\n              setShowInviteUsers(false);\n              refreshList();\n            }}\n            onCancel={() => setShowInviteUsers(false)}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default MemberList;\n"],"names":["MembersModal","_a","onCancel","_c","useState","members","setMembers","_d","memberQuery","setMemberQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUser","_b","config","userId","stringSet","useContext","LocalizationContext","useEffect","memberListQuery","createMemberListQuery","limit","next","then","React","Modal","noop","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","map","member","UserListItem","parentRef","actionRef","myRole","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","role","addOperators","m","__assign","removeOperators","CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","isBroadcast","isMuted","unmuteUser","muteUser","CHANNEL_SETTING__MODERATION__UNMUTE","CHANNEL_SETTING__MODERATION__MUTE","banUser","filter","CHANNEL_SETTING__MODERATION__BAN","isAboutSame","a","b","px","Math","abs","InviteUsers","onSubmit","_e","_f","selectedMembers","setSelectedMembers","_g","userQuery","setUserQuery","sdk","stores","sdkStore","globalUserListQuery","userListQuery","_h","overrideInviteUser","useLocalization","createApplicationUserListQuery","Object","keys","length","BUTTON__INVITE","ButtonTypes","PRIMARY","users","onClose","inviteWithUserIds","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","event","modifiedSelectedMembers","id","checked","MemberList","setHasNext","showAllMembers","setShowAllMembers","showInviteUsers","setShowInviteUsers","setChannelUpdateId","memberUserListQuery","refreshList","useCallback","uuidv4","Button","SECONDARY","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER"],"mappings":"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"}