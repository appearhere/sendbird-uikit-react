{"version":3,"file":"ChannelSettings.js","sources":["../../src/smart-components/ChannelSettings/components/EditDetails.jsx","../../src/smart-components/ChannelSettings/components/ChannelProfile.jsx","../../src/smart-components/ChannelSettings/components/AdminPanel/MembersModal.tsx","../../src/smart-components/ChannelSettings/components/MembersAccordion.jsx","../../src/smart-components/ChannelSettings/components/UserListItem.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorsModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/AddOperatorsModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorList.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/InviteMembersModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/MemberList.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMembersModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMemberList.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMembersModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMemberList.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/index.tsx","../../src/smart-components/ChannelSettings/index.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const getChannelName = () => {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n            width={80}\n            height={80}\n          />\n        </div>\n        <Label\n          className=\"sendbird-channel-profile__title\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {getChannelName()}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        nickname: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MembersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMembers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMembers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired,\n};\n\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MembersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport const MemberList = ({\n  sdk,\n  channel,\n  userQueryCreator,\n  userId,\n}: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMembers: Array<string>) => {\n              channel.inviteWithUserIds(selectedMembers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport default function AdminPannel({\n  userQueryCreator,\n  channel,\n  userId,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList\n              userQueryCreator={userQueryCreator}\n              channel={channel}\n              userId={userId}\n            />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MembersAccordion from './components/MembersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    className,\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  const componentClassNames = (\n    Array.isArray(className)\n      ? [COMPONENT_CLASS_NAME, ...className]\n      : [COMPONENT_CLASS_NAME, className]\n  ).join(' ');\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className={componentClassNames}>\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            className=\"sendbird-channel-settings__close-icon\"\n            type={IconTypes.CLOSE}\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      className={componentClassNames}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              className=\"sendbird-channel-settings__close-icon\"\n              type={IconTypes.CLOSE}\n              height=\"22px\"\n              width=\"22px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                userId={userId}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  className={[\n                    'sendbird-channel-settings__panel-item',\n                    'sendbird-channel-settings__members',\n                  ].join(' ')}\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    type={IconTypes.MEMBERS}\n                    fillColor={IconColors.PRIMARY}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    type={IconTypes.CHEVRON_RIGHT}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MembersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMembers={(selectedMembers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMembers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={[\n            'sendbird-channel-settings__panel-item',\n            'sendbird-channel-settings__leave-channel',\n            !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '',\n          ].join(' ')}\n          role=\"button\"\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          tabIndex={0}\n        >\n          <Icon\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            type={IconTypes.LEAVE}\n            fillColor={IconColors.ERROR}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"],"names":["EditDetails","props","onSubmit","onCancel","channel","userId","theme","inputRef","useRef","formRef","hiddenInputRef","currentImg","setCurrentImg","useState","newFile","setNewFile","stringSet","useContext","LocalizationContext","title","name","React","Modal","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","ChannelAvatar","display","URL","createObjectURL","target","files","TextButton","click","Label","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","propTypes","PropTypes","func","isRequired","shape","string","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","getChannelName","members","map","member","nickname","NO_NAME","join","NO_TITLE","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","arrayOf","bool","defaultProps","MembersModal","_a","hideModal","currentUser","_b","setMembers","_c","memberQuery","setMemberQuery","useEffect","memberListQuery","createMemberListQuery","limit","next","error","noop","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","UserListItem","parentRef","actionRef","myRole","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","role","addOperators","m","__assign","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","SHOWN_MEMBER_MAX","avatarRef","disableUserProfile","renderUserProfile","UserProfileContext","profileUrl","paddingTop","paddingBottom","user","currentUserId","close","UserProfile","CHANNEL_SETTING__MEMBERS__YOU","MembersAccordion","userQueryCreator","onInviteMembers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","slice","length","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER","InviteMembers","MODAL__INVITE_MEMBER__TITLE","BUTTON__INVITE","COMPONENT_NAME","className","action","injectingClassNames","Array","isArray","MutedAvatarOverlay","concat","SUBTITLE_1","CAPTION_3","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","createOperatorListQuery","response","AddOperatorsModal","selectedMembers","setSelectedMembers","_d","selectedCount","Object","keys","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","event","modifiedSelectedMembers","id","checked","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refershList","useCallback","operator","CHANNEL_SETTING__OPERATORS__TITLE_ALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","mapStoreToProps","store","getSdk","withSendbirdContext","userQuery","setUserQuery","userListQuery","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","inviteWithUserIds","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","unbanUser","BannedMemberList","refreshList","MutedMembersModal","mutedMemberFilter","MutedMemberList","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","OPERATOR","CHANNEL_SETTING__OPERATORS__TITLE","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","memberCount","MUTE","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF","COMPONENT_CLASS_NAME","ChannelSettings","onCloseClick","channelUrl","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","stores","sdkStore","config","logger","isOnline","queries","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","applicationUserListQuery","initialized","channelUpdateId","setChannelUpdateId","uuidv4","setChannel","invalidChannel","setInvalidChannel","showAccordion","setShowAccordion","showLeaveChannelModal","setShowLeaveChannelModal","componentClassNames","info","warning","GroupChannel","getChannel","groupChannel","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","PlaceHolder","PlaceHolderTypes","WRONG","UserProfileProvider","currentTitle","getErrorFirstCallback","params","data","updateChannel","AdminPanel","createDefaultUserListQuery","CHEVRON_RIGHT","then","res","LEAVE","ERROR","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","leave","oneOfType","element","number","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","createApplicationUserListQuery","any"],"mappings":"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"}