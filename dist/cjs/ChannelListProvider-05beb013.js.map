{"version":3,"file":"ChannelListProvider-05beb013.js","sources":["../../src/smart-components/ChannelList/dux/actionTypes.js","../../src/smart-components/ChannelList/utils.js","../../src/smart-components/ChannelList/dux/initialState.js","../../src/smart-components/ChannelList/dux/reducers.js","../../src/smart-components/ChannelList/context/ChannelListProvider.tsx"],"sourcesContent":["export const RESET_CHANNEL_LIST = 'RESET_CHANNEL_LIST';\nexport const CREATE_CHANNEL = 'CREATE_CHANNEL';\nexport const USER_INVITED = 'USER_INVITED';\nexport const UNLOAD_CHANNELS = 'UNLOAD_CHANNELS';\nexport const SET_CHANNEL_LOADING = 'SET_CHANNEL_LOADING';\nexport const LEAVE_CHANNEL_SUCCESS = 'LEAVE_CHANNEL_SUCCESS';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SHOW_CHANNEL_SETTINGS = 'SHOW_CHANNEL_SETTINGS';\nexport const HIDE_CHANNEL_SETTINGS = 'HIDE_CHANNEL_SETTINGS';\n\nexport const FETCH_CHANNELS_START = 'FETCH_CHANNELS_START';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_CHANNELS_FAILURE = 'FETCH_CHANNELS_FAILURE';\n\nexport const INIT_CHANNELS_START = 'INIT_CHANNELS_START';\nexport const INIT_CHANNELS_SUCCESS = 'INIT_CHANNELS_SUCCESS';\nexport const INIT_CHANNELS_FAILURE = 'INIT_CHANNELS_FAILURE';\n\nexport const INVITE_MEMBERS_SUCESS = 'INVITE_MEMBERS_SUCESS';\n\nexport const ON_USER_JOINED = 'ON_USER_JOINED';\nexport const ON_CHANNEL_DELETED = 'ON_CHANNEL_DELETED';\nexport const ON_LAST_MESSAGE_UPDATED = 'ON_LAST_MESSAGE_UPDATED';\nexport const ON_USER_LEFT = 'ON_USER_LEFT';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_CHANNEL_ARCHIVED = 'ON_CHANNEL_ARCHIVED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\n\nexport const ON_READ_RECEIPT_UPDATED = 'ON_READ_RECEIPT_UPDATED';\nexport const ON_DELIVERY_RECEIPT_UPDATED = 'ON_DELIVERY_RECEIPT_UPDATED';\n\nexport const CHANNEL_REPLACED_TO_TOP = 'CHANNEL_REPLACED_TO_TOP';\nexport const CHANNEL_LIST_PARAMS_UPDATED = 'CHANNEL_LIST_PARAMS_UPDATED';\n","import { GroupChannelHandler } from '@sendbird/chat/groupChannel';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nconst DELIVERY_RECIPT = 'delivery_receipt';\n\nconst createEventHandler = ({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  logger,\n}) => {\n  const ChannelHandler = new GroupChannelHandler({\n    onChannelChanged: (channel) => {\n      logger.info('ChannelList: onChannelChanged', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_CHANGED,\n        payload: channel,\n      });\n    },\n    onChannelDeleted: (channelUrl) => {\n      logger.info('ChannelList: onChannelDeleted', channelUrl);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_DELETED,\n        payload: channelUrl,\n      });\n    },\n    onUserJoined: (channel) => {\n      logger.info('ChannelList: onUserJoined', channel);\n      if (channel?.lastMessage) {\n        channelListDispatcher({\n          type: channelActions.ON_USER_JOINED,\n          payload: channel,\n        });\n      }\n    },\n    onUserReceivedInvitation: (channel, inviter, invitees) => {\n      logger.info('ChannelList: onUserReceivedInvitation', { channel, inviter, invitees });\n      const { currentUser } = sdk;\n      const isInvited = invitees.find((user) => user?.userId === currentUser?.userId);\n      if (isInvited) {\n        channelListDispatcher({\n          type: channelActions.USER_INVITED,\n          payload: channel,\n        });\n      }\n    },\n    onUserBanned: (channel, user) => {\n      const { currentUser } = sdk;\n      logger.info('Channel: onUserBanned', channel);\n      if (user.userId === currentUser.userId) {\n        channelListDispatcher({\n          type: channelActions.ON_USER_LEFT,\n          payload: {\n            channel,\n            isMe: true,\n          },\n        });\n      } else {\n        channelListDispatcher({\n          type: channelActions.ON_USER_LEFT,\n          payload: {\n            channel,\n            isMe: false,\n          },\n        });\n      }\n    },\n    onUserLeft: (channel, leftUser) => {\n      const { currentUser } = sdk;\n      const isMe = (currentUser.userId === leftUser.userId);\n      logger.info('ChannelList: onUserLeft', channel);\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe,\n        },\n      });\n    },\n\n    onReadStatus: (channel) => {\n      logger.info('ChannelList: onReadStatus', channel);\n      channelListDispatcher({\n        type: channelActions.ON_READ_RECEIPT_UPDATED,\n        payload: channel,\n      });\n    },\n\n    onDeliveryReceiptUpdated: (channel) => {\n      logger.info('ChannelList: onDeliveryReceiptUpdated', channel);\n      if (channel?.lastMessage) {\n        channelListDispatcher({\n          type: channelActions.ON_DELIVERY_RECEIPT_UPDATED,\n          payload: channel,\n        });\n      }\n    },\n\n    onMessageUpdated: (channel, message) => {\n      if (channel?.lastMessage.isEqual(message)) {\n        logger.info('ChannelList: onMessageUpdated', channel);\n        channelListDispatcher({\n          type: channelActions.ON_LAST_MESSAGE_UPDATED,\n          payload: channel,\n        });\n      }\n    },\n\n    onChannelHidden: (channel) => {\n      logger.info('ChannelList: onChannelHidden', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_ARCHIVED,\n        payload: channel,\n      });\n    },\n\n    onChannelFrozen: (channel) => {\n      logger.info('ChannelList: onChannelFrozen', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_FROZEN,\n        payload: channel,\n      });\n    },\n\n    onChannelUnfrozen: (channel) => {\n      logger.info('ChannelList: onChannelUnfrozen', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_UNFROZEN,\n        payload: channel,\n      });\n    },\n  });\n\n  logger.info('ChannelList: Added channelHandler');\n  sdk.groupChannel.addGroupChannelHandler(sdkChannelHandlerId, ChannelHandler);\n};\n\nconst createChannelListQuery = ({ sdk, userFilledChannelListQuery = {} }) => {\n  const param = {};\n  param.includeEmpty = false;\n  param.limit = 20; // The value of pagination limit could be set up to 100.\n  param.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n\n  if (userFilledChannelListQuery) {\n    Object.keys(userFilledChannelListQuery).forEach((key) => {\n      param[key] = userFilledChannelListQuery[key];\n    });\n  }\n\n  const channelListQuery = sdk.groupChannel.createMyGroupChannelListQuery(param);\n\n  return channelListQuery;\n};\n\n/**\n * Setup event listener\n * create channel source query\n * addloading screen\n */\nfunction setupChannelList({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  setChannelSource,\n  onChannelSelect,\n  userFilledChannelListQuery,\n  logger,\n  sortChannelList,\n  disableAutoSelect,\n  setChannelsToMarkAsRead,\n}) {\n  if (sdk?.groupChannel) {\n    createEventHandler({\n      sdk,\n      channelListDispatcher,\n      sdkChannelHandlerId,\n      logger,\n    });\n  } else {\n    logger.warning('ChannelList - createEventHandler: sdk or sdk.ChannelHandler does not exist', sdk);\n  }\n\n  logger.info('ChannelList - creating query', { userFilledChannelListQuery });\n  const channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });\n  logger.info('ChannelList - created query', channelListQuery);\n  setChannelSource(channelListQuery);\n\n  channelListDispatcher({\n    type: channelActions.INIT_CHANNELS_START,\n  });\n\n  if (userFilledChannelListQuery) {\n    logger.info('ChannelList - setting up channelListQuery', channelListQuery);\n    channelListDispatcher({\n      type: channelActions.CHANNEL_LIST_PARAMS_UPDATED,\n      payload: {\n        channelListQuery,\n        currentUserId: sdk && sdk.currentUser && sdk.currentUser.userId,\n      },\n    });\n  }\n\n  logger.info('ChannelList - fetching channels');\n  if (channelListQuery.hasNext) {\n    channelListQuery.next().then((channelList) => {\n      logger.info('ChannelList - fetched channels', channelList);\n      // select first channel\n      logger.info('ChannelList - highlight channel', channelList[0]);\n      let sortedChannelList = channelList;\n      if (sortChannelList && typeof sortChannelList === 'function') {\n        sortedChannelList = sortChannelList(channelList);\n        logger.info('ChannelList - channel list sorted', sortedChannelList);\n      }\n      if (!disableAutoSelect) {\n        onChannelSelect(sortedChannelList[0]);\n      }\n      channelListDispatcher({\n        type: channelActions.INIT_CHANNELS_SUCCESS,\n        payload: { channelList: sortedChannelList, disableAutoSelect },\n      });\n      const canSetMarkAsDelivered = sdk?.appInfo?.premiumFeatureList\n        ?.find((feature) => (feature === DELIVERY_RECIPT));\n\n      if (canSetMarkAsDelivered) {\n        setChannelsToMarkAsRead(sortedChannelList);\n      }\n    }).catch((err) => {\n      if (err) {\n        logger.error('ChannelList - couldnt fetch channels', err);\n        channelListDispatcher({\n          type: channelActions.INIT_CHANNELS_FAILURE,\n        });\n      }\n    });\n  } else {\n    logger.info('ChannelList - there are no more channels');\n  }\n}\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (pubSub, channelListDispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub) return subscriber;\n  subscriber.set(topics.CREATE_CHANNEL, pubSub.subscribe(topics.CREATE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: 'CREATE_CHANNEL',\n      payload: channel,\n    });\n  }));\n\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    const updatedChannel = channel;\n    if (updatedChannel?.lastMessage?.messageId === message.messageId) {\n      updatedChannel.lastMessage = message;\n    }\n    if (channel) {\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: updatedChannel,\n      });\n    }\n  }));\n\n  subscriber.set(topics.LEAVE_CHANNEL, pubSub.subscribe(topics.LEAVE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.LEAVE_CHANNEL_SUCCESS,\n      payload: channel?.url,\n    });\n  }));\n\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.CHANNEL_REPLACED_TO_TOP,\n      payload: channel,\n    });\n  }));\n\n  return subscriber;\n};\n\nexport default setupChannelList;\n","export default {\n  // we might not need this initialized state -> should remove\n  initialized: false,\n  loading: true,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n  channelListQuery: null,\n  currentUserId: '',\n  disableAutoSelect: false,\n};\n","import { filterChannelListParams, getChannelsWithUpsertedChannel } from '../../../utils';\nimport * as actions from './actionTypes';\nimport initialState from './initialState';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.INIT_CHANNELS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.RESET_CHANNEL_LIST:\n      return initialState;\n    case actions.INIT_CHANNELS_SUCCESS: {\n      const { channelList, disableAutoSelect } = action.payload;\n      return {\n        ...state,\n        initialized: true,\n        loading: false,\n        allChannels: channelList,\n        disableAutoSelect,\n        currentChannel: (\n          !disableAutoSelect\n          && channelList\n          && channelList.length\n          && channelList.length > 0\n        )\n          ? channelList[0]\n          : null,\n      };\n    }\n    case actions.FETCH_CHANNELS_SUCCESS: {\n      const currentChannels = state.allChannels.map((c) => c.url);\n      const filteredChannels = action.payload.filter(\n        ({ url }) => !(currentChannels.find((c) => c === url)),\n      );\n      return {\n        ...state,\n        allChannels: [\n          ...state.allChannels,\n          ...filteredChannels,\n        ],\n      };\n    }\n    case actions.USER_INVITED: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        return {\n          ...state,\n          currentChannel: channel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: [channel, ...state.allChannels.filter((ch) => ch.url !== channel?.url)],\n      };\n    }\n    case actions.CREATE_CHANNEL: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        return {\n          ...state,\n          currentChannel: channel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: [channel, ...state.allChannels.filter((ch) => ch.url !== channel?.url)],\n        currentChannel: channel,\n      };\n    }\n    case actions.ON_CHANNEL_ARCHIVED: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n          // TODO: Check if we have to set current channel\n        }\n      }\n      const nextChannel = (channel?.url === state.currentChannel?.url)\n        ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n        : state.currentChannel;\n      return {\n        ...state,\n        allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n      };\n    }\n    case actions.LEAVE_CHANNEL_SUCCESS:\n    case actions.ON_CHANNEL_DELETED: {\n      const channelUrl = action.payload;\n      return {\n        ...state,\n        currentChannel: (channelUrl === state.currentChannel?.url)\n          ? state.allChannels[0]\n          : state.currentChannel,\n        allChannels: state.allChannels.filter(({ url }) => url !== channelUrl),\n      };\n    }\n    case actions.ON_USER_LEFT: {\n      const { channel, isMe } = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          const filteredChannels = getChannelsWithUpsertedChannel(state.allChannels, channel);\n          const nextChannel = (isMe && (channel?.url === state.currentChannel?.url))\n            ? filteredChannels[0]\n            : state.currentChannel;\n          return {\n            ...state,\n            currentChannel: state.disableAutoSelect ? null : nextChannel,\n            allChannels: filteredChannels,\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[0]\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n        };\n      }\n      const filteredChannels = state.allChannels.filter((c) => !(c.url === channel?.url && isMe));\n      const nextChannel = (isMe && (channel?.url === state.currentChannel?.url))\n        ? filteredChannels[0]\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: filteredChannels,\n      };\n    }\n    case actions.ON_USER_JOINED:\n    case actions.ON_CHANNEL_CHANGED:\n    case actions.ON_READ_RECEIPT_UPDATED:\n    case actions.ON_DELIVERY_RECEIPT_UPDATED: {\n      const { allChannels = [] } = state;\n      const channel = action.payload;\n      const { unreadMessageCount } = channel;\n      if (!channel?.lastMessage) return state;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(allChannels, channel),\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n        };\n      }\n      // if its only an unread message count change, dont push to top\n      if (unreadMessageCount === 0) {\n        const currentChannel = allChannels.find(({ url }) => url === channel?.url);\n        const currentUnreadCount = currentChannel && currentChannel.unreadMessageCount;\n        if (currentUnreadCount === 0) {\n          return {\n            ...state,\n            allChannels: state.allChannels.map((ch) => (ch.url === channel?.url ? channel : ch)),\n          };\n        }\n      }\n      return {\n        ...state,\n        allChannels: [\n          channel,\n          ...state.allChannels.filter(({ url }) => url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n    case actions.SHOW_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: true,\n      };\n    case actions.HIDE_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: false,\n      };\n    case actions.ON_LAST_MESSAGE_UPDATED: {\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => (\n          channel?.url === action.payload.url ? action.payload : channel)),\n      };\n    }\n    case actions.ON_CHANNEL_FROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel?.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = true;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.ON_CHANNEL_UNFROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel?.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = false;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.CHANNEL_REPLACED_TO_TOP: {\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter((channel) => channel?.url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.CHANNEL_LIST_PARAMS_UPDATED:\n      return {\n        ...state,\n        currentUserId: action.payload.currentUserId,\n        channelListQuery: action.payload.channelListQuery,\n      };\n    default:\n      return state;\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  useReducer,\n  useMemo,\n} from 'react';\n\nimport type { User } from '@sendbird/chat';\nimport {\n  GroupChannel,\n  GroupChannelCreateParams,\n  GroupChannelHandler,\n  SendbirdGroupChat,\n  GroupChannelListQuery as GroupChannelListQuerySb,\n  GroupChannelUserIdsFilter,\n} from '@sendbird/chat/groupChannel';\n\nimport { RenderUserProfileProps } from '../../../types';\n\nimport setupChannelList, {\n  pubSubHandler,\n  pubSubHandleRemover,\n} from '../utils';\nimport { uuidv4 } from '../../../utils/uuid';\nimport { noop } from '../../../utils/utils';\n\nimport * as channelListActions from '../dux/actionTypes';\n\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { CustomUseReducerDispatcher } from '../../../lib/SendbirdState';\nimport channelListReducers from '../dux/reducers';\nimport channelListInitialState from '../dux/initialState';\nimport { CHANNEL_TYPE } from '../../CreateChannel/types';\n\ninterface ApplicationUserListQuery {\n  limit?: number;\n  userIdsFilter?: Array<string>;\n  metaDataKeyFilter?: string;\n  metaDataValuesFilter?: Array<string>;\n}\n\ninterface GroupChannelListQuery {\n  limit?: number;\n  includeEmpty?: boolean;\n  order?: 'latest_last_message' | 'chronological' | 'channel_name_alphabetical' | 'metadata_value_alphabetical';\n  userIdsExactFilter?: Array<string>;\n  userIdsIncludeFilter?: Array<string>;\n  userIdsIncludeFilterQueryType?: 'AND' | 'OR';\n  nicknameContainsFilter?: string;\n  channelNameContainsFilter?: string;\n  customTypesFilter?: Array<string>;\n  customTypeStartsWithFilter?: string;\n  channelUrlsFilter?: Array<string>;\n  superChannelFilter?: 'all' | 'super' | 'nonsuper';\n  publicChannelFilter?: 'all' | 'public' | 'private';\n  metadataOrderKeyFilter?: string;\n  memberStateFilter?: 'all' | 'joined_only' | 'invited_only' | 'invited_by_friend' | 'invited_by_non_friend';\n  hiddenChannelFilter?: 'unhidden_only' | 'hidden_only' | 'hidden_allow_auto_unhide' | 'hidden_prevent_auto_unhide';\n  unreadChannelFilter?: 'all' | 'unread_message';\n  includeFrozen?: boolean;\n  userIdsFilter?: GroupChannelUserIdsFilter;\n}\n\ninterface ChannelListQueries {\n  applicationUserListQuery?: ApplicationUserListQuery;\n  channelListQuery?: GroupChannelListQuery;\n}\n\ntype OverrideInviteUserType = {\n  users: Array<string>;\n  onClose: () => void;\n  channelType: CHANNEL_TYPE;\n};\n\nexport interface ChannelListProviderProps {\n  allowProfileEdit?: boolean;\n  onBeforeCreateChannel?(users: Array<string>): GroupChannelCreateParams;\n  overrideInviteUser?(params: OverrideInviteUserType): void;\n  onThemeChange?(theme: string): void;\n  onProfileEditSuccess?(user: User): void;\n  onChannelSelect?(channel: GroupChannel): void;\n  sortChannelList?: (channels: GroupChannel[]) => GroupChannel[];\n  queries?: ChannelListQueries;\n  children?: React.ReactElement;\n  className?: string | string[];\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n  disableUserProfile?: boolean;\n  disableAutoSelect?: boolean;\n  typingChannels?: Array<GroupChannel>;\n  isTypingIndicatorEnabled?: boolean;\n  isMessageReceiptStatusEnabled?: boolean;\n}\n\nexport interface ChannelListProviderInterface extends ChannelListProviderProps {\n  initialized: boolean;\n  loading: boolean;\n  allChannels: GroupChannel[];\n  currentChannel: GroupChannel;\n  showSettings: boolean;\n  channelListQuery: GroupChannelListQuery;\n  currentUserId: string;\n  channelListDispatcher: CustomUseReducerDispatcher;\n  channelSource: GroupChannelListQuerySb;\n}\n\ninterface ChannelListStoreInterface {\n  initialized: boolean;\n  loading: boolean;\n  allChannels: GroupChannel[];\n  currentChannel: GroupChannel;\n  showSettings: boolean;\n  channelListQuery: GroupChannelListQuery;\n  currentUserId: string;\n  disableAutoSelect: boolean;\n}\n\nconst ChannelListContext = React.createContext<ChannelListProviderInterface | null>({\n  disableUserProfile: true,\n  allowProfileEdit: true,\n  onBeforeCreateChannel: null,\n  onThemeChange: null,\n  onProfileEditSuccess: null,\n  onChannelSelect: null,\n  queries: {},\n  className: null,\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n  channelListQuery: {},\n  currentUserId: null,\n  channelListDispatcher: null,\n  channelSource: null,\n  typingChannels: [],\n});\n\nconst ChannelListProvider: React.FC<ChannelListProviderProps> = (props: ChannelListProviderProps) => {\n  // destruct props\n  const {\n    children,\n    className,\n    disableUserProfile,\n    allowProfileEdit,\n    queries,\n    onProfileEditSuccess,\n    onThemeChange,\n    onBeforeCreateChannel,\n    sortChannelList,\n    overrideInviteUser,\n    disableAutoSelect,\n    isTypingIndicatorEnabled = null,\n    isMessageReceiptStatusEnabled = null,\n  } = props;\n  const onChannelSelect = props?.onChannelSelect || noop;\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const { config, stores } = globalStore;\n  const { sdkStore } = stores;\n  const { pubSub, logger, onUserProfileMessage } = config;\n  const {\n    disableMarkAsDelivered = false,\n    isTypingIndicatorEnabledOnChannelList = false,\n    isMessageReceiptStatusEnabledOnChannelList = false,\n  } = config;\n  const sdk = sdkStore?.sdk as SendbirdGroupChat;\n\n  // derive some variables\n  // enable if it is true atleast once(both are flase by default)\n  const userDefinedDisableUserProfile = disableUserProfile || config?.disableUserProfile;\n  const userDefinedRenderProfile = config?.renderUserProfile;\n  const enableEditProfile = allowProfileEdit || config?.allowProfileEdit;\n\n  const userFilledChannelListQuery = queries?.channelListQuery;\n  const userFilledApplicationUserListQuery = queries?.applicationUserListQuery;\n\n  const sdkIntialized = sdkStore?.initialized;\n\n  const [channelListStore, channelListDispatcher] = useReducer(\n    channelListReducers,\n    channelListInitialState,\n  ) as [ChannelListStoreInterface, CustomUseReducerDispatcher];\n  const { loading, currentChannel } = channelListStore;\n\n  const [channelSource, setChannelSource] = useState<GroupChannelListQuerySb>();\n  const [typingChannels, setTypingChannels] = useState<Array<GroupChannel>>([]);\n\n  const [channelsTomarkAsRead, setChannelsToMarkAsRead] = useState([]);\n  useEffect(() => {\n    // https://stackoverflow.com/a/60907638\n    let isMounted = true;\n    if (channelsTomarkAsRead?.length > 0 && !disableMarkAsDelivered) {\n      channelsTomarkAsRead?.forEach((c, idx) => {\n        // Plan-based rate limits - minimum limit is 5 requests per second\n        setTimeout(() => {\n          if (isMounted) {\n            c?.markAsDelivered();\n          }\n        }, 2000 * idx);\n      });\n    }\n    return () => {\n      isMounted = false;\n    }\n  }, [channelsTomarkAsRead]);\n\n  useEffect(() => {\n    const subscriber = pubSubHandler(pubSub, channelListDispatcher);\n    return () => {\n      pubSubHandleRemover(subscriber);\n    };\n  }, [sdkIntialized]);\n\n  useEffect(() => {\n    const sdkChannelHandlerId = uuidv4();\n    if (sdkIntialized) {\n      logger.info('ChannelList: Setup channelHandlers');\n      setupChannelList({\n        sdk,\n        sdkChannelHandlerId,\n        channelListDispatcher,\n        setChannelSource,\n        onChannelSelect,\n        userFilledChannelListQuery,\n        logger,\n        sortChannelList,\n        disableAutoSelect,\n        setChannelsToMarkAsRead,\n      });\n    } else {\n      logger.info('ChannelList: Removing channelHandlers');\n      // remove previous channelHandlers\n      if (sdk?.groupChannel?.removeGroupChannelHandler) {\n        sdk.groupChannel.removeGroupChannelHandler(sdkChannelHandlerId);\n      }\n      // remove channelSource\n      setChannelSource(null);\n      // cleanup\n      channelListDispatcher({\n        type: channelListActions.RESET_CHANNEL_LIST,\n        payload: null,\n      });\n    }\n    return () => {\n      logger.info('ChannelList: Removing channelHandlers');\n      if (sdk?.groupChannel?.removeGroupChannelHandler) {\n        sdk?.groupChannel?.removeGroupChannelHandler(sdkChannelHandlerId);\n      }\n    };\n  }, [sdkIntialized, userFilledChannelListQuery, sortChannelList]);\n\n  useEffect(() => {\n    let typingHandlerId = null;\n    if (sdk?.groupChannel?.addGroupChannelHandler) {\n      typingHandlerId = uuidv4();\n      const handler = new GroupChannelHandler({\n        onTypingStatusUpdated: (channel) => {\n          const typingMemberCount = channel?.getTypingUsers()?.length\n          const channelList = typingChannels.filter(ch => ch.url !== channel.url)\n          if (typingMemberCount > 0) {\n            setTypingChannels([...channelList, channel])\n          } else {\n            setTypingChannels(channelList)\n          }\n        },\n        onUnreadMemberStatusUpdated(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n        },\n        onUndeliveredMemberStatusUpdated(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n        },\n        onMessageUpdated(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n          sdk.groupChannel.getChannelWithoutCache(channel.url)\n            .then((ch) => {\n              channelListDispatcher({\n                type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n                payload: ch,\n              });\n            });\n        },\n        onMentionReceived(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n          sdk.groupChannel.getChannelWithoutCache(channel.url)\n            .then((ch) => {\n              channelListDispatcher({\n                type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n                payload: ch,\n              });\n            });\n        },\n      });\n      sdk?.groupChannel?.addGroupChannelHandler(typingHandlerId, handler);\n    }\n    return () => {\n      if (sdk?.groupChannel?.removeGroupChannelHandler && typingHandlerId) {\n        sdk.groupChannel.removeGroupChannelHandler(typingHandlerId);\n      }\n    }\n  }, [sdk?.currentUser?.userId]);\n\n  const queries_ = useMemo(() => {\n    return {\n      applicationUserListQuery: userFilledApplicationUserListQuery,\n      channelListQuery: userFilledChannelListQuery,\n    };\n  }, [\n    userFilledApplicationUserListQuery,\n    userFilledChannelListQuery,\n  ])\n\n  const { allChannels } = channelListStore;\n  const sortedChannels = (sortChannelList && typeof sortChannelList === 'function')\n    ? sortChannelList(allChannels)\n    : allChannels;\n\n  if (sortedChannels.length !== allChannels.length) {\n    const warning = `ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems`;\n    // eslint-disable-next-line no-console\n    console.warn(warning, { before: allChannels, after: sortedChannels });\n    logger.warning(warning, { before: allChannels, after: sortedChannels });\n  }\n\n  // Set current channel (by on_channel_selected event)\n  useEffect(() => {\n    if (!sdk || !sdk.groupChannel || !currentChannel || !currentChannel?.url) {\n      return;\n    }\n    sdk.groupChannel.getChannel(currentChannel.url).then((groupChannel) => {\n      if (groupChannel) {\n        onChannelSelect(groupChannel);\n      } else {\n        onChannelSelect(null);\n      }\n    });\n  }, [currentChannel?.url]);\n\n  return (\n    <ChannelListContext.Provider value={{\n      className,\n      disableUserProfile,\n      queries: queries_,\n      onProfileEditSuccess,\n      onThemeChange,\n      onBeforeCreateChannel,\n      overrideInviteUser,\n      onChannelSelect,\n      sortChannelList,\n      loading,\n      allowProfileEdit: enableEditProfile,\n      channelListDispatcher,\n      channelSource,\n      ...channelListStore,\n      allChannels: sortedChannels,\n      typingChannels,\n      isTypingIndicatorEnabled: (isTypingIndicatorEnabled !== null) ? isTypingIndicatorEnabled : isTypingIndicatorEnabledOnChannelList,\n      isMessageReceiptStatusEnabled: (isMessageReceiptStatusEnabled !== null) ? isMessageReceiptStatusEnabled : isMessageReceiptStatusEnabledOnChannelList,\n    }}>\n      <UserProfileProvider\n        disableUserProfile={userDefinedDisableUserProfile}\n        renderUserProfile={userDefinedRenderProfile}\n        onUserProfileMessage={onUserProfileMessage}\n      >\n        <div className={`sendbird-channel-list ${className}`}>\n          {children}\n        </div>\n      </UserProfileProvider>\n    </ChannelListContext.Provider>\n  );\n};\n\nfunction useChannelListContext(): ChannelListProviderInterface {\n  const context: ChannelListProviderInterface = useContext(ChannelListContext);\n  return context;\n}\n\nexport {\n  ChannelListProvider,\n  useChannelListContext,\n};\n"],"names":["RESET_CHANNEL_LIST","CREATE_CHANNEL","USER_INVITED","LEAVE_CHANNEL_SUCCESS","SET_CURRENT_CHANNEL","SHOW_CHANNEL_SETTINGS","HIDE_CHANNEL_SETTINGS","FETCH_CHANNELS_START","FETCH_CHANNELS_SUCCESS","FETCH_CHANNELS_FAILURE","INIT_CHANNELS_START","INIT_CHANNELS_SUCCESS","INIT_CHANNELS_FAILURE","ON_USER_JOINED","ON_CHANNEL_DELETED","ON_LAST_MESSAGE_UPDATED","ON_USER_LEFT","ON_CHANNEL_CHANGED","ON_CHANNEL_ARCHIVED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_READ_RECEIPT_UPDATED","ON_DELIVERY_RECEIPT_UPDATED","CHANNEL_REPLACED_TO_TOP","CHANNEL_LIST_PARAMS_UPDATED","DELIVERY_RECIPT","createEventHandler","sdk","sdkChannelHandlerId","channelListDispatcher","logger","ChannelHandler","GroupChannelHandler","onChannelChanged","channel","info","type","channelActions","payload","onChannelDeleted","channelUrl","onUserJoined","lastMessage","onUserReceivedInvitation","inviter","invitees","currentUser","isInvited","find","user","userId","onUserBanned","isMe","onUserLeft","leftUser","onReadStatus","onDeliveryReceiptUpdated","onMessageUpdated","message","isEqual","onChannelHidden","onChannelFrozen","onChannelUnfrozen","groupChannel","addGroupChannelHandler","createChannelListQuery","userFilledChannelListQuery","param","includeEmpty","limit","order","Object","keys","forEach","key","channelListQuery","createMyGroupChannelListQuery","setupChannelList","setChannelSource","onChannelSelect","sortChannelList","disableAutoSelect","setChannelsToMarkAsRead","warning","currentUserId","hasNext","next","then","channelList","sortedChannelList","canSetMarkAsDelivered","appInfo","premiumFeatureList","feature","catch","err","error","pubSubHandleRemover","subscriber","s","remove","pubSubHandler","pubSub","Map","set","topics","subscribe","msg","updatedChannel","messageId","url","initialized","loading","allChannels","currentChannel","showSettings","reducer","state","action","actions","_objectSpread","initialState","length","currentChannels","map","c","filteredChannels","filter","filterChannelListParams","getChannelsWithUpsertedChannel","ch","nextChannel","unreadMessageCount","currentUnreadCount","isFrozen","ChannelListContext","React","createContext","disableUserProfile","allowProfileEdit","onBeforeCreateChannel","onThemeChange","onProfileEditSuccess","queries","className","channelSource","typingChannels","ChannelListProvider","props","children","overrideInviteUser","_b","isTypingIndicatorEnabled","_c","isMessageReceiptStatusEnabled","noop","globalStore","useSendbirdStateContext","config","stores","sdkStore","onUserProfileMessage","_d","disableMarkAsDelivered","_e","isTypingIndicatorEnabledOnChannelList","_f","isMessageReceiptStatusEnabledOnChannelList","userDefinedDisableUserProfile","userDefinedRenderProfile","renderUserProfile","enableEditProfile","userFilledApplicationUserListQuery","applicationUserListQuery","sdkIntialized","_g","useReducer","channelListReducers","channelListInitialState","channelListStore","_h","useState","_j","setTypingChannels","_k","channelsTomarkAsRead","useEffect","isMounted","idx","setTimeout","markAsDelivered","uuidv4","_a","removeGroupChannelHandler","channelListActions","typingHandlerId","handler","onTypingStatusUpdated","typingMemberCount","getTypingUsers","__spreadArray","onUnreadMemberStatusUpdated","onUndeliveredMemberStatusUpdated","getChannelWithoutCache","onMentionReceived","queries_","useMemo","sortedChannels","console","warn","before","after","getChannel","__assign","UserProfileProvider","concat","useChannelListContext","context","useContext"],"mappings":"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"}