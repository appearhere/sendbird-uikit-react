{"version":3,"file":"index-3bea5f1c.js","sources":["../../src/utils/index.ts"],"sourcesContent":["import { AdminMessage, Emoji, EmojiCategory, EmojiContainer, FileMessage, GroupChannel, GroupChannelListQuery, Member, MessageListParams, OpenChannel, Reaction, SendBirdInstance, User, UserMessage } from \"sendbird\";\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n  AUDIO: [\n    'audio/aac',\n    'audio/midi',\n    'audio/x-midi',\n    'audio/mpeg',\n    'audio/ogg',\n    'audio/opus',\n    'audio/wav',\n    'audio/webm',\n    'audio/3gpp',\n    'audio/3gpp2',\n    'audio/mp3',\n  ],\n};\n\nexport interface UIKitMessageTypes {\n  ADMIN: \"ADMIN\",\n  TEXT: \"TEXT\",\n  FILE: \"FILE\",\n  THUMBNAIL: \"THUMBNAIL\",\n  OG: \"OG\",\n  UNKNOWN: \"UNKNOWN\",\n}\nconst UIKitMessageTypes: UIKitMessageTypes = {\n  ADMIN: \"ADMIN\",\n  TEXT: \"TEXT\",\n  FILE: \"FILE\",\n  THUMBNAIL: \"THUMBNAIL\",\n  OG: \"OG\",\n  UNKNOWN: \"UNKNOWN\",\n};\nexport interface UIKitFileTypes {\n  IMAGE: \"IMAGE\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  GIF: \"GIF\",\n  OTHERS: \"OTHERS\",\n}\nexport const UIKitFileTypes: UIKitFileTypes = {\n  IMAGE: \"IMAGE\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  GIF: \"GIF\",\n  OTHERS: \"OTHERS\",\n};\n\nexport interface SendingMessageStatus {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n}\nconst SendingMessageStatus: SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport interface OutgoingMessageStates {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ',\n  // delivered and read are only in group channel\n}\nconst OutgoingMessageStates: OutgoingMessageStates = {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ',\n};\n\nexport type CoreMessageType = AdminMessage | UserMessage | FileMessage;\n\nexport const isTextuallyNull = (text: string): boolean => {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\n\nexport const isImage = (type: string): boolean => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: string): boolean => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: string): boolean => type === 'image/gif';\nexport const isSupportedFileView = (type: string): boolean => isImage(type) || isVideo(type);\nexport const isAudio = (type: string): boolean => SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n\nexport const getUIKitFileTypes = (): UIKitFileTypes => ({ ...UIKitFileTypes });\nexport const getUIKitFileType = (type: string): string => {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\nexport const getOutgoingMessageStates = (): OutgoingMessageStates => ({ ...OutgoingMessageStates });\nexport const getOutgoingMessageState = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): string => {\n  if (message.sendingStatus === 'pending') return OutgoingMessageStates.PENDING;\n  if (message.sendingStatus === 'failed') return OutgoingMessageStates.FAILED;\n  if (channel?.isGroupChannel?.()) {\n    /* GroupChannel only */\n    if ((channel as GroupChannel).getUnreadMemberCount(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if ((channel as GroupChannel).getUndeliveredMemberCount(message) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') return OutgoingMessageStates.SENT;\n  return OutgoingMessageStates.NONE;\n};\nexport const isSentMessage = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.SENT\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isDeliveredMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isReadMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\n// TODO: Remove channel from the params, it seems unnecessary\nexport const isFailedMessage = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.FAILED\n);\nexport const isPendingMessage = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.PENDING\n);\nexport const isSentStatus = (state: string): boolean => (\n  state === OutgoingMessageStates.SENT\n  || state === OutgoingMessageStates.DELIVERED\n  || state === OutgoingMessageStates.READ\n);\n\nexport const isAdminMessage = (message: AdminMessage): boolean => (\n  message && (message.isAdminMessage?.() || (message['messageType'] && message.messageType === 'admin'))\n);\nexport const isUserMessage = (message: UserMessage): boolean => (\n  message && (message.isUserMessage?.() || (message['messageType'] && message.messageType === 'user'))\n);\nexport const isFileMessage = (message: FileMessage): boolean => (\n  message && (message.isFileMessage?.() || (message['messageType'] && message.messageType === 'file'))\n);\n\nexport const isOGMessage = (message: UserMessage): boolean => !!(\n  message && isUserMessage(message) && message?.ogMetaData && message?.ogMetaData?.url\n);\nexport const isTextMessage = (message: UserMessage): boolean => isUserMessage(message) && !isOGMessage(message);\nexport const isThumbnailMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isSupportedFileView(message.type);\nexport const isImageMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isImage(message.type);\nexport const isVideoMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isVideo(message.type);\nexport const isGifMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isGif(message.type);\nexport const isAudioMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isAudio(message.type);\n\nexport const isEditedMessage = (message: UserMessage): boolean => isUserMessage(message) && (message?.updatedAt > 0);\nexport const isEnabledOGMessage = (message: UserMessage): boolean => (\n  (!message || !message.ogMetaData || !message.ogMetaData.url) ? false : true\n);\n\nexport const getUIKitMessageTypes = (): UIKitMessageTypes => ({ ...UIKitMessageTypes });\nexport const getUIKitMessageType = (message: CoreMessageType): string => {\n  if (isAdminMessage(message as AdminMessage)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message as UserMessage)) {\n    return isOGMessage(message as UserMessage) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n  if (isFileMessage(message as FileMessage)) {\n    return isThumbnailMessage(message as FileMessage) ? UIKitMessageTypes.THUMBNAIL : UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\nexport const getSendingMessageStatus = (): SendingMessageStatus => ({ ...SendingMessageStatus });\n\nconst reducer = (accumulator: Array<string>, currentValue: string | Array<string>): Array<any> => {\n  if (Array.isArray(currentValue)) {\n    return [...accumulator, ...currentValue];\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nexport const getClassName = (classNames: string | Array<string | Array<string>>): string => (\n  Array.isArray(classNames)\n    ? classNames.reduce(reducer, []).join(' ')\n    : classNames\n);\nexport const isReactedBy = (userId: string, reaction: Reaction): boolean => (\n  reaction.userIds.some((reactorUserId: string): boolean => reactorUserId === userId)\n);\ninterface StringSet {\n  TOOLTIP__YOU: string;\n  TOOLTIP__AND_YOU: string;\n  TOOLTIP__UNKNOWN_USER: string;\n}\nexport const getEmojiTooltipString = (reaction: Reaction, userId: string, memberNicknamesMap: Map<string, string>, stringSet: StringSet): string => {\n  let you = '';\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n  return (`${reaction.userIds\n    .filter((reactorUserId: string) => reactorUserId !== userId)\n    .map((reactorUserId: string) => (memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER))\n    .join(', ')}${you}`);\n};\n\n// TODO: Use the interface after language tranlsatation of Sendbird.js\ninterface UIKitStore {\n  stores: {\n    sdkStore: {\n      sdk: SendBirdInstance,\n    },\n    userStore: {\n      user: User,\n    },\n  },\n  config: {\n    useReaction: boolean,\n  }\n}\nexport const getCurrentUserId = (store: UIKitStore): string => (store?.stores?.userStore?.user?.userId);\nexport const getUseReaction = (store: UIKitStore, channel: GroupChannel | OpenChannel): boolean => {\n  if (!store?.config?.useReaction)\n    return false;\n  if (!store?.stores?.sdkStore?.sdk?.appInfo?.isUsingReaction)\n    return false;\n  if (channel?.isGroupChannel())\n    return !((channel as GroupChannel).isBroadcast || (channel as GroupChannel).isSuper);\n  return store?.config?.useReaction;\n};\n\nexport const isMessageSentByMe = (userId: string, message: UserMessage | FileMessage): boolean => (\n  (userId && message?.sender?.userId) && userId === message.sender.userId\n);\n\nconst URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const isUrl = (text: string): boolean => URL_REG.test(text);\n\nexport const truncateString = (fullStr: string, strLen?: number): string => {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const getEmojiListAll = (emojiContainer: EmojiContainer): Array<Emoji> => (\n  emojiContainer?.emojiCategories?.map((emojiCategory: EmojiCategory) => emojiCategory.emojis)\n    .reduce((prevArr: Array<Emoji>, currArr: Array<Emoji>) => prevArr.concat(currArr), [])\n);\nexport const getEmojiMapAll = (emojiContainer: EmojiContainer): Map<string, Emoji> => {\n  const emojiMap = new Map();\n  emojiContainer?.emojiCategories?.forEach((category: EmojiCategory) => {\n    category?.emojis?.forEach((emoji: Emoji): void => {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\n\nexport const getUserName = (user: User): string => (user?.friendName || user?.nickname || user?.userId);\nexport const getSenderName = (message: UserMessage | FileMessage): string => (message.sender && getUserName(message.sender));\n\nexport const hasSameMembers = <T>(a: T[], b: T[]): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n\n  for (let i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport const isFriend = (user: User): boolean => !!(user.friendDiscoveryKey || user.friendName);\n\nexport const filterMessageListParams = (params: MessageListParams, message: UserMessage | FileMessage): boolean => {\n  if (params?.messageType && params.messageType !== message.messageType) {\n    return false;\n  }\n  if (params?.customTypes?.length > 0) {\n    const customTypes = params.customTypes.filter((item) => item !== '*');\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params?.senderUserIds && params?.senderUserIds?.length > 0) {\n    if (message?.isUserMessage() || message.isFileMessage()) {\n      const messageSender = (message as UserMessage | FileMessage).sender || message['_sender'];\n      if (!params?.senderUserIds?.includes(messageSender?.userId)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (!params?.includeParentMessageInfo && (message?.parentMessageId || message?.parentMessage)) {\n    return false;\n  }\n  return true;\n};\n\ninterface SDKChannelListParamsPrivateProps extends GroupChannelListQuery {\n  _searchFilter: {\n    search_query: string,\n    search_fields: Array<'member_nickname' | 'channel_name'>,\n  };\n  _userIdsFilter: {\n    userIds: Array<string>,\n    includeMode: boolean,\n    queryType: 'AND' | 'OR',\n  };\n}\nexport const filterChannelListParams = (params: SDKChannelListParamsPrivateProps, channel: GroupChannel, currentUserId: string): boolean => {\n  if (!params?.includeEmpty && channel?.lastMessage && channel.lastMessage === null) {\n    return false;\n  }\n  if (params?._searchFilter?.search_query && params._searchFilter.search_fields?.length > 0) {\n    const searchFilter = params._searchFilter;\n    const searchQuery = searchFilter.search_query;\n    const searchFields = searchFilter.search_fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (!searchFields.some((searchField) => {\n        switch (searchField) {\n          case 'channel_name': {\n            return channel.name.toLowerCase().includes(searchQuery.toLowerCase());\n          }\n          case 'member_nickname': {\n            return channel.members.some((member: Member) => member.nickname.toLowerCase().includes(searchQuery.toLowerCase()));\n          }\n          default: {\n            return true;\n          }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n  if (params?._userIdsFilter?.userIds?.length > 0) {\n    const userIdsFilter = params._userIdsFilter;\n    const { includeMode, queryType } = userIdsFilter;\n    const userIds: string[] = userIdsFilter.userIds;\n    const memberIds = channel.members.map((member: Member) => member.userId);\n    if (!includeMode) { // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n      if (channel.members.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) { // inclusive\n      switch (queryType) {\n        case 'AND': {\n          if (userIds.some((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        case 'OR': {\n          if (userIds.every((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n  if (params?.includeEmpty === false && channel?.lastMessage === null) {\n    return false;\n  }\n  if (params?.includeFrozen === false && channel?.isFrozen === true) {\n    return false;\n  }\n  if (params?.customTypesFilter?.length > 0 && !params.customTypesFilter.includes(channel?.customType)) {\n    return false;\n  }\n  if (params?.customTypeStartsWithFilter && !new RegExp(`^${params.customTypeStartsWithFilter}`).test(channel?.customType)) {\n    return false;\n  }\n  if (params?.channelNameContainsFilter && !channel?.name?.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase())) {\n    return false;\n  }\n  if (params?.nicknameContainsFilter) {\n    const lowerCasedSubString = params.nicknameContainsFilter.toLowerCase();\n    if (channel?.members?.every((member: Member) => !member.nickname.toLowerCase().includes(lowerCasedSubString))) {\n      return false;\n    }\n  }\n  if (params?.channelUrlsFilter?.length > 0 && !params.channelUrlsFilter.includes(channel?.url)) {\n    return false;\n  }\n  if (params?.memberStateFilter) {\n    switch (params.memberStateFilter) {\n      case 'joined_only':\n        if (channel?.myMemberState !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if (channel?.myMemberState !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if (channel?.myMemberState !== 'invited' || !isFriend(channel.inviter)) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if (channel?.myMemberState !== 'invited' || isFriend(channel.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel?.isHidden || channel?.hiddenState !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!channel?.isHidden) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if (channel?.unreadMessageCount === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!channel?.isPublic) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel?.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!channel?.isSuper) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel?.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  return true;\n};\n\nexport const binarySearch = (list: Array<number>, number: number): number => {// [100, 99, 98, 97, ...]\n  const pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  const leftList = list.slice(0, pivot);\n  const rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return (leftList.length === 0) ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nexport const getChannelsWithUpsertedChannel = (channels: Array<GroupChannel>, channel: GroupChannel): Array<GroupChannel> => {\n  if (channels.some((ch: GroupChannel) => ch.url === channel.url)) {\n    return channels.map((ch: GroupChannel) => (ch.url === channel.url ? channel : ch));\n  }\n  const targetIndex = binarySearch(\n    channels.map((channel: GroupChannel) => channel?.lastMessage?.createdAt || channel?.createdAt),\n    channel?.lastMessage?.createdAt || channel?.createdAt\n  );\n  return [...channels.slice(0, targetIndex), channel, ...channels.slice(targetIndex, channels.length)];\n};\n"],"names":["SUPPORTED_MIMES","IMAGE","VIDEO","AUDIO","UIKitMessageTypes","ADMIN","TEXT","FILE","THUMBNAIL","OG","UNKNOWN","UIKitFileTypes","GIF","OTHERS","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","OutgoingMessageStates","SENT","DELIVERED","READ","isTextuallyNull","text","isImage","type","indexOf","isVideo","isGif","isSupportedFileView","isAudio","getUIKitFileTypes","__assign","getUIKitFileType","getOutgoingMessageStates","getOutgoingMessageState","channel","message","sendingStatus","_a","isGroupChannel","call","getUnreadMemberCount","getUndeliveredMemberCount","isSentMessage","isFailedMessage","isPendingMessage","isSentStatus","state","isAdminMessage","messageType","isUserMessage","isFileMessage","isOGMessage","ogMetaData","url","isTextMessage","isThumbnailMessage","isImageMessage","isVideoMessage","isGifMessage","isAudioMessage","isEditedMessage","updatedAt","getUIKitMessageTypes","getUIKitMessageType","getSendingMessageStatus","reducer","accumulator","currentValue","Array","isArray","__spreadArray","push","getClassName","classNames","reduce","join","isReactedBy","userId","reaction","userIds","some","reactorUserId","getEmojiTooltipString","memberNicknamesMap","stringSet","you","length","TOOLTIP__YOU","TOOLTIP__AND_YOU","concat","filter","map","get","TOOLTIP__UNKNOWN_USER","URL_REG","isUrl","test","truncateString","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","copyToClipboard","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","getEmojiListAll","emojiContainer","emojiCategories","emojiCategory","emojis","prevArr","currArr","getEmojiMapAll","emojiMap","Map","forEach","category","emoji","key","set","getUserName","user","friendName","nickname","getSenderName","sender","hasSameMembers","a","b","sortedA","sort","sortedB","i","isFriend","friendDiscoveryKey","filterMessageListParams","params","customTypes","item","includes","customType","senderUserIds","_b","messageSender","_c","includeParentMessageInfo","parentMessageId","parentMessage","filterChannelListParams","currentUserId","includeEmpty","lastMessage","_searchFilter","search_query","search_fields","searchFilter","searchQuery_1","searchFields","searchField","name","toLowerCase","members","member","_d","_userIdsFilter","userIdsFilter","includeMode","queryType","memberIds_1","every","includeFrozen","isFrozen","_e","customTypesFilter","customTypeStartsWithFilter","RegExp","channelNameContainsFilter","_f","nicknameContainsFilter","lowerCasedSubString_1","_g","_h","channelUrlsFilter","memberStateFilter","myMemberState","inviter","hiddenChannelFilter","isHidden","hiddenState","unreadChannelFilter","unreadMessageCount","publicChannelFilter","isPublic","superChannelFilter","isSuper","binarySearch","list","number","pivot","leftList","slice","rightList","getChannelsWithUpsertedChannel","channels","ch","targetIndex","createdAt"],"mappings":"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"}