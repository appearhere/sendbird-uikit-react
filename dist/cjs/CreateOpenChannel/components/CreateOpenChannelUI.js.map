{"version":3,"file":"CreateOpenChannelUI.js","sources":["../../../../src/smart-components/CreateOpenChannel/components/CreateOpenChannelUI/index.tsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport './index.scss';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Avatar from '../../../../ui/Avatar';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport Modal from '../../../../ui/Modal';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Input, { InputLabel } from '../../../../ui/Input';\nimport Label, { LabelColors, LabelTypography } from '../../../../ui/Label';\nimport TextButton from '../../../../ui/TextButton';\nimport { useCreateOpenChannelContext } from '../../context/CreateOpenChannelProvider';\n\nexport interface CreateOpenChannelUIProps {\n  closeModal?: () => void;\n  renderHeader?: () => React.ReactElement;\n  renderProfileInput?: () => React.ReactElement;\n}\n\nfunction CreateOpenChannelUI({\n  closeModal,\n  renderHeader,\n  renderProfileInput,\n}: CreateOpenChannelUIProps): React.ReactElement {\n  const [newFile, setNewFile] = useState(null);\n  const [currentImage, setCurrentImg] = useState(null);\n  const inputFormRef = useRef(null);\n  const inputFileRef = useRef(null);\n  const inputTextRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    logger,\n    createNewOpenChannel,\n  } = useCreateOpenChannelContext();\n  return (\n    <div className=\"sendbird-create-open-channel-ui\">\n      <Modal\n        isFullScreenOnMobile\n        titleText={stringSet.CREATE_OPEN_CHANNEL_LIST__TITLE}\n        submitText={stringSet.CREATE_OPEN_CHANNEL_LIST__SUBMIT}\n        type={ButtonTypes.PRIMARY}\n        onCancel={closeModal}\n        renderHeader={renderHeader}\n        onSubmit={() => {\n          const channelName = inputTextRef?.current?.value;\n          if (!channelName) {\n            logger.warning('CreateOpenChannelUI: You should fill the channel name');\n            return;\n          }\n          createNewOpenChannel({\n            name: channelName,\n            coverUrlOrImage: newFile,\n          });\n          closeModal();\n        }}\n      >\n        <>\n          {renderProfileInput?.() || (\n            <form\n              className=\"sendbird-create-open-channel-ui__profile-input\"\n              ref={inputFormRef}\n              onSubmit={(e) => { e.preventDefault(); }}\n            >\n              <InputLabel>\n                {stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION}\n              </InputLabel>\n              <div className=\"sendbird-create-open-channel-ui__profile-input__img-section\">\n                <div className=\"sendbird-create-open-channel-ui__profile-input__img-section__avatar\">\n                  {currentImage\n                    ? (\n                      <Avatar\n                        width=\"80px\"\n                        height=\"80px\"\n                        src={currentImage}\n                      />\n                    ) : (\n                      <div className=\"sendbird-create-open-channel-ui__profile-input__img-section__avatar--default\">\n                        <Icon\n                          type={IconTypes.CHANNELS}\n                          fillColor={IconColors.CONTENT}\n                          width=\"46px\"\n                          height=\"46px\"\n                        />\n                      </div>\n                    )}\n                </div>\n                <input\n                  className=\"sendbird-create-open-channel-ui__profile-input__img-section__input\"\n                  ref={inputFileRef}\n                  type=\"file\"\n                  accept=\"image/gif, image/jpeg, image/png\"\n                  style={{ display: 'none' }}\n                  onChange={(e) => {\n                    setCurrentImg(URL.createObjectURL(e.target.files[0]));\n                    setNewFile(e.target.files[0]);\n                    inputFileRef.current.value = '';\n                  }}\n                />\n                <TextButton\n                  className=\"sendbird-create-open-channel-ui__profile-input__img-section__button\"\n                  onClick={() => inputFileRef.current.click()}\n                  disableUnderline\n                >\n                  <Label\n                    type={LabelTypography.BUTTON_1}\n                    color={LabelColors.PRIMARY}\n                  >\n                    {stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD}\n                  </Label>\n                </TextButton>\n              </div>\n              <div style={{ marginTop: '20px' }}>\n                <InputLabel>\n                  {stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION}\n                </InputLabel>\n              </div>\n              <div className=\"sendbird-create-open-channel-ui__profile-input__name-section\">\n                <Input\n                  name=\"sendbird-create-open-channel-ui__profile-input__name-section__input\"\n                  ref={inputTextRef}\n                  placeHolder={stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER}\n                />\n              </div>\n            </form>\n          )}\n        </>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CreateOpenChannelUI;\n"],"names":["CreateOpenChannelUI","_a","closeModal","renderHeader","renderProfileInput","_b","useState","newFile","setNewFile","_c","currentImage","setCurrentImg","inputFormRef","useRef","inputFileRef","inputTextRef","stringSet","useContext","LocalizationContext","_d","useCreateOpenChannelContext","logger","createNewOpenChannel","React","Modal","CREATE_OPEN_CHANNEL_LIST__TITLE","CREATE_OPEN_CHANNEL_LIST__SUBMIT","ButtonTypes","PRIMARY","channelName","current","value","warning","name","coverUrlOrImage","e","preventDefault","InputLabel","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION","Avatar","Icon","IconTypes","CHANNELS","IconColors","CONTENT","display","URL","createObjectURL","target","files","TextButton","click","Label","LabelTypography","BUTTON_1","LabelColors","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD","marginTop","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION","Input","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER"],"mappings":"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"}